
Lab2_2.3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000022  00800100  00000d7e  00000e12  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d7e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000014  00800122  00800122  00000e34  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e34  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000e90  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000ed0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000959  00000000  00000000  00000f28  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000078a  00000000  00000000  00001881  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000406  00000000  00000000  0000200b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000128  00000000  00000000  00002414  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000439  00000000  00000000  0000253c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000250  00000000  00000000  00002975  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00002bc5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__vector_10>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 35 01 	jmp	0x26a	; 0x26a <__vector_13>
  38:	0c 94 4c 01 	jmp	0x298	; 0x298 <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e7       	ldi	r30, 0x7E	; 126
  7c:	fd e0       	ldi	r31, 0x0D	; 13
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 32       	cpi	r26, 0x22	; 34
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e2       	ldi	r26, 0x22	; 34
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a6 33       	cpi	r26, 0x36	; 54
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 b8 00 	call	0x170	; 0x170 <main>
  9e:	0c 94 bd 06 	jmp	0xd7a	; 0xd7a <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <uart_putchar>:
void uart_init(void);

static FILE uart_output = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);
static FILE uart_input = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);

int uart_putchar(char c, FILE *stream) {
  a6:	cf 93       	push	r28
  a8:	c8 2f       	mov	r28, r24
	if (c == '\n') {
  aa:	8a 30       	cpi	r24, 0x0A	; 10
  ac:	19 f4       	brne	.+6      	; 0xb4 <uart_putchar+0xe>
		uart_putchar('\r', stream);
  ae:	8d e0       	ldi	r24, 0x0D	; 13
  b0:	0e 94 53 00 	call	0xa6	; 0xa6 <uart_putchar>
	}
	loop_until_bit_is_set(UCSR0A, UDRE0);
  b4:	e0 ec       	ldi	r30, 0xC0	; 192
  b6:	f0 e0       	ldi	r31, 0x00	; 0
  b8:	80 81       	ld	r24, Z
  ba:	85 ff       	sbrs	r24, 5
  bc:	fd cf       	rjmp	.-6      	; 0xb8 <uart_putchar+0x12>
	UDR0 = c;
  be:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
}
  c2:	80 e0       	ldi	r24, 0x00	; 0
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	cf 91       	pop	r28
  c8:	08 95       	ret

000000ca <uart_getchar>:

int uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0); /* Wait until data exists. */
  ca:	e0 ec       	ldi	r30, 0xC0	; 192
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	80 81       	ld	r24, Z
  d0:	88 23       	and	r24, r24
  d2:	ec f7       	brge	.-6      	; 0xce <uart_getchar+0x4>
	return UDR0;
  d4:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	08 95       	ret

000000dc <uart_init>:

void uart_init(void) {
	UBRR0H = UBRRH_VALUE;
  dc:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = UBRRL_VALUE;
  e0:	87 e6       	ldi	r24, 0x67	; 103
  e2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>

	#if USE_2X
	UCSR0A |= _BV(U2X0);
	#else
	UCSR0A &= ~(_BV(U2X0));
  e6:	e0 ec       	ldi	r30, 0xC0	; 192
  e8:	f0 e0       	ldi	r31, 0x00	; 0
  ea:	80 81       	ld	r24, Z
  ec:	8d 7f       	andi	r24, 0xFD	; 253
  ee:	80 83       	st	Z, r24
	#endif

	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); /* 8-bit data */
  f0:	86 e0       	ldi	r24, 0x06	; 6
  f2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);   /* Enable RX and TX */
  f6:	88 e1       	ldi	r24, 0x18	; 24
  f8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>

    // Redirect stdin and stdout so functions like printf and getchar work.
	stdout = &uart_output;
  fc:	e0 e3       	ldi	r30, 0x30	; 48
  fe:	f1 e0       	ldi	r31, 0x01	; 1
 100:	80 e1       	ldi	r24, 0x10	; 16
 102:	91 e0       	ldi	r25, 0x01	; 1
 104:	93 83       	std	Z+3, r25	; 0x03
 106:	82 83       	std	Z+2, r24	; 0x02
	stdin = &uart_input;
 108:	82 e0       	ldi	r24, 0x02	; 2
 10a:	91 e0       	ldi	r25, 0x01	; 1
 10c:	91 83       	std	Z+1, r25	; 0x01
 10e:	80 83       	st	Z, r24
 110:	08 95       	ret

00000112 <output_length>:
	}
}

void output_length(void){
	
	if (value2 < value1){overflow--;} // get rid of extra flow count if value2 < value1 
 112:	20 91 2a 01 	lds	r18, 0x012A	; 0x80012a <value2>
 116:	30 91 2b 01 	lds	r19, 0x012B	; 0x80012b <value2+0x1>
 11a:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <value1>
 11e:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <value1+0x1>
 122:	28 17       	cp	r18, r24
 124:	39 07       	cpc	r19, r25
 126:	48 f4       	brcc	.+18     	; 0x13a <output_length+0x28>
 128:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <overflow>
 12c:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <overflow+0x1>
 130:	01 97       	sbiw	r24, 0x01	; 1
 132:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <overflow+0x1>
 136:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <overflow>
	
	diff = value2 - value1;
 13a:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <value2>
 13e:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <value2+0x1>
 142:	20 91 2c 01 	lds	r18, 0x012C	; 0x80012c <value1>
 146:	30 91 2d 01 	lds	r19, 0x012D	; 0x80012d <value1+0x1>
 14a:	82 1b       	sub	r24, r18
 14c:	93 0b       	sbc	r25, r19
 14e:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <diff+0x1>
 152:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <diff>
	
	pulse_width = (int)overflow * 65536u + (int)diff;
 156:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <overflow>
 15a:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <overflow+0x1>
 15e:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <diff>
 162:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <diff+0x1>
 166:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <pulse_width+0x1>
 16a:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <pulse_width>
 16e:	08 95       	ret

00000170 <main>:
void calculate_buzzer();


int main(void)
{
	uart_init();	// init UART
 170:	0e 94 6e 00 	call	0xdc	; 0xdc <uart_init>
	
	DDRB = 0x00;	// init PORTB to be all inputs
 174:	14 b8       	out	0x04, r1	; 4
	DDRC = 0xFF;	// init PORTC to be all outputs
 176:	8f ef       	ldi	r24, 0xFF	; 255
 178:	87 b9       	out	0x07, r24	; 7
	DDRD = 0xFF;	// init PORTD to be all outputs
 17a:	8a b9       	out	0x0a, r24	; 10
	
	TCCR1A = 0x00;	// init High byte to zero
 17c:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	TCCR1B = 0x00;  // init Mid byte to zero
 180:	e1 e8       	ldi	r30, 0x81	; 129
 182:	f0 e0       	ldi	r31, 0x00	; 0
 184:	10 82       	st	Z, r1
	TCCR1C = 0x00;	// init Low byte to zero
 186:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
	
	DDRB  |=  (1<<PORTB1);	// enable PB1 to be output channel
 18a:	21 9a       	sbi	0x04, 1	; 4
	DDRD  |=  (1 << PORTD6); 
 18c:	56 9a       	sbi	0x0a, 6	; 10
	DDRB  &= ~(1<<PORTB2);	// enable PB2 to be input channel
 18e:	22 98       	cbi	0x04, 2	; 4
	PORTB |=  (1<<PORTB1) | (1<<PORTB2) | (1<<PORTB5);// change PB1 PB2 to high
 190:	85 b1       	in	r24, 0x05	; 5
 192:	86 62       	ori	r24, 0x26	; 38
 194:	85 b9       	out	0x05, r24	; 5

	TIMSK1 |= (1<<ICIE1) | (1<<TOIE1);  // set overflow interrupt 
 196:	af e6       	ldi	r26, 0x6F	; 111
 198:	b0 e0       	ldi	r27, 0x00	; 0
 19a:	8c 91       	ld	r24, X
 19c:	81 62       	ori	r24, 0x21	; 33
 19e:	8c 93       	st	X, r24
	TCCR1B |= (1<<CS11 ) | (1<<ICES1);	// set clock prescale to 8 and enable rising edge capture
 1a0:	80 81       	ld	r24, Z
 1a2:	82 64       	ori	r24, 0x42	; 66
 1a4:	80 83       	st	Z, r24
	
	TCCR0A |= (1 << COM0A0) | (1 << WGM01); //Toggle OC1A on compare match;CTC mode
 1a6:	84 b5       	in	r24, 0x24	; 36
 1a8:	82 64       	ori	r24, 0x42	; 66
 1aa:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1 << CS02); // prescaler 64
 1ac:	85 b5       	in	r24, 0x25	; 37
 1ae:	84 60       	ori	r24, 0x04	; 4
 1b0:	85 bd       	out	0x25, r24	; 37
	
	
	TCNT0 = 0;
 1b2:	16 bc       	out	0x26, r1	; 38
	TCNT1 = 0;	// reset Counter 1
 1b4:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 1b8:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	sei();		// enable interrupt
 1bc:	78 94       	sei
	
	while (1)
	{
		if (TCNT1>= 9){		// counts 9 times to obtain 100kHz
 1be:	04 e8       	ldi	r16, 0x84	; 132
 1c0:	10 e0       	ldi	r17, 0x00	; 0
			PORTB ^= (1<<PORTB1);
 1c2:	68 94       	set
 1c4:	ff 24       	eor	r15, r15
 1c6:	f1 f8       	bld	r15, 1
			TCNT1 = 0;
			}
		output_length();
		TIMSK0 |= (1 << OCIE0A);
 1c8:	ce e6       	ldi	r28, 0x6E	; 110
 1ca:	d0 e0       	ldi	r29, 0x00	; 0
	TCNT1 = 0;	// reset Counter 1
	sei();		// enable interrupt
	
	while (1)
	{
		if (TCNT1>= 9){		// counts 9 times to obtain 100kHz
 1cc:	f8 01       	movw	r30, r16
 1ce:	80 81       	ld	r24, Z
 1d0:	91 81       	ldd	r25, Z+1	; 0x01
 1d2:	09 97       	sbiw	r24, 0x09	; 9
 1d4:	28 f0       	brcs	.+10     	; 0x1e0 <main+0x70>
			PORTB ^= (1<<PORTB1);
 1d6:	85 b1       	in	r24, 0x05	; 5
 1d8:	8f 25       	eor	r24, r15
 1da:	85 b9       	out	0x05, r24	; 5
			TCNT1 = 0;
 1dc:	11 82       	std	Z+1, r1	; 0x01
 1de:	10 82       	st	Z, r1
			}
		output_length();
 1e0:	0e 94 89 00 	call	0x112	; 0x112 <output_length>
		TIMSK0 |= (1 << OCIE0A);
 1e4:	88 81       	ld	r24, Y
 1e6:	82 60       	ori	r24, 0x02	; 2
 1e8:	88 83       	st	Y, r24
		if (TCNT0> (buzzer_count/2)){
			PORTD ^= (1<<PORTD6);
			TCNT0 = 0;
		}
		*/
	}
 1ea:	f0 cf       	rjmp	.-32     	; 0x1cc <main+0x5c>

000001ec <__vector_10>:
	//	printf("%d \n",-pulse_width); // print to serial
	//}
}


ISR(TIMER1_CAPT_vect){
 1ec:	1f 92       	push	r1
 1ee:	0f 92       	push	r0
 1f0:	0f b6       	in	r0, 0x3f	; 63
 1f2:	0f 92       	push	r0
 1f4:	11 24       	eor	r1, r1
 1f6:	8f 93       	push	r24
 1f8:	9f 93       	push	r25
 1fa:	ef 93       	push	r30
 1fc:	ff 93       	push	r31
	if (flag){
 1fe:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <flag>
 202:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <flag+0x1>
 206:	89 2b       	or	r24, r25
 208:	99 f0       	breq	.+38     	; 0x230 <__vector_10+0x44>
		TCCR1B |= (1<<ICES1);	// detect rising edge
 20a:	e1 e8       	ldi	r30, 0x81	; 129
 20c:	f0 e0       	ldi	r31, 0x00	; 0
 20e:	80 81       	ld	r24, Z
 210:	80 64       	ori	r24, 0x40	; 64
 212:	80 83       	st	Z, r24
		TIFR1 |= 0x20;			// clears flag
 214:	b5 9a       	sbi	0x16, 5	; 22
		value1 = ICR1;			// stores time 1
 216:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 21a:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 21e:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <value1+0x1>
 222:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <value1>
		flag = 0;
 226:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <flag+0x1>
 22a:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <flag>
 22e:	14 c0       	rjmp	.+40     	; 0x258 <__vector_10+0x6c>
	}
	else{
		TCCR1B &= ~(1<<ICES1);	// detect falling edge
 230:	e1 e8       	ldi	r30, 0x81	; 129
 232:	f0 e0       	ldi	r31, 0x00	; 0
 234:	80 81       	ld	r24, Z
 236:	8f 7b       	andi	r24, 0xBF	; 191
 238:	80 83       	st	Z, r24
		TIFR1 |= 0x20;			// clears flag
 23a:	b5 9a       	sbi	0x16, 5	; 22
		value2 = ICR1;			// stores time 2
 23c:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 240:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 244:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <value2+0x1>
 248:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <value2>
		flag = 1;
 24c:	81 e0       	ldi	r24, 0x01	; 1
 24e:	90 e0       	ldi	r25, 0x00	; 0
 250:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <flag+0x1>
 254:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <flag>
	}
}
 258:	ff 91       	pop	r31
 25a:	ef 91       	pop	r30
 25c:	9f 91       	pop	r25
 25e:	8f 91       	pop	r24
 260:	0f 90       	pop	r0
 262:	0f be       	out	0x3f, r0	; 63
 264:	0f 90       	pop	r0
 266:	1f 90       	pop	r1
 268:	18 95       	reti

0000026a <__vector_13>:

ISR(TIMER1_OVF_vect){
 26a:	1f 92       	push	r1
 26c:	0f 92       	push	r0
 26e:	0f b6       	in	r0, 0x3f	; 63
 270:	0f 92       	push	r0
 272:	11 24       	eor	r1, r1
 274:	8f 93       	push	r24
 276:	9f 93       	push	r25
	overflow++;					//count overflow
 278:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <overflow>
 27c:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <overflow+0x1>
 280:	01 96       	adiw	r24, 0x01	; 1
 282:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <overflow+0x1>
 286:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <overflow>
}
 28a:	9f 91       	pop	r25
 28c:	8f 91       	pop	r24
 28e:	0f 90       	pop	r0
 290:	0f be       	out	0x3f, r0	; 63
 292:	0f 90       	pop	r0
 294:	1f 90       	pop	r1
 296:	18 95       	reti

00000298 <__vector_14>:

ISR(TIMER0_COMPA_vect){
 298:	1f 92       	push	r1
 29a:	0f 92       	push	r0
 29c:	0f b6       	in	r0, 0x3f	; 63
 29e:	0f 92       	push	r0
 2a0:	11 24       	eor	r1, r1
 2a2:	2f 93       	push	r18
 2a4:	3f 93       	push	r19
 2a6:	4f 93       	push	r20
 2a8:	5f 93       	push	r21
 2aa:	6f 93       	push	r22
 2ac:	7f 93       	push	r23
 2ae:	8f 93       	push	r24
 2b0:	9f 93       	push	r25
 2b2:	af 93       	push	r26
 2b4:	bf 93       	push	r27
 2b6:	ef 93       	push	r30
 2b8:	ff 93       	push	r31
	temp_pulse = -pulse_width;
 2ba:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <pulse_width>
 2be:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <pulse_width+0x1>
 2c2:	91 95       	neg	r25
 2c4:	81 95       	neg	r24
 2c6:	91 09       	sbc	r25, r1
 2c8:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <__data_end+0x1>
 2cc:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <__data_end>
	if (temp_pulse<500){temp_pulse=500;}
 2d0:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <__data_end>
 2d4:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <__data_end+0x1>
 2d8:	84 3f       	cpi	r24, 0xF4	; 244
 2da:	91 40       	sbci	r25, 0x01	; 1
 2dc:	34 f4       	brge	.+12     	; 0x2ea <__vector_14+0x52>
 2de:	84 ef       	ldi	r24, 0xF4	; 244
 2e0:	91 e0       	ldi	r25, 0x01	; 1
 2e2:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <__data_end+0x1>
 2e6:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <__data_end>
	if (temp_pulse>5000){temp_pulse=5000;}
 2ea:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <__data_end>
 2ee:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <__data_end+0x1>
 2f2:	89 38       	cpi	r24, 0x89	; 137
 2f4:	93 41       	sbci	r25, 0x13	; 19
 2f6:	34 f0       	brlt	.+12     	; 0x304 <__vector_14+0x6c>
 2f8:	88 e8       	ldi	r24, 0x88	; 136
 2fa:	93 e1       	ldi	r25, 0x13	; 19
 2fc:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <__data_end+0x1>
 300:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <__data_end>
	buzzer_count = temp_pulse/5000.0f * 15 + 13;
 304:	60 91 22 01 	lds	r22, 0x0122	; 0x800122 <__data_end>
 308:	70 91 23 01 	lds	r23, 0x0123	; 0x800123 <__data_end+0x1>
 30c:	07 2e       	mov	r0, r23
 30e:	00 0c       	add	r0, r0
 310:	88 0b       	sbc	r24, r24
 312:	99 0b       	sbc	r25, r25
 314:	0e 94 e6 02 	call	0x5cc	; 0x5cc <__floatsisf>
 318:	20 e0       	ldi	r18, 0x00	; 0
 31a:	30 e4       	ldi	r19, 0x40	; 64
 31c:	4c e9       	ldi	r20, 0x9C	; 156
 31e:	55 e4       	ldi	r21, 0x45	; 69
 320:	0e 94 3c 02 	call	0x478	; 0x478 <__divsf3>
 324:	20 e0       	ldi	r18, 0x00	; 0
 326:	30 e0       	ldi	r19, 0x00	; 0
 328:	40 e7       	ldi	r20, 0x70	; 112
 32a:	51 e4       	ldi	r21, 0x41	; 65
 32c:	0e 94 72 03 	call	0x6e4	; 0x6e4 <__mulsf3>
 330:	20 e0       	ldi	r18, 0x00	; 0
 332:	30 e0       	ldi	r19, 0x00	; 0
 334:	40 e5       	ldi	r20, 0x50	; 80
 336:	51 e4       	ldi	r21, 0x41	; 65
 338:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <__addsf3>
 33c:	0e 94 ae 02 	call	0x55c	; 0x55c <__fixsfsi>
 340:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__data_start+0x1>
 344:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__data_start>

	OCR0A = buzzer_count;
 348:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 34c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 350:	87 bd       	out	0x27, r24	; 39
	printf("%d\n",buzzer_count);
 352:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 356:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 35a:	9f 93       	push	r25
 35c:	8f 93       	push	r24
 35e:	8e e1       	ldi	r24, 0x1E	; 30
 360:	91 e0       	ldi	r25, 0x01	; 1
 362:	9f 93       	push	r25
 364:	8f 93       	push	r24
 366:	0e 94 df 03 	call	0x7be	; 0x7be <printf>
	TIMSK0 &= ~(1 << OCIE0A);
 36a:	ee e6       	ldi	r30, 0x6E	; 110
 36c:	f0 e0       	ldi	r31, 0x00	; 0
 36e:	80 81       	ld	r24, Z
 370:	8d 7f       	andi	r24, 0xFD	; 253
 372:	80 83       	st	Z, r24
}
 374:	0f 90       	pop	r0
 376:	0f 90       	pop	r0
 378:	0f 90       	pop	r0
 37a:	0f 90       	pop	r0
 37c:	ff 91       	pop	r31
 37e:	ef 91       	pop	r30
 380:	bf 91       	pop	r27
 382:	af 91       	pop	r26
 384:	9f 91       	pop	r25
 386:	8f 91       	pop	r24
 388:	7f 91       	pop	r23
 38a:	6f 91       	pop	r22
 38c:	5f 91       	pop	r21
 38e:	4f 91       	pop	r20
 390:	3f 91       	pop	r19
 392:	2f 91       	pop	r18
 394:	0f 90       	pop	r0
 396:	0f be       	out	0x3f, r0	; 63
 398:	0f 90       	pop	r0
 39a:	1f 90       	pop	r1
 39c:	18 95       	reti

0000039e <__subsf3>:
 39e:	50 58       	subi	r21, 0x80	; 128

000003a0 <__addsf3>:
 3a0:	bb 27       	eor	r27, r27
 3a2:	aa 27       	eor	r26, r26
 3a4:	0e 94 e7 01 	call	0x3ce	; 0x3ce <__addsf3x>
 3a8:	0c 94 38 03 	jmp	0x670	; 0x670 <__fp_round>
 3ac:	0e 94 2a 03 	call	0x654	; 0x654 <__fp_pscA>
 3b0:	38 f0       	brcs	.+14     	; 0x3c0 <__addsf3+0x20>
 3b2:	0e 94 31 03 	call	0x662	; 0x662 <__fp_pscB>
 3b6:	20 f0       	brcs	.+8      	; 0x3c0 <__addsf3+0x20>
 3b8:	39 f4       	brne	.+14     	; 0x3c8 <__addsf3+0x28>
 3ba:	9f 3f       	cpi	r25, 0xFF	; 255
 3bc:	19 f4       	brne	.+6      	; 0x3c4 <__addsf3+0x24>
 3be:	26 f4       	brtc	.+8      	; 0x3c8 <__addsf3+0x28>
 3c0:	0c 94 27 03 	jmp	0x64e	; 0x64e <__fp_nan>
 3c4:	0e f4       	brtc	.+2      	; 0x3c8 <__addsf3+0x28>
 3c6:	e0 95       	com	r30
 3c8:	e7 fb       	bst	r30, 7
 3ca:	0c 94 21 03 	jmp	0x642	; 0x642 <__fp_inf>

000003ce <__addsf3x>:
 3ce:	e9 2f       	mov	r30, r25
 3d0:	0e 94 49 03 	call	0x692	; 0x692 <__fp_split3>
 3d4:	58 f3       	brcs	.-42     	; 0x3ac <__addsf3+0xc>
 3d6:	ba 17       	cp	r27, r26
 3d8:	62 07       	cpc	r22, r18
 3da:	73 07       	cpc	r23, r19
 3dc:	84 07       	cpc	r24, r20
 3de:	95 07       	cpc	r25, r21
 3e0:	20 f0       	brcs	.+8      	; 0x3ea <__addsf3x+0x1c>
 3e2:	79 f4       	brne	.+30     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3e4:	a6 f5       	brtc	.+104    	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 3e6:	0c 94 6b 03 	jmp	0x6d6	; 0x6d6 <__fp_zero>
 3ea:	0e f4       	brtc	.+2      	; 0x3ee <__addsf3x+0x20>
 3ec:	e0 95       	com	r30
 3ee:	0b 2e       	mov	r0, r27
 3f0:	ba 2f       	mov	r27, r26
 3f2:	a0 2d       	mov	r26, r0
 3f4:	0b 01       	movw	r0, r22
 3f6:	b9 01       	movw	r22, r18
 3f8:	90 01       	movw	r18, r0
 3fa:	0c 01       	movw	r0, r24
 3fc:	ca 01       	movw	r24, r20
 3fe:	a0 01       	movw	r20, r0
 400:	11 24       	eor	r1, r1
 402:	ff 27       	eor	r31, r31
 404:	59 1b       	sub	r21, r25
 406:	99 f0       	breq	.+38     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 408:	59 3f       	cpi	r21, 0xF9	; 249
 40a:	50 f4       	brcc	.+20     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 40c:	50 3e       	cpi	r21, 0xE0	; 224
 40e:	68 f1       	brcs	.+90     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 410:	1a 16       	cp	r1, r26
 412:	f0 40       	sbci	r31, 0x00	; 0
 414:	a2 2f       	mov	r26, r18
 416:	23 2f       	mov	r18, r19
 418:	34 2f       	mov	r19, r20
 41a:	44 27       	eor	r20, r20
 41c:	58 5f       	subi	r21, 0xF8	; 248
 41e:	f3 cf       	rjmp	.-26     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 420:	46 95       	lsr	r20
 422:	37 95       	ror	r19
 424:	27 95       	ror	r18
 426:	a7 95       	ror	r26
 428:	f0 40       	sbci	r31, 0x00	; 0
 42a:	53 95       	inc	r21
 42c:	c9 f7       	brne	.-14     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 42e:	7e f4       	brtc	.+30     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 430:	1f 16       	cp	r1, r31
 432:	ba 0b       	sbc	r27, r26
 434:	62 0b       	sbc	r22, r18
 436:	73 0b       	sbc	r23, r19
 438:	84 0b       	sbc	r24, r20
 43a:	ba f0       	brmi	.+46     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 43c:	91 50       	subi	r25, 0x01	; 1
 43e:	a1 f0       	breq	.+40     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 440:	ff 0f       	add	r31, r31
 442:	bb 1f       	adc	r27, r27
 444:	66 1f       	adc	r22, r22
 446:	77 1f       	adc	r23, r23
 448:	88 1f       	adc	r24, r24
 44a:	c2 f7       	brpl	.-16     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 44c:	0e c0       	rjmp	.+28     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 44e:	ba 0f       	add	r27, r26
 450:	62 1f       	adc	r22, r18
 452:	73 1f       	adc	r23, r19
 454:	84 1f       	adc	r24, r20
 456:	48 f4       	brcc	.+18     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 458:	87 95       	ror	r24
 45a:	77 95       	ror	r23
 45c:	67 95       	ror	r22
 45e:	b7 95       	ror	r27
 460:	f7 95       	ror	r31
 462:	9e 3f       	cpi	r25, 0xFE	; 254
 464:	08 f0       	brcs	.+2      	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 466:	b0 cf       	rjmp	.-160    	; 0x3c8 <__addsf3+0x28>
 468:	93 95       	inc	r25
 46a:	88 0f       	add	r24, r24
 46c:	08 f0       	brcs	.+2      	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 46e:	99 27       	eor	r25, r25
 470:	ee 0f       	add	r30, r30
 472:	97 95       	ror	r25
 474:	87 95       	ror	r24
 476:	08 95       	ret

00000478 <__divsf3>:
 478:	0e 94 50 02 	call	0x4a0	; 0x4a0 <__divsf3x>
 47c:	0c 94 38 03 	jmp	0x670	; 0x670 <__fp_round>
 480:	0e 94 31 03 	call	0x662	; 0x662 <__fp_pscB>
 484:	58 f0       	brcs	.+22     	; 0x49c <__divsf3+0x24>
 486:	0e 94 2a 03 	call	0x654	; 0x654 <__fp_pscA>
 48a:	40 f0       	brcs	.+16     	; 0x49c <__divsf3+0x24>
 48c:	29 f4       	brne	.+10     	; 0x498 <__divsf3+0x20>
 48e:	5f 3f       	cpi	r21, 0xFF	; 255
 490:	29 f0       	breq	.+10     	; 0x49c <__divsf3+0x24>
 492:	0c 94 21 03 	jmp	0x642	; 0x642 <__fp_inf>
 496:	51 11       	cpse	r21, r1
 498:	0c 94 6c 03 	jmp	0x6d8	; 0x6d8 <__fp_szero>
 49c:	0c 94 27 03 	jmp	0x64e	; 0x64e <__fp_nan>

000004a0 <__divsf3x>:
 4a0:	0e 94 49 03 	call	0x692	; 0x692 <__fp_split3>
 4a4:	68 f3       	brcs	.-38     	; 0x480 <__divsf3+0x8>

000004a6 <__divsf3_pse>:
 4a6:	99 23       	and	r25, r25
 4a8:	b1 f3       	breq	.-20     	; 0x496 <__divsf3+0x1e>
 4aa:	55 23       	and	r21, r21
 4ac:	91 f3       	breq	.-28     	; 0x492 <__divsf3+0x1a>
 4ae:	95 1b       	sub	r25, r21
 4b0:	55 0b       	sbc	r21, r21
 4b2:	bb 27       	eor	r27, r27
 4b4:	aa 27       	eor	r26, r26
 4b6:	62 17       	cp	r22, r18
 4b8:	73 07       	cpc	r23, r19
 4ba:	84 07       	cpc	r24, r20
 4bc:	38 f0       	brcs	.+14     	; 0x4cc <__divsf3_pse+0x26>
 4be:	9f 5f       	subi	r25, 0xFF	; 255
 4c0:	5f 4f       	sbci	r21, 0xFF	; 255
 4c2:	22 0f       	add	r18, r18
 4c4:	33 1f       	adc	r19, r19
 4c6:	44 1f       	adc	r20, r20
 4c8:	aa 1f       	adc	r26, r26
 4ca:	a9 f3       	breq	.-22     	; 0x4b6 <__divsf3_pse+0x10>
 4cc:	35 d0       	rcall	.+106    	; 0x538 <__divsf3_pse+0x92>
 4ce:	0e 2e       	mov	r0, r30
 4d0:	3a f0       	brmi	.+14     	; 0x4e0 <__divsf3_pse+0x3a>
 4d2:	e0 e8       	ldi	r30, 0x80	; 128
 4d4:	32 d0       	rcall	.+100    	; 0x53a <__divsf3_pse+0x94>
 4d6:	91 50       	subi	r25, 0x01	; 1
 4d8:	50 40       	sbci	r21, 0x00	; 0
 4da:	e6 95       	lsr	r30
 4dc:	00 1c       	adc	r0, r0
 4de:	ca f7       	brpl	.-14     	; 0x4d2 <__divsf3_pse+0x2c>
 4e0:	2b d0       	rcall	.+86     	; 0x538 <__divsf3_pse+0x92>
 4e2:	fe 2f       	mov	r31, r30
 4e4:	29 d0       	rcall	.+82     	; 0x538 <__divsf3_pse+0x92>
 4e6:	66 0f       	add	r22, r22
 4e8:	77 1f       	adc	r23, r23
 4ea:	88 1f       	adc	r24, r24
 4ec:	bb 1f       	adc	r27, r27
 4ee:	26 17       	cp	r18, r22
 4f0:	37 07       	cpc	r19, r23
 4f2:	48 07       	cpc	r20, r24
 4f4:	ab 07       	cpc	r26, r27
 4f6:	b0 e8       	ldi	r27, 0x80	; 128
 4f8:	09 f0       	breq	.+2      	; 0x4fc <__divsf3_pse+0x56>
 4fa:	bb 0b       	sbc	r27, r27
 4fc:	80 2d       	mov	r24, r0
 4fe:	bf 01       	movw	r22, r30
 500:	ff 27       	eor	r31, r31
 502:	93 58       	subi	r25, 0x83	; 131
 504:	5f 4f       	sbci	r21, 0xFF	; 255
 506:	3a f0       	brmi	.+14     	; 0x516 <__divsf3_pse+0x70>
 508:	9e 3f       	cpi	r25, 0xFE	; 254
 50a:	51 05       	cpc	r21, r1
 50c:	78 f0       	brcs	.+30     	; 0x52c <__divsf3_pse+0x86>
 50e:	0c 94 21 03 	jmp	0x642	; 0x642 <__fp_inf>
 512:	0c 94 6c 03 	jmp	0x6d8	; 0x6d8 <__fp_szero>
 516:	5f 3f       	cpi	r21, 0xFF	; 255
 518:	e4 f3       	brlt	.-8      	; 0x512 <__divsf3_pse+0x6c>
 51a:	98 3e       	cpi	r25, 0xE8	; 232
 51c:	d4 f3       	brlt	.-12     	; 0x512 <__divsf3_pse+0x6c>
 51e:	86 95       	lsr	r24
 520:	77 95       	ror	r23
 522:	67 95       	ror	r22
 524:	b7 95       	ror	r27
 526:	f7 95       	ror	r31
 528:	9f 5f       	subi	r25, 0xFF	; 255
 52a:	c9 f7       	brne	.-14     	; 0x51e <__divsf3_pse+0x78>
 52c:	88 0f       	add	r24, r24
 52e:	91 1d       	adc	r25, r1
 530:	96 95       	lsr	r25
 532:	87 95       	ror	r24
 534:	97 f9       	bld	r25, 7
 536:	08 95       	ret
 538:	e1 e0       	ldi	r30, 0x01	; 1
 53a:	66 0f       	add	r22, r22
 53c:	77 1f       	adc	r23, r23
 53e:	88 1f       	adc	r24, r24
 540:	bb 1f       	adc	r27, r27
 542:	62 17       	cp	r22, r18
 544:	73 07       	cpc	r23, r19
 546:	84 07       	cpc	r24, r20
 548:	ba 07       	cpc	r27, r26
 54a:	20 f0       	brcs	.+8      	; 0x554 <__divsf3_pse+0xae>
 54c:	62 1b       	sub	r22, r18
 54e:	73 0b       	sbc	r23, r19
 550:	84 0b       	sbc	r24, r20
 552:	ba 0b       	sbc	r27, r26
 554:	ee 1f       	adc	r30, r30
 556:	88 f7       	brcc	.-30     	; 0x53a <__divsf3_pse+0x94>
 558:	e0 95       	com	r30
 55a:	08 95       	ret

0000055c <__fixsfsi>:
 55c:	0e 94 b5 02 	call	0x56a	; 0x56a <__fixunssfsi>
 560:	68 94       	set
 562:	b1 11       	cpse	r27, r1
 564:	0c 94 6c 03 	jmp	0x6d8	; 0x6d8 <__fp_szero>
 568:	08 95       	ret

0000056a <__fixunssfsi>:
 56a:	0e 94 51 03 	call	0x6a2	; 0x6a2 <__fp_splitA>
 56e:	88 f0       	brcs	.+34     	; 0x592 <__fixunssfsi+0x28>
 570:	9f 57       	subi	r25, 0x7F	; 127
 572:	98 f0       	brcs	.+38     	; 0x59a <__fixunssfsi+0x30>
 574:	b9 2f       	mov	r27, r25
 576:	99 27       	eor	r25, r25
 578:	b7 51       	subi	r27, 0x17	; 23
 57a:	b0 f0       	brcs	.+44     	; 0x5a8 <__fixunssfsi+0x3e>
 57c:	e1 f0       	breq	.+56     	; 0x5b6 <__fixunssfsi+0x4c>
 57e:	66 0f       	add	r22, r22
 580:	77 1f       	adc	r23, r23
 582:	88 1f       	adc	r24, r24
 584:	99 1f       	adc	r25, r25
 586:	1a f0       	brmi	.+6      	; 0x58e <__fixunssfsi+0x24>
 588:	ba 95       	dec	r27
 58a:	c9 f7       	brne	.-14     	; 0x57e <__fixunssfsi+0x14>
 58c:	14 c0       	rjmp	.+40     	; 0x5b6 <__fixunssfsi+0x4c>
 58e:	b1 30       	cpi	r27, 0x01	; 1
 590:	91 f0       	breq	.+36     	; 0x5b6 <__fixunssfsi+0x4c>
 592:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <__fp_zero>
 596:	b1 e0       	ldi	r27, 0x01	; 1
 598:	08 95       	ret
 59a:	0c 94 6b 03 	jmp	0x6d6	; 0x6d6 <__fp_zero>
 59e:	67 2f       	mov	r22, r23
 5a0:	78 2f       	mov	r23, r24
 5a2:	88 27       	eor	r24, r24
 5a4:	b8 5f       	subi	r27, 0xF8	; 248
 5a6:	39 f0       	breq	.+14     	; 0x5b6 <__fixunssfsi+0x4c>
 5a8:	b9 3f       	cpi	r27, 0xF9	; 249
 5aa:	cc f3       	brlt	.-14     	; 0x59e <__fixunssfsi+0x34>
 5ac:	86 95       	lsr	r24
 5ae:	77 95       	ror	r23
 5b0:	67 95       	ror	r22
 5b2:	b3 95       	inc	r27
 5b4:	d9 f7       	brne	.-10     	; 0x5ac <__fixunssfsi+0x42>
 5b6:	3e f4       	brtc	.+14     	; 0x5c6 <__fixunssfsi+0x5c>
 5b8:	90 95       	com	r25
 5ba:	80 95       	com	r24
 5bc:	70 95       	com	r23
 5be:	61 95       	neg	r22
 5c0:	7f 4f       	sbci	r23, 0xFF	; 255
 5c2:	8f 4f       	sbci	r24, 0xFF	; 255
 5c4:	9f 4f       	sbci	r25, 0xFF	; 255
 5c6:	08 95       	ret

000005c8 <__floatunsisf>:
 5c8:	e8 94       	clt
 5ca:	09 c0       	rjmp	.+18     	; 0x5de <__floatsisf+0x12>

000005cc <__floatsisf>:
 5cc:	97 fb       	bst	r25, 7
 5ce:	3e f4       	brtc	.+14     	; 0x5de <__floatsisf+0x12>
 5d0:	90 95       	com	r25
 5d2:	80 95       	com	r24
 5d4:	70 95       	com	r23
 5d6:	61 95       	neg	r22
 5d8:	7f 4f       	sbci	r23, 0xFF	; 255
 5da:	8f 4f       	sbci	r24, 0xFF	; 255
 5dc:	9f 4f       	sbci	r25, 0xFF	; 255
 5de:	99 23       	and	r25, r25
 5e0:	a9 f0       	breq	.+42     	; 0x60c <__floatsisf+0x40>
 5e2:	f9 2f       	mov	r31, r25
 5e4:	96 e9       	ldi	r25, 0x96	; 150
 5e6:	bb 27       	eor	r27, r27
 5e8:	93 95       	inc	r25
 5ea:	f6 95       	lsr	r31
 5ec:	87 95       	ror	r24
 5ee:	77 95       	ror	r23
 5f0:	67 95       	ror	r22
 5f2:	b7 95       	ror	r27
 5f4:	f1 11       	cpse	r31, r1
 5f6:	f8 cf       	rjmp	.-16     	; 0x5e8 <__floatsisf+0x1c>
 5f8:	fa f4       	brpl	.+62     	; 0x638 <__floatsisf+0x6c>
 5fa:	bb 0f       	add	r27, r27
 5fc:	11 f4       	brne	.+4      	; 0x602 <__floatsisf+0x36>
 5fe:	60 ff       	sbrs	r22, 0
 600:	1b c0       	rjmp	.+54     	; 0x638 <__floatsisf+0x6c>
 602:	6f 5f       	subi	r22, 0xFF	; 255
 604:	7f 4f       	sbci	r23, 0xFF	; 255
 606:	8f 4f       	sbci	r24, 0xFF	; 255
 608:	9f 4f       	sbci	r25, 0xFF	; 255
 60a:	16 c0       	rjmp	.+44     	; 0x638 <__floatsisf+0x6c>
 60c:	88 23       	and	r24, r24
 60e:	11 f0       	breq	.+4      	; 0x614 <__floatsisf+0x48>
 610:	96 e9       	ldi	r25, 0x96	; 150
 612:	11 c0       	rjmp	.+34     	; 0x636 <__floatsisf+0x6a>
 614:	77 23       	and	r23, r23
 616:	21 f0       	breq	.+8      	; 0x620 <__floatsisf+0x54>
 618:	9e e8       	ldi	r25, 0x8E	; 142
 61a:	87 2f       	mov	r24, r23
 61c:	76 2f       	mov	r23, r22
 61e:	05 c0       	rjmp	.+10     	; 0x62a <__floatsisf+0x5e>
 620:	66 23       	and	r22, r22
 622:	71 f0       	breq	.+28     	; 0x640 <__floatsisf+0x74>
 624:	96 e8       	ldi	r25, 0x86	; 134
 626:	86 2f       	mov	r24, r22
 628:	70 e0       	ldi	r23, 0x00	; 0
 62a:	60 e0       	ldi	r22, 0x00	; 0
 62c:	2a f0       	brmi	.+10     	; 0x638 <__floatsisf+0x6c>
 62e:	9a 95       	dec	r25
 630:	66 0f       	add	r22, r22
 632:	77 1f       	adc	r23, r23
 634:	88 1f       	adc	r24, r24
 636:	da f7       	brpl	.-10     	; 0x62e <__floatsisf+0x62>
 638:	88 0f       	add	r24, r24
 63a:	96 95       	lsr	r25
 63c:	87 95       	ror	r24
 63e:	97 f9       	bld	r25, 7
 640:	08 95       	ret

00000642 <__fp_inf>:
 642:	97 f9       	bld	r25, 7
 644:	9f 67       	ori	r25, 0x7F	; 127
 646:	80 e8       	ldi	r24, 0x80	; 128
 648:	70 e0       	ldi	r23, 0x00	; 0
 64a:	60 e0       	ldi	r22, 0x00	; 0
 64c:	08 95       	ret

0000064e <__fp_nan>:
 64e:	9f ef       	ldi	r25, 0xFF	; 255
 650:	80 ec       	ldi	r24, 0xC0	; 192
 652:	08 95       	ret

00000654 <__fp_pscA>:
 654:	00 24       	eor	r0, r0
 656:	0a 94       	dec	r0
 658:	16 16       	cp	r1, r22
 65a:	17 06       	cpc	r1, r23
 65c:	18 06       	cpc	r1, r24
 65e:	09 06       	cpc	r0, r25
 660:	08 95       	ret

00000662 <__fp_pscB>:
 662:	00 24       	eor	r0, r0
 664:	0a 94       	dec	r0
 666:	12 16       	cp	r1, r18
 668:	13 06       	cpc	r1, r19
 66a:	14 06       	cpc	r1, r20
 66c:	05 06       	cpc	r0, r21
 66e:	08 95       	ret

00000670 <__fp_round>:
 670:	09 2e       	mov	r0, r25
 672:	03 94       	inc	r0
 674:	00 0c       	add	r0, r0
 676:	11 f4       	brne	.+4      	; 0x67c <__fp_round+0xc>
 678:	88 23       	and	r24, r24
 67a:	52 f0       	brmi	.+20     	; 0x690 <__fp_round+0x20>
 67c:	bb 0f       	add	r27, r27
 67e:	40 f4       	brcc	.+16     	; 0x690 <__fp_round+0x20>
 680:	bf 2b       	or	r27, r31
 682:	11 f4       	brne	.+4      	; 0x688 <__fp_round+0x18>
 684:	60 ff       	sbrs	r22, 0
 686:	04 c0       	rjmp	.+8      	; 0x690 <__fp_round+0x20>
 688:	6f 5f       	subi	r22, 0xFF	; 255
 68a:	7f 4f       	sbci	r23, 0xFF	; 255
 68c:	8f 4f       	sbci	r24, 0xFF	; 255
 68e:	9f 4f       	sbci	r25, 0xFF	; 255
 690:	08 95       	ret

00000692 <__fp_split3>:
 692:	57 fd       	sbrc	r21, 7
 694:	90 58       	subi	r25, 0x80	; 128
 696:	44 0f       	add	r20, r20
 698:	55 1f       	adc	r21, r21
 69a:	59 f0       	breq	.+22     	; 0x6b2 <__fp_splitA+0x10>
 69c:	5f 3f       	cpi	r21, 0xFF	; 255
 69e:	71 f0       	breq	.+28     	; 0x6bc <__fp_splitA+0x1a>
 6a0:	47 95       	ror	r20

000006a2 <__fp_splitA>:
 6a2:	88 0f       	add	r24, r24
 6a4:	97 fb       	bst	r25, 7
 6a6:	99 1f       	adc	r25, r25
 6a8:	61 f0       	breq	.+24     	; 0x6c2 <__fp_splitA+0x20>
 6aa:	9f 3f       	cpi	r25, 0xFF	; 255
 6ac:	79 f0       	breq	.+30     	; 0x6cc <__fp_splitA+0x2a>
 6ae:	87 95       	ror	r24
 6b0:	08 95       	ret
 6b2:	12 16       	cp	r1, r18
 6b4:	13 06       	cpc	r1, r19
 6b6:	14 06       	cpc	r1, r20
 6b8:	55 1f       	adc	r21, r21
 6ba:	f2 cf       	rjmp	.-28     	; 0x6a0 <__fp_split3+0xe>
 6bc:	46 95       	lsr	r20
 6be:	f1 df       	rcall	.-30     	; 0x6a2 <__fp_splitA>
 6c0:	08 c0       	rjmp	.+16     	; 0x6d2 <__fp_splitA+0x30>
 6c2:	16 16       	cp	r1, r22
 6c4:	17 06       	cpc	r1, r23
 6c6:	18 06       	cpc	r1, r24
 6c8:	99 1f       	adc	r25, r25
 6ca:	f1 cf       	rjmp	.-30     	; 0x6ae <__fp_splitA+0xc>
 6cc:	86 95       	lsr	r24
 6ce:	71 05       	cpc	r23, r1
 6d0:	61 05       	cpc	r22, r1
 6d2:	08 94       	sec
 6d4:	08 95       	ret

000006d6 <__fp_zero>:
 6d6:	e8 94       	clt

000006d8 <__fp_szero>:
 6d8:	bb 27       	eor	r27, r27
 6da:	66 27       	eor	r22, r22
 6dc:	77 27       	eor	r23, r23
 6de:	cb 01       	movw	r24, r22
 6e0:	97 f9       	bld	r25, 7
 6e2:	08 95       	ret

000006e4 <__mulsf3>:
 6e4:	0e 94 85 03 	call	0x70a	; 0x70a <__mulsf3x>
 6e8:	0c 94 38 03 	jmp	0x670	; 0x670 <__fp_round>
 6ec:	0e 94 2a 03 	call	0x654	; 0x654 <__fp_pscA>
 6f0:	38 f0       	brcs	.+14     	; 0x700 <__mulsf3+0x1c>
 6f2:	0e 94 31 03 	call	0x662	; 0x662 <__fp_pscB>
 6f6:	20 f0       	brcs	.+8      	; 0x700 <__mulsf3+0x1c>
 6f8:	95 23       	and	r25, r21
 6fa:	11 f0       	breq	.+4      	; 0x700 <__mulsf3+0x1c>
 6fc:	0c 94 21 03 	jmp	0x642	; 0x642 <__fp_inf>
 700:	0c 94 27 03 	jmp	0x64e	; 0x64e <__fp_nan>
 704:	11 24       	eor	r1, r1
 706:	0c 94 6c 03 	jmp	0x6d8	; 0x6d8 <__fp_szero>

0000070a <__mulsf3x>:
 70a:	0e 94 49 03 	call	0x692	; 0x692 <__fp_split3>
 70e:	70 f3       	brcs	.-36     	; 0x6ec <__mulsf3+0x8>

00000710 <__mulsf3_pse>:
 710:	95 9f       	mul	r25, r21
 712:	c1 f3       	breq	.-16     	; 0x704 <__mulsf3+0x20>
 714:	95 0f       	add	r25, r21
 716:	50 e0       	ldi	r21, 0x00	; 0
 718:	55 1f       	adc	r21, r21
 71a:	62 9f       	mul	r22, r18
 71c:	f0 01       	movw	r30, r0
 71e:	72 9f       	mul	r23, r18
 720:	bb 27       	eor	r27, r27
 722:	f0 0d       	add	r31, r0
 724:	b1 1d       	adc	r27, r1
 726:	63 9f       	mul	r22, r19
 728:	aa 27       	eor	r26, r26
 72a:	f0 0d       	add	r31, r0
 72c:	b1 1d       	adc	r27, r1
 72e:	aa 1f       	adc	r26, r26
 730:	64 9f       	mul	r22, r20
 732:	66 27       	eor	r22, r22
 734:	b0 0d       	add	r27, r0
 736:	a1 1d       	adc	r26, r1
 738:	66 1f       	adc	r22, r22
 73a:	82 9f       	mul	r24, r18
 73c:	22 27       	eor	r18, r18
 73e:	b0 0d       	add	r27, r0
 740:	a1 1d       	adc	r26, r1
 742:	62 1f       	adc	r22, r18
 744:	73 9f       	mul	r23, r19
 746:	b0 0d       	add	r27, r0
 748:	a1 1d       	adc	r26, r1
 74a:	62 1f       	adc	r22, r18
 74c:	83 9f       	mul	r24, r19
 74e:	a0 0d       	add	r26, r0
 750:	61 1d       	adc	r22, r1
 752:	22 1f       	adc	r18, r18
 754:	74 9f       	mul	r23, r20
 756:	33 27       	eor	r19, r19
 758:	a0 0d       	add	r26, r0
 75a:	61 1d       	adc	r22, r1
 75c:	23 1f       	adc	r18, r19
 75e:	84 9f       	mul	r24, r20
 760:	60 0d       	add	r22, r0
 762:	21 1d       	adc	r18, r1
 764:	82 2f       	mov	r24, r18
 766:	76 2f       	mov	r23, r22
 768:	6a 2f       	mov	r22, r26
 76a:	11 24       	eor	r1, r1
 76c:	9f 57       	subi	r25, 0x7F	; 127
 76e:	50 40       	sbci	r21, 0x00	; 0
 770:	9a f0       	brmi	.+38     	; 0x798 <__mulsf3_pse+0x88>
 772:	f1 f0       	breq	.+60     	; 0x7b0 <__mulsf3_pse+0xa0>
 774:	88 23       	and	r24, r24
 776:	4a f0       	brmi	.+18     	; 0x78a <__mulsf3_pse+0x7a>
 778:	ee 0f       	add	r30, r30
 77a:	ff 1f       	adc	r31, r31
 77c:	bb 1f       	adc	r27, r27
 77e:	66 1f       	adc	r22, r22
 780:	77 1f       	adc	r23, r23
 782:	88 1f       	adc	r24, r24
 784:	91 50       	subi	r25, 0x01	; 1
 786:	50 40       	sbci	r21, 0x00	; 0
 788:	a9 f7       	brne	.-22     	; 0x774 <__mulsf3_pse+0x64>
 78a:	9e 3f       	cpi	r25, 0xFE	; 254
 78c:	51 05       	cpc	r21, r1
 78e:	80 f0       	brcs	.+32     	; 0x7b0 <__mulsf3_pse+0xa0>
 790:	0c 94 21 03 	jmp	0x642	; 0x642 <__fp_inf>
 794:	0c 94 6c 03 	jmp	0x6d8	; 0x6d8 <__fp_szero>
 798:	5f 3f       	cpi	r21, 0xFF	; 255
 79a:	e4 f3       	brlt	.-8      	; 0x794 <__mulsf3_pse+0x84>
 79c:	98 3e       	cpi	r25, 0xE8	; 232
 79e:	d4 f3       	brlt	.-12     	; 0x794 <__mulsf3_pse+0x84>
 7a0:	86 95       	lsr	r24
 7a2:	77 95       	ror	r23
 7a4:	67 95       	ror	r22
 7a6:	b7 95       	ror	r27
 7a8:	f7 95       	ror	r31
 7aa:	e7 95       	ror	r30
 7ac:	9f 5f       	subi	r25, 0xFF	; 255
 7ae:	c1 f7       	brne	.-16     	; 0x7a0 <__mulsf3_pse+0x90>
 7b0:	fe 2b       	or	r31, r30
 7b2:	88 0f       	add	r24, r24
 7b4:	91 1d       	adc	r25, r1
 7b6:	96 95       	lsr	r25
 7b8:	87 95       	ror	r24
 7ba:	97 f9       	bld	r25, 7
 7bc:	08 95       	ret

000007be <printf>:
 7be:	a0 e0       	ldi	r26, 0x00	; 0
 7c0:	b0 e0       	ldi	r27, 0x00	; 0
 7c2:	e5 ee       	ldi	r30, 0xE5	; 229
 7c4:	f3 e0       	ldi	r31, 0x03	; 3
 7c6:	0c 94 96 06 	jmp	0xd2c	; 0xd2c <__prologue_saves__+0x20>
 7ca:	ae 01       	movw	r20, r28
 7cc:	4b 5f       	subi	r20, 0xFB	; 251
 7ce:	5f 4f       	sbci	r21, 0xFF	; 255
 7d0:	fa 01       	movw	r30, r20
 7d2:	61 91       	ld	r22, Z+
 7d4:	71 91       	ld	r23, Z+
 7d6:	af 01       	movw	r20, r30
 7d8:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <__iob+0x2>
 7dc:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <__iob+0x3>
 7e0:	0e 94 f5 03 	call	0x7ea	; 0x7ea <vfprintf>
 7e4:	e2 e0       	ldi	r30, 0x02	; 2
 7e6:	0c 94 b2 06 	jmp	0xd64	; 0xd64 <__epilogue_restores__+0x20>

000007ea <vfprintf>:
 7ea:	ab e0       	ldi	r26, 0x0B	; 11
 7ec:	b0 e0       	ldi	r27, 0x00	; 0
 7ee:	eb ef       	ldi	r30, 0xFB	; 251
 7f0:	f3 e0       	ldi	r31, 0x03	; 3
 7f2:	0c 94 86 06 	jmp	0xd0c	; 0xd0c <__prologue_saves__>
 7f6:	6c 01       	movw	r12, r24
 7f8:	7b 01       	movw	r14, r22
 7fa:	8a 01       	movw	r16, r20
 7fc:	fc 01       	movw	r30, r24
 7fe:	17 82       	std	Z+7, r1	; 0x07
 800:	16 82       	std	Z+6, r1	; 0x06
 802:	83 81       	ldd	r24, Z+3	; 0x03
 804:	81 ff       	sbrs	r24, 1
 806:	cc c1       	rjmp	.+920    	; 0xba0 <__stack+0x2a1>
 808:	ce 01       	movw	r24, r28
 80a:	01 96       	adiw	r24, 0x01	; 1
 80c:	3c 01       	movw	r6, r24
 80e:	f6 01       	movw	r30, r12
 810:	93 81       	ldd	r25, Z+3	; 0x03
 812:	f7 01       	movw	r30, r14
 814:	93 fd       	sbrc	r25, 3
 816:	85 91       	lpm	r24, Z+
 818:	93 ff       	sbrs	r25, 3
 81a:	81 91       	ld	r24, Z+
 81c:	7f 01       	movw	r14, r30
 81e:	88 23       	and	r24, r24
 820:	09 f4       	brne	.+2      	; 0x824 <vfprintf+0x3a>
 822:	ba c1       	rjmp	.+884    	; 0xb98 <__stack+0x299>
 824:	85 32       	cpi	r24, 0x25	; 37
 826:	39 f4       	brne	.+14     	; 0x836 <vfprintf+0x4c>
 828:	93 fd       	sbrc	r25, 3
 82a:	85 91       	lpm	r24, Z+
 82c:	93 ff       	sbrs	r25, 3
 82e:	81 91       	ld	r24, Z+
 830:	7f 01       	movw	r14, r30
 832:	85 32       	cpi	r24, 0x25	; 37
 834:	29 f4       	brne	.+10     	; 0x840 <vfprintf+0x56>
 836:	b6 01       	movw	r22, r12
 838:	90 e0       	ldi	r25, 0x00	; 0
 83a:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <fputc>
 83e:	e7 cf       	rjmp	.-50     	; 0x80e <vfprintf+0x24>
 840:	91 2c       	mov	r9, r1
 842:	21 2c       	mov	r2, r1
 844:	31 2c       	mov	r3, r1
 846:	ff e1       	ldi	r31, 0x1F	; 31
 848:	f3 15       	cp	r31, r3
 84a:	d8 f0       	brcs	.+54     	; 0x882 <vfprintf+0x98>
 84c:	8b 32       	cpi	r24, 0x2B	; 43
 84e:	79 f0       	breq	.+30     	; 0x86e <vfprintf+0x84>
 850:	38 f4       	brcc	.+14     	; 0x860 <vfprintf+0x76>
 852:	80 32       	cpi	r24, 0x20	; 32
 854:	79 f0       	breq	.+30     	; 0x874 <vfprintf+0x8a>
 856:	83 32       	cpi	r24, 0x23	; 35
 858:	a1 f4       	brne	.+40     	; 0x882 <vfprintf+0x98>
 85a:	23 2d       	mov	r18, r3
 85c:	20 61       	ori	r18, 0x10	; 16
 85e:	1d c0       	rjmp	.+58     	; 0x89a <vfprintf+0xb0>
 860:	8d 32       	cpi	r24, 0x2D	; 45
 862:	61 f0       	breq	.+24     	; 0x87c <vfprintf+0x92>
 864:	80 33       	cpi	r24, 0x30	; 48
 866:	69 f4       	brne	.+26     	; 0x882 <vfprintf+0x98>
 868:	23 2d       	mov	r18, r3
 86a:	21 60       	ori	r18, 0x01	; 1
 86c:	16 c0       	rjmp	.+44     	; 0x89a <vfprintf+0xb0>
 86e:	83 2d       	mov	r24, r3
 870:	82 60       	ori	r24, 0x02	; 2
 872:	38 2e       	mov	r3, r24
 874:	e3 2d       	mov	r30, r3
 876:	e4 60       	ori	r30, 0x04	; 4
 878:	3e 2e       	mov	r3, r30
 87a:	2a c0       	rjmp	.+84     	; 0x8d0 <vfprintf+0xe6>
 87c:	f3 2d       	mov	r31, r3
 87e:	f8 60       	ori	r31, 0x08	; 8
 880:	1d c0       	rjmp	.+58     	; 0x8bc <vfprintf+0xd2>
 882:	37 fc       	sbrc	r3, 7
 884:	2d c0       	rjmp	.+90     	; 0x8e0 <vfprintf+0xf6>
 886:	20 ed       	ldi	r18, 0xD0	; 208
 888:	28 0f       	add	r18, r24
 88a:	2a 30       	cpi	r18, 0x0A	; 10
 88c:	40 f0       	brcs	.+16     	; 0x89e <vfprintf+0xb4>
 88e:	8e 32       	cpi	r24, 0x2E	; 46
 890:	b9 f4       	brne	.+46     	; 0x8c0 <vfprintf+0xd6>
 892:	36 fc       	sbrc	r3, 6
 894:	81 c1       	rjmp	.+770    	; 0xb98 <__stack+0x299>
 896:	23 2d       	mov	r18, r3
 898:	20 64       	ori	r18, 0x40	; 64
 89a:	32 2e       	mov	r3, r18
 89c:	19 c0       	rjmp	.+50     	; 0x8d0 <vfprintf+0xe6>
 89e:	36 fe       	sbrs	r3, 6
 8a0:	06 c0       	rjmp	.+12     	; 0x8ae <vfprintf+0xc4>
 8a2:	8a e0       	ldi	r24, 0x0A	; 10
 8a4:	98 9e       	mul	r9, r24
 8a6:	20 0d       	add	r18, r0
 8a8:	11 24       	eor	r1, r1
 8aa:	92 2e       	mov	r9, r18
 8ac:	11 c0       	rjmp	.+34     	; 0x8d0 <vfprintf+0xe6>
 8ae:	ea e0       	ldi	r30, 0x0A	; 10
 8b0:	2e 9e       	mul	r2, r30
 8b2:	20 0d       	add	r18, r0
 8b4:	11 24       	eor	r1, r1
 8b6:	22 2e       	mov	r2, r18
 8b8:	f3 2d       	mov	r31, r3
 8ba:	f0 62       	ori	r31, 0x20	; 32
 8bc:	3f 2e       	mov	r3, r31
 8be:	08 c0       	rjmp	.+16     	; 0x8d0 <vfprintf+0xe6>
 8c0:	8c 36       	cpi	r24, 0x6C	; 108
 8c2:	21 f4       	brne	.+8      	; 0x8cc <vfprintf+0xe2>
 8c4:	83 2d       	mov	r24, r3
 8c6:	80 68       	ori	r24, 0x80	; 128
 8c8:	38 2e       	mov	r3, r24
 8ca:	02 c0       	rjmp	.+4      	; 0x8d0 <vfprintf+0xe6>
 8cc:	88 36       	cpi	r24, 0x68	; 104
 8ce:	41 f4       	brne	.+16     	; 0x8e0 <vfprintf+0xf6>
 8d0:	f7 01       	movw	r30, r14
 8d2:	93 fd       	sbrc	r25, 3
 8d4:	85 91       	lpm	r24, Z+
 8d6:	93 ff       	sbrs	r25, 3
 8d8:	81 91       	ld	r24, Z+
 8da:	7f 01       	movw	r14, r30
 8dc:	81 11       	cpse	r24, r1
 8de:	b3 cf       	rjmp	.-154    	; 0x846 <vfprintf+0x5c>
 8e0:	98 2f       	mov	r25, r24
 8e2:	9f 7d       	andi	r25, 0xDF	; 223
 8e4:	95 54       	subi	r25, 0x45	; 69
 8e6:	93 30       	cpi	r25, 0x03	; 3
 8e8:	28 f4       	brcc	.+10     	; 0x8f4 <vfprintf+0x10a>
 8ea:	0c 5f       	subi	r16, 0xFC	; 252
 8ec:	1f 4f       	sbci	r17, 0xFF	; 255
 8ee:	9f e3       	ldi	r25, 0x3F	; 63
 8f0:	99 83       	std	Y+1, r25	; 0x01
 8f2:	0d c0       	rjmp	.+26     	; 0x90e <__stack+0xf>
 8f4:	83 36       	cpi	r24, 0x63	; 99
 8f6:	31 f0       	breq	.+12     	; 0x904 <__stack+0x5>
 8f8:	83 37       	cpi	r24, 0x73	; 115
 8fa:	71 f0       	breq	.+28     	; 0x918 <__stack+0x19>
 8fc:	83 35       	cpi	r24, 0x53	; 83
 8fe:	09 f0       	breq	.+2      	; 0x902 <__stack+0x3>
 900:	59 c0       	rjmp	.+178    	; 0x9b4 <__stack+0xb5>
 902:	21 c0       	rjmp	.+66     	; 0x946 <__stack+0x47>
 904:	f8 01       	movw	r30, r16
 906:	80 81       	ld	r24, Z
 908:	89 83       	std	Y+1, r24	; 0x01
 90a:	0e 5f       	subi	r16, 0xFE	; 254
 90c:	1f 4f       	sbci	r17, 0xFF	; 255
 90e:	88 24       	eor	r8, r8
 910:	83 94       	inc	r8
 912:	91 2c       	mov	r9, r1
 914:	53 01       	movw	r10, r6
 916:	13 c0       	rjmp	.+38     	; 0x93e <__stack+0x3f>
 918:	28 01       	movw	r4, r16
 91a:	f2 e0       	ldi	r31, 0x02	; 2
 91c:	4f 0e       	add	r4, r31
 91e:	51 1c       	adc	r5, r1
 920:	f8 01       	movw	r30, r16
 922:	a0 80       	ld	r10, Z
 924:	b1 80       	ldd	r11, Z+1	; 0x01
 926:	36 fe       	sbrs	r3, 6
 928:	03 c0       	rjmp	.+6      	; 0x930 <__stack+0x31>
 92a:	69 2d       	mov	r22, r9
 92c:	70 e0       	ldi	r23, 0x00	; 0
 92e:	02 c0       	rjmp	.+4      	; 0x934 <__stack+0x35>
 930:	6f ef       	ldi	r22, 0xFF	; 255
 932:	7f ef       	ldi	r23, 0xFF	; 255
 934:	c5 01       	movw	r24, r10
 936:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <strnlen>
 93a:	4c 01       	movw	r8, r24
 93c:	82 01       	movw	r16, r4
 93e:	f3 2d       	mov	r31, r3
 940:	ff 77       	andi	r31, 0x7F	; 127
 942:	3f 2e       	mov	r3, r31
 944:	16 c0       	rjmp	.+44     	; 0x972 <__stack+0x73>
 946:	28 01       	movw	r4, r16
 948:	22 e0       	ldi	r18, 0x02	; 2
 94a:	42 0e       	add	r4, r18
 94c:	51 1c       	adc	r5, r1
 94e:	f8 01       	movw	r30, r16
 950:	a0 80       	ld	r10, Z
 952:	b1 80       	ldd	r11, Z+1	; 0x01
 954:	36 fe       	sbrs	r3, 6
 956:	03 c0       	rjmp	.+6      	; 0x95e <__stack+0x5f>
 958:	69 2d       	mov	r22, r9
 95a:	70 e0       	ldi	r23, 0x00	; 0
 95c:	02 c0       	rjmp	.+4      	; 0x962 <__stack+0x63>
 95e:	6f ef       	ldi	r22, 0xFF	; 255
 960:	7f ef       	ldi	r23, 0xFF	; 255
 962:	c5 01       	movw	r24, r10
 964:	0e 94 d6 05 	call	0xbac	; 0xbac <strnlen_P>
 968:	4c 01       	movw	r8, r24
 96a:	f3 2d       	mov	r31, r3
 96c:	f0 68       	ori	r31, 0x80	; 128
 96e:	3f 2e       	mov	r3, r31
 970:	82 01       	movw	r16, r4
 972:	33 fc       	sbrc	r3, 3
 974:	1b c0       	rjmp	.+54     	; 0x9ac <__stack+0xad>
 976:	82 2d       	mov	r24, r2
 978:	90 e0       	ldi	r25, 0x00	; 0
 97a:	88 16       	cp	r8, r24
 97c:	99 06       	cpc	r9, r25
 97e:	b0 f4       	brcc	.+44     	; 0x9ac <__stack+0xad>
 980:	b6 01       	movw	r22, r12
 982:	80 e2       	ldi	r24, 0x20	; 32
 984:	90 e0       	ldi	r25, 0x00	; 0
 986:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <fputc>
 98a:	2a 94       	dec	r2
 98c:	f4 cf       	rjmp	.-24     	; 0x976 <__stack+0x77>
 98e:	f5 01       	movw	r30, r10
 990:	37 fc       	sbrc	r3, 7
 992:	85 91       	lpm	r24, Z+
 994:	37 fe       	sbrs	r3, 7
 996:	81 91       	ld	r24, Z+
 998:	5f 01       	movw	r10, r30
 99a:	b6 01       	movw	r22, r12
 99c:	90 e0       	ldi	r25, 0x00	; 0
 99e:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <fputc>
 9a2:	21 10       	cpse	r2, r1
 9a4:	2a 94       	dec	r2
 9a6:	21 e0       	ldi	r18, 0x01	; 1
 9a8:	82 1a       	sub	r8, r18
 9aa:	91 08       	sbc	r9, r1
 9ac:	81 14       	cp	r8, r1
 9ae:	91 04       	cpc	r9, r1
 9b0:	71 f7       	brne	.-36     	; 0x98e <__stack+0x8f>
 9b2:	e8 c0       	rjmp	.+464    	; 0xb84 <__stack+0x285>
 9b4:	84 36       	cpi	r24, 0x64	; 100
 9b6:	11 f0       	breq	.+4      	; 0x9bc <__stack+0xbd>
 9b8:	89 36       	cpi	r24, 0x69	; 105
 9ba:	41 f5       	brne	.+80     	; 0xa0c <__stack+0x10d>
 9bc:	f8 01       	movw	r30, r16
 9be:	37 fe       	sbrs	r3, 7
 9c0:	07 c0       	rjmp	.+14     	; 0x9d0 <__stack+0xd1>
 9c2:	60 81       	ld	r22, Z
 9c4:	71 81       	ldd	r23, Z+1	; 0x01
 9c6:	82 81       	ldd	r24, Z+2	; 0x02
 9c8:	93 81       	ldd	r25, Z+3	; 0x03
 9ca:	0c 5f       	subi	r16, 0xFC	; 252
 9cc:	1f 4f       	sbci	r17, 0xFF	; 255
 9ce:	08 c0       	rjmp	.+16     	; 0x9e0 <__stack+0xe1>
 9d0:	60 81       	ld	r22, Z
 9d2:	71 81       	ldd	r23, Z+1	; 0x01
 9d4:	07 2e       	mov	r0, r23
 9d6:	00 0c       	add	r0, r0
 9d8:	88 0b       	sbc	r24, r24
 9da:	99 0b       	sbc	r25, r25
 9dc:	0e 5f       	subi	r16, 0xFE	; 254
 9de:	1f 4f       	sbci	r17, 0xFF	; 255
 9e0:	f3 2d       	mov	r31, r3
 9e2:	ff 76       	andi	r31, 0x6F	; 111
 9e4:	3f 2e       	mov	r3, r31
 9e6:	97 ff       	sbrs	r25, 7
 9e8:	09 c0       	rjmp	.+18     	; 0x9fc <__stack+0xfd>
 9ea:	90 95       	com	r25
 9ec:	80 95       	com	r24
 9ee:	70 95       	com	r23
 9f0:	61 95       	neg	r22
 9f2:	7f 4f       	sbci	r23, 0xFF	; 255
 9f4:	8f 4f       	sbci	r24, 0xFF	; 255
 9f6:	9f 4f       	sbci	r25, 0xFF	; 255
 9f8:	f0 68       	ori	r31, 0x80	; 128
 9fa:	3f 2e       	mov	r3, r31
 9fc:	2a e0       	ldi	r18, 0x0A	; 10
 9fe:	30 e0       	ldi	r19, 0x00	; 0
 a00:	a3 01       	movw	r20, r6
 a02:	0e 94 28 06 	call	0xc50	; 0xc50 <__ultoa_invert>
 a06:	88 2e       	mov	r8, r24
 a08:	86 18       	sub	r8, r6
 a0a:	45 c0       	rjmp	.+138    	; 0xa96 <__stack+0x197>
 a0c:	85 37       	cpi	r24, 0x75	; 117
 a0e:	31 f4       	brne	.+12     	; 0xa1c <__stack+0x11d>
 a10:	23 2d       	mov	r18, r3
 a12:	2f 7e       	andi	r18, 0xEF	; 239
 a14:	b2 2e       	mov	r11, r18
 a16:	2a e0       	ldi	r18, 0x0A	; 10
 a18:	30 e0       	ldi	r19, 0x00	; 0
 a1a:	25 c0       	rjmp	.+74     	; 0xa66 <__stack+0x167>
 a1c:	93 2d       	mov	r25, r3
 a1e:	99 7f       	andi	r25, 0xF9	; 249
 a20:	b9 2e       	mov	r11, r25
 a22:	8f 36       	cpi	r24, 0x6F	; 111
 a24:	c1 f0       	breq	.+48     	; 0xa56 <__stack+0x157>
 a26:	18 f4       	brcc	.+6      	; 0xa2e <__stack+0x12f>
 a28:	88 35       	cpi	r24, 0x58	; 88
 a2a:	79 f0       	breq	.+30     	; 0xa4a <__stack+0x14b>
 a2c:	b5 c0       	rjmp	.+362    	; 0xb98 <__stack+0x299>
 a2e:	80 37       	cpi	r24, 0x70	; 112
 a30:	19 f0       	breq	.+6      	; 0xa38 <__stack+0x139>
 a32:	88 37       	cpi	r24, 0x78	; 120
 a34:	21 f0       	breq	.+8      	; 0xa3e <__stack+0x13f>
 a36:	b0 c0       	rjmp	.+352    	; 0xb98 <__stack+0x299>
 a38:	e9 2f       	mov	r30, r25
 a3a:	e0 61       	ori	r30, 0x10	; 16
 a3c:	be 2e       	mov	r11, r30
 a3e:	b4 fe       	sbrs	r11, 4
 a40:	0d c0       	rjmp	.+26     	; 0xa5c <__stack+0x15d>
 a42:	fb 2d       	mov	r31, r11
 a44:	f4 60       	ori	r31, 0x04	; 4
 a46:	bf 2e       	mov	r11, r31
 a48:	09 c0       	rjmp	.+18     	; 0xa5c <__stack+0x15d>
 a4a:	34 fe       	sbrs	r3, 4
 a4c:	0a c0       	rjmp	.+20     	; 0xa62 <__stack+0x163>
 a4e:	29 2f       	mov	r18, r25
 a50:	26 60       	ori	r18, 0x06	; 6
 a52:	b2 2e       	mov	r11, r18
 a54:	06 c0       	rjmp	.+12     	; 0xa62 <__stack+0x163>
 a56:	28 e0       	ldi	r18, 0x08	; 8
 a58:	30 e0       	ldi	r19, 0x00	; 0
 a5a:	05 c0       	rjmp	.+10     	; 0xa66 <__stack+0x167>
 a5c:	20 e1       	ldi	r18, 0x10	; 16
 a5e:	30 e0       	ldi	r19, 0x00	; 0
 a60:	02 c0       	rjmp	.+4      	; 0xa66 <__stack+0x167>
 a62:	20 e1       	ldi	r18, 0x10	; 16
 a64:	32 e0       	ldi	r19, 0x02	; 2
 a66:	f8 01       	movw	r30, r16
 a68:	b7 fe       	sbrs	r11, 7
 a6a:	07 c0       	rjmp	.+14     	; 0xa7a <__stack+0x17b>
 a6c:	60 81       	ld	r22, Z
 a6e:	71 81       	ldd	r23, Z+1	; 0x01
 a70:	82 81       	ldd	r24, Z+2	; 0x02
 a72:	93 81       	ldd	r25, Z+3	; 0x03
 a74:	0c 5f       	subi	r16, 0xFC	; 252
 a76:	1f 4f       	sbci	r17, 0xFF	; 255
 a78:	06 c0       	rjmp	.+12     	; 0xa86 <__stack+0x187>
 a7a:	60 81       	ld	r22, Z
 a7c:	71 81       	ldd	r23, Z+1	; 0x01
 a7e:	80 e0       	ldi	r24, 0x00	; 0
 a80:	90 e0       	ldi	r25, 0x00	; 0
 a82:	0e 5f       	subi	r16, 0xFE	; 254
 a84:	1f 4f       	sbci	r17, 0xFF	; 255
 a86:	a3 01       	movw	r20, r6
 a88:	0e 94 28 06 	call	0xc50	; 0xc50 <__ultoa_invert>
 a8c:	88 2e       	mov	r8, r24
 a8e:	86 18       	sub	r8, r6
 a90:	fb 2d       	mov	r31, r11
 a92:	ff 77       	andi	r31, 0x7F	; 127
 a94:	3f 2e       	mov	r3, r31
 a96:	36 fe       	sbrs	r3, 6
 a98:	0d c0       	rjmp	.+26     	; 0xab4 <__stack+0x1b5>
 a9a:	23 2d       	mov	r18, r3
 a9c:	2e 7f       	andi	r18, 0xFE	; 254
 a9e:	a2 2e       	mov	r10, r18
 aa0:	89 14       	cp	r8, r9
 aa2:	58 f4       	brcc	.+22     	; 0xaba <__stack+0x1bb>
 aa4:	34 fe       	sbrs	r3, 4
 aa6:	0b c0       	rjmp	.+22     	; 0xabe <__stack+0x1bf>
 aa8:	32 fc       	sbrc	r3, 2
 aaa:	09 c0       	rjmp	.+18     	; 0xabe <__stack+0x1bf>
 aac:	83 2d       	mov	r24, r3
 aae:	8e 7e       	andi	r24, 0xEE	; 238
 ab0:	a8 2e       	mov	r10, r24
 ab2:	05 c0       	rjmp	.+10     	; 0xabe <__stack+0x1bf>
 ab4:	b8 2c       	mov	r11, r8
 ab6:	a3 2c       	mov	r10, r3
 ab8:	03 c0       	rjmp	.+6      	; 0xac0 <__stack+0x1c1>
 aba:	b8 2c       	mov	r11, r8
 abc:	01 c0       	rjmp	.+2      	; 0xac0 <__stack+0x1c1>
 abe:	b9 2c       	mov	r11, r9
 ac0:	a4 fe       	sbrs	r10, 4
 ac2:	0f c0       	rjmp	.+30     	; 0xae2 <__stack+0x1e3>
 ac4:	fe 01       	movw	r30, r28
 ac6:	e8 0d       	add	r30, r8
 ac8:	f1 1d       	adc	r31, r1
 aca:	80 81       	ld	r24, Z
 acc:	80 33       	cpi	r24, 0x30	; 48
 ace:	21 f4       	brne	.+8      	; 0xad8 <__stack+0x1d9>
 ad0:	9a 2d       	mov	r25, r10
 ad2:	99 7e       	andi	r25, 0xE9	; 233
 ad4:	a9 2e       	mov	r10, r25
 ad6:	09 c0       	rjmp	.+18     	; 0xaea <__stack+0x1eb>
 ad8:	a2 fe       	sbrs	r10, 2
 ada:	06 c0       	rjmp	.+12     	; 0xae8 <__stack+0x1e9>
 adc:	b3 94       	inc	r11
 ade:	b3 94       	inc	r11
 ae0:	04 c0       	rjmp	.+8      	; 0xaea <__stack+0x1eb>
 ae2:	8a 2d       	mov	r24, r10
 ae4:	86 78       	andi	r24, 0x86	; 134
 ae6:	09 f0       	breq	.+2      	; 0xaea <__stack+0x1eb>
 ae8:	b3 94       	inc	r11
 aea:	a3 fc       	sbrc	r10, 3
 aec:	11 c0       	rjmp	.+34     	; 0xb10 <__stack+0x211>
 aee:	a0 fe       	sbrs	r10, 0
 af0:	06 c0       	rjmp	.+12     	; 0xafe <__stack+0x1ff>
 af2:	b2 14       	cp	r11, r2
 af4:	88 f4       	brcc	.+34     	; 0xb18 <__stack+0x219>
 af6:	28 0c       	add	r2, r8
 af8:	92 2c       	mov	r9, r2
 afa:	9b 18       	sub	r9, r11
 afc:	0e c0       	rjmp	.+28     	; 0xb1a <__stack+0x21b>
 afe:	b2 14       	cp	r11, r2
 b00:	60 f4       	brcc	.+24     	; 0xb1a <__stack+0x21b>
 b02:	b6 01       	movw	r22, r12
 b04:	80 e2       	ldi	r24, 0x20	; 32
 b06:	90 e0       	ldi	r25, 0x00	; 0
 b08:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <fputc>
 b0c:	b3 94       	inc	r11
 b0e:	f7 cf       	rjmp	.-18     	; 0xafe <__stack+0x1ff>
 b10:	b2 14       	cp	r11, r2
 b12:	18 f4       	brcc	.+6      	; 0xb1a <__stack+0x21b>
 b14:	2b 18       	sub	r2, r11
 b16:	02 c0       	rjmp	.+4      	; 0xb1c <__stack+0x21d>
 b18:	98 2c       	mov	r9, r8
 b1a:	21 2c       	mov	r2, r1
 b1c:	a4 fe       	sbrs	r10, 4
 b1e:	10 c0       	rjmp	.+32     	; 0xb40 <__stack+0x241>
 b20:	b6 01       	movw	r22, r12
 b22:	80 e3       	ldi	r24, 0x30	; 48
 b24:	90 e0       	ldi	r25, 0x00	; 0
 b26:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <fputc>
 b2a:	a2 fe       	sbrs	r10, 2
 b2c:	17 c0       	rjmp	.+46     	; 0xb5c <__stack+0x25d>
 b2e:	a1 fc       	sbrc	r10, 1
 b30:	03 c0       	rjmp	.+6      	; 0xb38 <__stack+0x239>
 b32:	88 e7       	ldi	r24, 0x78	; 120
 b34:	90 e0       	ldi	r25, 0x00	; 0
 b36:	02 c0       	rjmp	.+4      	; 0xb3c <__stack+0x23d>
 b38:	88 e5       	ldi	r24, 0x58	; 88
 b3a:	90 e0       	ldi	r25, 0x00	; 0
 b3c:	b6 01       	movw	r22, r12
 b3e:	0c c0       	rjmp	.+24     	; 0xb58 <__stack+0x259>
 b40:	8a 2d       	mov	r24, r10
 b42:	86 78       	andi	r24, 0x86	; 134
 b44:	59 f0       	breq	.+22     	; 0xb5c <__stack+0x25d>
 b46:	a1 fe       	sbrs	r10, 1
 b48:	02 c0       	rjmp	.+4      	; 0xb4e <__stack+0x24f>
 b4a:	8b e2       	ldi	r24, 0x2B	; 43
 b4c:	01 c0       	rjmp	.+2      	; 0xb50 <__stack+0x251>
 b4e:	80 e2       	ldi	r24, 0x20	; 32
 b50:	a7 fc       	sbrc	r10, 7
 b52:	8d e2       	ldi	r24, 0x2D	; 45
 b54:	b6 01       	movw	r22, r12
 b56:	90 e0       	ldi	r25, 0x00	; 0
 b58:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <fputc>
 b5c:	89 14       	cp	r8, r9
 b5e:	38 f4       	brcc	.+14     	; 0xb6e <__stack+0x26f>
 b60:	b6 01       	movw	r22, r12
 b62:	80 e3       	ldi	r24, 0x30	; 48
 b64:	90 e0       	ldi	r25, 0x00	; 0
 b66:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <fputc>
 b6a:	9a 94       	dec	r9
 b6c:	f7 cf       	rjmp	.-18     	; 0xb5c <__stack+0x25d>
 b6e:	8a 94       	dec	r8
 b70:	f3 01       	movw	r30, r6
 b72:	e8 0d       	add	r30, r8
 b74:	f1 1d       	adc	r31, r1
 b76:	80 81       	ld	r24, Z
 b78:	b6 01       	movw	r22, r12
 b7a:	90 e0       	ldi	r25, 0x00	; 0
 b7c:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <fputc>
 b80:	81 10       	cpse	r8, r1
 b82:	f5 cf       	rjmp	.-22     	; 0xb6e <__stack+0x26f>
 b84:	22 20       	and	r2, r2
 b86:	09 f4       	brne	.+2      	; 0xb8a <__stack+0x28b>
 b88:	42 ce       	rjmp	.-892    	; 0x80e <vfprintf+0x24>
 b8a:	b6 01       	movw	r22, r12
 b8c:	80 e2       	ldi	r24, 0x20	; 32
 b8e:	90 e0       	ldi	r25, 0x00	; 0
 b90:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <fputc>
 b94:	2a 94       	dec	r2
 b96:	f6 cf       	rjmp	.-20     	; 0xb84 <__stack+0x285>
 b98:	f6 01       	movw	r30, r12
 b9a:	86 81       	ldd	r24, Z+6	; 0x06
 b9c:	97 81       	ldd	r25, Z+7	; 0x07
 b9e:	02 c0       	rjmp	.+4      	; 0xba4 <__stack+0x2a5>
 ba0:	8f ef       	ldi	r24, 0xFF	; 255
 ba2:	9f ef       	ldi	r25, 0xFF	; 255
 ba4:	2b 96       	adiw	r28, 0x0b	; 11
 ba6:	e2 e1       	ldi	r30, 0x12	; 18
 ba8:	0c 94 a2 06 	jmp	0xd44	; 0xd44 <__epilogue_restores__>

00000bac <strnlen_P>:
 bac:	fc 01       	movw	r30, r24
 bae:	05 90       	lpm	r0, Z+
 bb0:	61 50       	subi	r22, 0x01	; 1
 bb2:	70 40       	sbci	r23, 0x00	; 0
 bb4:	01 10       	cpse	r0, r1
 bb6:	d8 f7       	brcc	.-10     	; 0xbae <strnlen_P+0x2>
 bb8:	80 95       	com	r24
 bba:	90 95       	com	r25
 bbc:	8e 0f       	add	r24, r30
 bbe:	9f 1f       	adc	r25, r31
 bc0:	08 95       	ret

00000bc2 <strnlen>:
 bc2:	fc 01       	movw	r30, r24
 bc4:	61 50       	subi	r22, 0x01	; 1
 bc6:	70 40       	sbci	r23, 0x00	; 0
 bc8:	01 90       	ld	r0, Z+
 bca:	01 10       	cpse	r0, r1
 bcc:	d8 f7       	brcc	.-10     	; 0xbc4 <strnlen+0x2>
 bce:	80 95       	com	r24
 bd0:	90 95       	com	r25
 bd2:	8e 0f       	add	r24, r30
 bd4:	9f 1f       	adc	r25, r31
 bd6:	08 95       	ret

00000bd8 <fputc>:
 bd8:	0f 93       	push	r16
 bda:	1f 93       	push	r17
 bdc:	cf 93       	push	r28
 bde:	df 93       	push	r29
 be0:	fb 01       	movw	r30, r22
 be2:	23 81       	ldd	r18, Z+3	; 0x03
 be4:	21 fd       	sbrc	r18, 1
 be6:	03 c0       	rjmp	.+6      	; 0xbee <fputc+0x16>
 be8:	8f ef       	ldi	r24, 0xFF	; 255
 bea:	9f ef       	ldi	r25, 0xFF	; 255
 bec:	2c c0       	rjmp	.+88     	; 0xc46 <fputc+0x6e>
 bee:	22 ff       	sbrs	r18, 2
 bf0:	16 c0       	rjmp	.+44     	; 0xc1e <fputc+0x46>
 bf2:	46 81       	ldd	r20, Z+6	; 0x06
 bf4:	57 81       	ldd	r21, Z+7	; 0x07
 bf6:	24 81       	ldd	r18, Z+4	; 0x04
 bf8:	35 81       	ldd	r19, Z+5	; 0x05
 bfa:	42 17       	cp	r20, r18
 bfc:	53 07       	cpc	r21, r19
 bfe:	44 f4       	brge	.+16     	; 0xc10 <fputc+0x38>
 c00:	a0 81       	ld	r26, Z
 c02:	b1 81       	ldd	r27, Z+1	; 0x01
 c04:	9d 01       	movw	r18, r26
 c06:	2f 5f       	subi	r18, 0xFF	; 255
 c08:	3f 4f       	sbci	r19, 0xFF	; 255
 c0a:	31 83       	std	Z+1, r19	; 0x01
 c0c:	20 83       	st	Z, r18
 c0e:	8c 93       	st	X, r24
 c10:	26 81       	ldd	r18, Z+6	; 0x06
 c12:	37 81       	ldd	r19, Z+7	; 0x07
 c14:	2f 5f       	subi	r18, 0xFF	; 255
 c16:	3f 4f       	sbci	r19, 0xFF	; 255
 c18:	37 83       	std	Z+7, r19	; 0x07
 c1a:	26 83       	std	Z+6, r18	; 0x06
 c1c:	14 c0       	rjmp	.+40     	; 0xc46 <fputc+0x6e>
 c1e:	8b 01       	movw	r16, r22
 c20:	ec 01       	movw	r28, r24
 c22:	fb 01       	movw	r30, r22
 c24:	00 84       	ldd	r0, Z+8	; 0x08
 c26:	f1 85       	ldd	r31, Z+9	; 0x09
 c28:	e0 2d       	mov	r30, r0
 c2a:	09 95       	icall
 c2c:	89 2b       	or	r24, r25
 c2e:	e1 f6       	brne	.-72     	; 0xbe8 <fputc+0x10>
 c30:	d8 01       	movw	r26, r16
 c32:	16 96       	adiw	r26, 0x06	; 6
 c34:	8d 91       	ld	r24, X+
 c36:	9c 91       	ld	r25, X
 c38:	17 97       	sbiw	r26, 0x07	; 7
 c3a:	01 96       	adiw	r24, 0x01	; 1
 c3c:	17 96       	adiw	r26, 0x07	; 7
 c3e:	9c 93       	st	X, r25
 c40:	8e 93       	st	-X, r24
 c42:	16 97       	sbiw	r26, 0x06	; 6
 c44:	ce 01       	movw	r24, r28
 c46:	df 91       	pop	r29
 c48:	cf 91       	pop	r28
 c4a:	1f 91       	pop	r17
 c4c:	0f 91       	pop	r16
 c4e:	08 95       	ret

00000c50 <__ultoa_invert>:
 c50:	fa 01       	movw	r30, r20
 c52:	aa 27       	eor	r26, r26
 c54:	28 30       	cpi	r18, 0x08	; 8
 c56:	51 f1       	breq	.+84     	; 0xcac <__ultoa_invert+0x5c>
 c58:	20 31       	cpi	r18, 0x10	; 16
 c5a:	81 f1       	breq	.+96     	; 0xcbc <__ultoa_invert+0x6c>
 c5c:	e8 94       	clt
 c5e:	6f 93       	push	r22
 c60:	6e 7f       	andi	r22, 0xFE	; 254
 c62:	6e 5f       	subi	r22, 0xFE	; 254
 c64:	7f 4f       	sbci	r23, 0xFF	; 255
 c66:	8f 4f       	sbci	r24, 0xFF	; 255
 c68:	9f 4f       	sbci	r25, 0xFF	; 255
 c6a:	af 4f       	sbci	r26, 0xFF	; 255
 c6c:	b1 e0       	ldi	r27, 0x01	; 1
 c6e:	3e d0       	rcall	.+124    	; 0xcec <__ultoa_invert+0x9c>
 c70:	b4 e0       	ldi	r27, 0x04	; 4
 c72:	3c d0       	rcall	.+120    	; 0xcec <__ultoa_invert+0x9c>
 c74:	67 0f       	add	r22, r23
 c76:	78 1f       	adc	r23, r24
 c78:	89 1f       	adc	r24, r25
 c7a:	9a 1f       	adc	r25, r26
 c7c:	a1 1d       	adc	r26, r1
 c7e:	68 0f       	add	r22, r24
 c80:	79 1f       	adc	r23, r25
 c82:	8a 1f       	adc	r24, r26
 c84:	91 1d       	adc	r25, r1
 c86:	a1 1d       	adc	r26, r1
 c88:	6a 0f       	add	r22, r26
 c8a:	71 1d       	adc	r23, r1
 c8c:	81 1d       	adc	r24, r1
 c8e:	91 1d       	adc	r25, r1
 c90:	a1 1d       	adc	r26, r1
 c92:	20 d0       	rcall	.+64     	; 0xcd4 <__ultoa_invert+0x84>
 c94:	09 f4       	brne	.+2      	; 0xc98 <__ultoa_invert+0x48>
 c96:	68 94       	set
 c98:	3f 91       	pop	r19
 c9a:	2a e0       	ldi	r18, 0x0A	; 10
 c9c:	26 9f       	mul	r18, r22
 c9e:	11 24       	eor	r1, r1
 ca0:	30 19       	sub	r19, r0
 ca2:	30 5d       	subi	r19, 0xD0	; 208
 ca4:	31 93       	st	Z+, r19
 ca6:	de f6       	brtc	.-74     	; 0xc5e <__ultoa_invert+0xe>
 ca8:	cf 01       	movw	r24, r30
 caa:	08 95       	ret
 cac:	46 2f       	mov	r20, r22
 cae:	47 70       	andi	r20, 0x07	; 7
 cb0:	40 5d       	subi	r20, 0xD0	; 208
 cb2:	41 93       	st	Z+, r20
 cb4:	b3 e0       	ldi	r27, 0x03	; 3
 cb6:	0f d0       	rcall	.+30     	; 0xcd6 <__ultoa_invert+0x86>
 cb8:	c9 f7       	brne	.-14     	; 0xcac <__ultoa_invert+0x5c>
 cba:	f6 cf       	rjmp	.-20     	; 0xca8 <__ultoa_invert+0x58>
 cbc:	46 2f       	mov	r20, r22
 cbe:	4f 70       	andi	r20, 0x0F	; 15
 cc0:	40 5d       	subi	r20, 0xD0	; 208
 cc2:	4a 33       	cpi	r20, 0x3A	; 58
 cc4:	18 f0       	brcs	.+6      	; 0xccc <__ultoa_invert+0x7c>
 cc6:	49 5d       	subi	r20, 0xD9	; 217
 cc8:	31 fd       	sbrc	r19, 1
 cca:	40 52       	subi	r20, 0x20	; 32
 ccc:	41 93       	st	Z+, r20
 cce:	02 d0       	rcall	.+4      	; 0xcd4 <__ultoa_invert+0x84>
 cd0:	a9 f7       	brne	.-22     	; 0xcbc <__ultoa_invert+0x6c>
 cd2:	ea cf       	rjmp	.-44     	; 0xca8 <__ultoa_invert+0x58>
 cd4:	b4 e0       	ldi	r27, 0x04	; 4
 cd6:	a6 95       	lsr	r26
 cd8:	97 95       	ror	r25
 cda:	87 95       	ror	r24
 cdc:	77 95       	ror	r23
 cde:	67 95       	ror	r22
 ce0:	ba 95       	dec	r27
 ce2:	c9 f7       	brne	.-14     	; 0xcd6 <__ultoa_invert+0x86>
 ce4:	00 97       	sbiw	r24, 0x00	; 0
 ce6:	61 05       	cpc	r22, r1
 ce8:	71 05       	cpc	r23, r1
 cea:	08 95       	ret
 cec:	9b 01       	movw	r18, r22
 cee:	ac 01       	movw	r20, r24
 cf0:	0a 2e       	mov	r0, r26
 cf2:	06 94       	lsr	r0
 cf4:	57 95       	ror	r21
 cf6:	47 95       	ror	r20
 cf8:	37 95       	ror	r19
 cfa:	27 95       	ror	r18
 cfc:	ba 95       	dec	r27
 cfe:	c9 f7       	brne	.-14     	; 0xcf2 <__ultoa_invert+0xa2>
 d00:	62 0f       	add	r22, r18
 d02:	73 1f       	adc	r23, r19
 d04:	84 1f       	adc	r24, r20
 d06:	95 1f       	adc	r25, r21
 d08:	a0 1d       	adc	r26, r0
 d0a:	08 95       	ret

00000d0c <__prologue_saves__>:
 d0c:	2f 92       	push	r2
 d0e:	3f 92       	push	r3
 d10:	4f 92       	push	r4
 d12:	5f 92       	push	r5
 d14:	6f 92       	push	r6
 d16:	7f 92       	push	r7
 d18:	8f 92       	push	r8
 d1a:	9f 92       	push	r9
 d1c:	af 92       	push	r10
 d1e:	bf 92       	push	r11
 d20:	cf 92       	push	r12
 d22:	df 92       	push	r13
 d24:	ef 92       	push	r14
 d26:	ff 92       	push	r15
 d28:	0f 93       	push	r16
 d2a:	1f 93       	push	r17
 d2c:	cf 93       	push	r28
 d2e:	df 93       	push	r29
 d30:	cd b7       	in	r28, 0x3d	; 61
 d32:	de b7       	in	r29, 0x3e	; 62
 d34:	ca 1b       	sub	r28, r26
 d36:	db 0b       	sbc	r29, r27
 d38:	0f b6       	in	r0, 0x3f	; 63
 d3a:	f8 94       	cli
 d3c:	de bf       	out	0x3e, r29	; 62
 d3e:	0f be       	out	0x3f, r0	; 63
 d40:	cd bf       	out	0x3d, r28	; 61
 d42:	09 94       	ijmp

00000d44 <__epilogue_restores__>:
 d44:	2a 88       	ldd	r2, Y+18	; 0x12
 d46:	39 88       	ldd	r3, Y+17	; 0x11
 d48:	48 88       	ldd	r4, Y+16	; 0x10
 d4a:	5f 84       	ldd	r5, Y+15	; 0x0f
 d4c:	6e 84       	ldd	r6, Y+14	; 0x0e
 d4e:	7d 84       	ldd	r7, Y+13	; 0x0d
 d50:	8c 84       	ldd	r8, Y+12	; 0x0c
 d52:	9b 84       	ldd	r9, Y+11	; 0x0b
 d54:	aa 84       	ldd	r10, Y+10	; 0x0a
 d56:	b9 84       	ldd	r11, Y+9	; 0x09
 d58:	c8 84       	ldd	r12, Y+8	; 0x08
 d5a:	df 80       	ldd	r13, Y+7	; 0x07
 d5c:	ee 80       	ldd	r14, Y+6	; 0x06
 d5e:	fd 80       	ldd	r15, Y+5	; 0x05
 d60:	0c 81       	ldd	r16, Y+4	; 0x04
 d62:	1b 81       	ldd	r17, Y+3	; 0x03
 d64:	aa 81       	ldd	r26, Y+2	; 0x02
 d66:	b9 81       	ldd	r27, Y+1	; 0x01
 d68:	ce 0f       	add	r28, r30
 d6a:	d1 1d       	adc	r29, r1
 d6c:	0f b6       	in	r0, 0x3f	; 63
 d6e:	f8 94       	cli
 d70:	de bf       	out	0x3e, r29	; 62
 d72:	0f be       	out	0x3f, r0	; 63
 d74:	cd bf       	out	0x3d, r28	; 61
 d76:	ed 01       	movw	r28, r26
 d78:	08 95       	ret

00000d7a <_exit>:
 d7a:	f8 94       	cli

00000d7c <__stop_program>:
 d7c:	ff cf       	rjmp	.-2      	; 0xd7c <__stop_program>
