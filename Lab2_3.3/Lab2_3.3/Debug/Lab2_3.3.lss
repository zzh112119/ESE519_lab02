
Lab2_3.3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000062  00800100  00001172  00001206  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001172  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  00800162  00800162  00001268  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001268  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000012c4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  00001304  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000009c3  00000000  00000000  00001364  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000078a  00000000  00000000  00001d27  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005e7  00000000  00000000  000024b1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001a0  00000000  00000000  00002a98  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000437  00000000  00000000  00002c38  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000412  00000000  00000000  0000306f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00003481  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      28:	0c 94 39 01 	jmp	0x272	; 0x272 <__vector_10>
      2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 7d 01 	jmp	0x2fa	; 0x2fa <__vector_13>
      38:	0c 94 94 01 	jmp	0x328	; 0x328 <__vector_14>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	e2 e7       	ldi	r30, 0x72	; 114
     17e:	f1 e1       	ldi	r31, 0x11	; 17
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	a2 36       	cpi	r26, 0x62	; 98
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	21 e0       	ldi	r18, 0x01	; 1
     18e:	a2 e6       	ldi	r26, 0x62	; 98
     190:	b1 e0       	ldi	r27, 0x01	; 1
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	a4 37       	cpi	r26, 0x74	; 116
     198:	b2 07       	cpc	r27, r18
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 01 03 	call	0x602	; 0x602 <main>
     1a0:	0c 94 b7 08 	jmp	0x116e	; 0x116e <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <uart_putchar>:
void uart_init(void);

static FILE uart_output = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);
static FILE uart_input = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);

int uart_putchar(char c, FILE *stream) {
     1a8:	cf 93       	push	r28
     1aa:	c8 2f       	mov	r28, r24
	if (c == '\n') {
     1ac:	8a 30       	cpi	r24, 0x0A	; 10
     1ae:	19 f4       	brne	.+6      	; 0x1b6 <uart_putchar+0xe>
		uart_putchar('\r', stream);
     1b0:	8d e0       	ldi	r24, 0x0D	; 13
     1b2:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <uart_putchar>
	}
	loop_until_bit_is_set(UCSR0A, UDRE0);
     1b6:	e0 ec       	ldi	r30, 0xC0	; 192
     1b8:	f0 e0       	ldi	r31, 0x00	; 0
     1ba:	80 81       	ld	r24, Z
     1bc:	85 ff       	sbrs	r24, 5
     1be:	fd cf       	rjmp	.-6      	; 0x1ba <uart_putchar+0x12>
	UDR0 = c;
     1c0:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
}
     1c4:	80 e0       	ldi	r24, 0x00	; 0
     1c6:	90 e0       	ldi	r25, 0x00	; 0
     1c8:	cf 91       	pop	r28
     1ca:	08 95       	ret

000001cc <uart_getchar>:

int uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0); /* Wait until data exists. */
     1cc:	e0 ec       	ldi	r30, 0xC0	; 192
     1ce:	f0 e0       	ldi	r31, 0x00	; 0
     1d0:	80 81       	ld	r24, Z
     1d2:	88 23       	and	r24, r24
     1d4:	ec f7       	brge	.-6      	; 0x1d0 <uart_getchar+0x4>
	return UDR0;
     1d6:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
     1da:	90 e0       	ldi	r25, 0x00	; 0
     1dc:	08 95       	ret

000001de <uart_init>:

void uart_init(void) {
	UBRR0H = UBRRH_VALUE;
     1de:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = UBRRL_VALUE;
     1e2:	87 e6       	ldi	r24, 0x67	; 103
     1e4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>

	#if USE_2X
	UCSR0A |= _BV(U2X0);
	#else
	UCSR0A &= ~(_BV(U2X0));
     1e8:	e0 ec       	ldi	r30, 0xC0	; 192
     1ea:	f0 e0       	ldi	r31, 0x00	; 0
     1ec:	80 81       	ld	r24, Z
     1ee:	8d 7f       	andi	r24, 0xFD	; 253
     1f0:	80 83       	st	Z, r24
	#endif

	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); /* 8-bit data */
     1f2:	86 e0       	ldi	r24, 0x06	; 6
     1f4:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);   /* Enable RX and TX */
     1f8:	88 e1       	ldi	r24, 0x18	; 24
     1fa:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>

    // Redirect stdin and stdout so functions like printf and getchar work.
	stdout = &uart_output;
     1fe:	ee e6       	ldi	r30, 0x6E	; 110
     200:	f1 e0       	ldi	r31, 0x01	; 1
     202:	8e e0       	ldi	r24, 0x0E	; 14
     204:	91 e0       	ldi	r25, 0x01	; 1
     206:	93 83       	std	Z+3, r25	; 0x03
     208:	82 83       	std	Z+2, r24	; 0x02
	stdin = &uart_input;
     20a:	80 e0       	ldi	r24, 0x00	; 0
     20c:	91 e0       	ldi	r25, 0x01	; 1
     20e:	91 83       	std	Z+1, r25	; 0x01
     210:	80 83       	st	Z, r24
     212:	08 95       	ret

00000214 <output_length>:
	}
}

void output_length(void){
	
	if (value2 < value1){overflow--;} // get rid of extra flow count if value2 < value1 
     214:	20 91 68 01 	lds	r18, 0x0168	; 0x800168 <value2>
     218:	30 91 69 01 	lds	r19, 0x0169	; 0x800169 <value2+0x1>
     21c:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <value1>
     220:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <value1+0x1>
     224:	28 17       	cp	r18, r24
     226:	39 07       	cpc	r19, r25
     228:	48 f4       	brcc	.+18     	; 0x23c <output_length+0x28>
     22a:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <overflow>
     22e:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <overflow+0x1>
     232:	01 97       	sbiw	r24, 0x01	; 1
     234:	90 93 67 01 	sts	0x0167, r25	; 0x800167 <overflow+0x1>
     238:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <overflow>
	
	diff = value2 - value1;
     23c:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <value2>
     240:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <value2+0x1>
     244:	20 91 6a 01 	lds	r18, 0x016A	; 0x80016a <value1>
     248:	30 91 6b 01 	lds	r19, 0x016B	; 0x80016b <value1+0x1>
     24c:	82 1b       	sub	r24, r18
     24e:	93 0b       	sbc	r25, r19
     250:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <diff+0x1>
     254:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <diff>
	
	pulse_width = (int)overflow * 65536u + (int)diff;
     258:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <overflow>
     25c:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <overflow+0x1>
     260:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <diff>
     264:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <diff+0x1>
     268:	90 93 63 01 	sts	0x0163, r25	; 0x800163 <__data_end+0x1>
     26c:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <__data_end>
     270:	08 95       	ret

00000272 <__vector_10>:
	}
	*/
	
}

ISR(TIMER1_CAPT_vect){
     272:	1f 92       	push	r1
     274:	0f 92       	push	r0
     276:	0f b6       	in	r0, 0x3f	; 63
     278:	0f 92       	push	r0
     27a:	11 24       	eor	r1, r1
     27c:	8f 93       	push	r24
     27e:	9f 93       	push	r25
     280:	ef 93       	push	r30
     282:	ff 93       	push	r31
	if (flag){
     284:	80 91 6c 01 	lds	r24, 0x016C	; 0x80016c <flag>
     288:	90 91 6d 01 	lds	r25, 0x016D	; 0x80016d <flag+0x1>
     28c:	89 2b       	or	r24, r25
     28e:	99 f0       	breq	.+38     	; 0x2b6 <__vector_10+0x44>
		TCCR1B |= (1<<ICES1);	// detect rising edge
     290:	e1 e8       	ldi	r30, 0x81	; 129
     292:	f0 e0       	ldi	r31, 0x00	; 0
     294:	80 81       	ld	r24, Z
     296:	80 64       	ori	r24, 0x40	; 64
     298:	80 83       	st	Z, r24
		TIFR1 |= 0x20;			// clears flag
     29a:	b5 9a       	sbi	0x16, 5	; 22
		value1 = ICR1;			// stores time 1
     29c:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
     2a0:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     2a4:	90 93 6b 01 	sts	0x016B, r25	; 0x80016b <value1+0x1>
     2a8:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <value1>
		flag = 0;
     2ac:	10 92 6d 01 	sts	0x016D, r1	; 0x80016d <flag+0x1>
     2b0:	10 92 6c 01 	sts	0x016C, r1	; 0x80016c <flag>
     2b4:	14 c0       	rjmp	.+40     	; 0x2de <__vector_10+0x6c>
	}
	else{
		TCCR1B &= ~(1<<ICES1);	// detect falling edge
     2b6:	e1 e8       	ldi	r30, 0x81	; 129
     2b8:	f0 e0       	ldi	r31, 0x00	; 0
     2ba:	80 81       	ld	r24, Z
     2bc:	8f 7b       	andi	r24, 0xBF	; 191
     2be:	80 83       	st	Z, r24
		TIFR1 |= 0x20;			// clears flag
     2c0:	b5 9a       	sbi	0x16, 5	; 22
		value2 = ICR1;			// stores time 2
     2c2:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
     2c6:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     2ca:	90 93 69 01 	sts	0x0169, r25	; 0x800169 <value2+0x1>
     2ce:	80 93 68 01 	sts	0x0168, r24	; 0x800168 <value2>
		flag = 1;
     2d2:	81 e0       	ldi	r24, 0x01	; 1
     2d4:	90 e0       	ldi	r25, 0x00	; 0
     2d6:	90 93 6d 01 	sts	0x016D, r25	; 0x80016d <flag+0x1>
     2da:	80 93 6c 01 	sts	0x016C, r24	; 0x80016c <flag>
	}
	TIMSK1 &= ~(1<<ICIE1) | (1<<TOIE1);
     2de:	ef e6       	ldi	r30, 0x6F	; 111
     2e0:	f0 e0       	ldi	r31, 0x00	; 0
     2e2:	80 81       	ld	r24, Z
     2e4:	8f 7d       	andi	r24, 0xDF	; 223
     2e6:	80 83       	st	Z, r24
}
     2e8:	ff 91       	pop	r31
     2ea:	ef 91       	pop	r30
     2ec:	9f 91       	pop	r25
     2ee:	8f 91       	pop	r24
     2f0:	0f 90       	pop	r0
     2f2:	0f be       	out	0x3f, r0	; 63
     2f4:	0f 90       	pop	r0
     2f6:	1f 90       	pop	r1
     2f8:	18 95       	reti

000002fa <__vector_13>:

ISR(TIMER1_OVF_vect){
     2fa:	1f 92       	push	r1
     2fc:	0f 92       	push	r0
     2fe:	0f b6       	in	r0, 0x3f	; 63
     300:	0f 92       	push	r0
     302:	11 24       	eor	r1, r1
     304:	8f 93       	push	r24
     306:	9f 93       	push	r25
	overflow++;					//count overflow
     308:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <overflow>
     30c:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <overflow+0x1>
     310:	01 96       	adiw	r24, 0x01	; 1
     312:	90 93 67 01 	sts	0x0167, r25	; 0x800167 <overflow+0x1>
     316:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <overflow>
}
     31a:	9f 91       	pop	r25
     31c:	8f 91       	pop	r24
     31e:	0f 90       	pop	r0
     320:	0f be       	out	0x3f, r0	; 63
     322:	0f 90       	pop	r0
     324:	1f 90       	pop	r1
     326:	18 95       	reti

00000328 <__vector_14>:


// control the frequency by ping sensor
ISR(TIMER0_COMPA_vect)
{
     328:	1f 92       	push	r1
     32a:	0f 92       	push	r0
     32c:	0f b6       	in	r0, 0x3f	; 63
     32e:	0f 92       	push	r0
     330:	11 24       	eor	r1, r1
     332:	2f 93       	push	r18
     334:	3f 93       	push	r19
     336:	4f 93       	push	r20
     338:	5f 93       	push	r21
     33a:	6f 93       	push	r22
     33c:	7f 93       	push	r23
     33e:	8f 93       	push	r24
     340:	9f 93       	push	r25
     342:	af 93       	push	r26
     344:	bf 93       	push	r27
     346:	ef 93       	push	r30
     348:	ff 93       	push	r31
	if(pulse_width > - 1187){
     34a:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <__data_end>
     34e:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <__data_end+0x1>
     352:	8e 35       	cpi	r24, 0x5E	; 94
     354:	9b 4f       	sbci	r25, 0xFB	; 251
     356:	58 f0       	brcs	.+22     	; 0x36e <__vector_14+0x46>
		OCR0A = C7;
     358:	8c e3       	ldi	r24, 0x3C	; 60
     35a:	87 bd       	out	0x27, r24	; 39
		printf("C7 ");
     35c:	8c e1       	ldi	r24, 0x1C	; 28
     35e:	91 e0       	ldi	r25, 0x01	; 1
     360:	9f 93       	push	r25
     362:	8f 93       	push	r24
     364:	0e 94 43 08 	call	0x1086	; 0x1086 <printf>
     368:	0f 90       	pop	r0
     36a:	0f 90       	pop	r0
     36c:	76 c0       	rjmp	.+236    	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
	}
	else if(pulse_width > -1874){
     36e:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <__data_end>
     372:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <__data_end+0x1>
     376:	8f 3a       	cpi	r24, 0xAF	; 175
     378:	98 4f       	sbci	r25, 0xF8	; 248
     37a:	58 f0       	brcs	.+22     	; 0x392 <__vector_14+0x6a>
		OCR0A = B7;
     37c:	80 e4       	ldi	r24, 0x40	; 64
     37e:	87 bd       	out	0x27, r24	; 39
		printf("B7 ");
     380:	80 e2       	ldi	r24, 0x20	; 32
     382:	91 e0       	ldi	r25, 0x01	; 1
     384:	9f 93       	push	r25
     386:	8f 93       	push	r24
     388:	0e 94 43 08 	call	0x1086	; 0x1086 <printf>
     38c:	0f 90       	pop	r0
     38e:	0f 90       	pop	r0
     390:	64 c0       	rjmp	.+200    	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
	}
	else if(pulse_width > -2561){
     392:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <__data_end>
     396:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <__data_end+0x1>
     39a:	81 15       	cp	r24, r1
     39c:	96 4f       	sbci	r25, 0xF6	; 246
     39e:	58 f0       	brcs	.+22     	; 0x3b6 <__vector_14+0x8e>
		OCR0A = A7;
     3a0:	87 e4       	ldi	r24, 0x47	; 71
     3a2:	87 bd       	out	0x27, r24	; 39
		printf("A7 ");
     3a4:	84 e2       	ldi	r24, 0x24	; 36
     3a6:	91 e0       	ldi	r25, 0x01	; 1
     3a8:	9f 93       	push	r25
     3aa:	8f 93       	push	r24
     3ac:	0e 94 43 08 	call	0x1086	; 0x1086 <printf>
     3b0:	0f 90       	pop	r0
     3b2:	0f 90       	pop	r0
     3b4:	52 c0       	rjmp	.+164    	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
	}
	else if(pulse_width > -3248){
     3b6:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <__data_end>
     3ba:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <__data_end+0x1>
     3be:	81 35       	cpi	r24, 0x51	; 81
     3c0:	93 4f       	sbci	r25, 0xF3	; 243
     3c2:	58 f0       	brcs	.+22     	; 0x3da <__vector_14+0xb2>
		OCR0A = G6;
     3c4:	80 e5       	ldi	r24, 0x50	; 80
     3c6:	87 bd       	out	0x27, r24	; 39
		printf("G6 ");
     3c8:	88 e2       	ldi	r24, 0x28	; 40
     3ca:	91 e0       	ldi	r25, 0x01	; 1
     3cc:	9f 93       	push	r25
     3ce:	8f 93       	push	r24
     3d0:	0e 94 43 08 	call	0x1086	; 0x1086 <printf>
     3d4:	0f 90       	pop	r0
     3d6:	0f 90       	pop	r0
     3d8:	40 c0       	rjmp	.+128    	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
	}
	else if(pulse_width > -3935){
     3da:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <__data_end>
     3de:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <__data_end+0x1>
     3e2:	82 3a       	cpi	r24, 0xA2	; 162
     3e4:	90 4f       	sbci	r25, 0xF0	; 240
     3e6:	58 f0       	brcs	.+22     	; 0x3fe <__vector_14+0xd6>
		OCR0A = F6;
     3e8:	8a e5       	ldi	r24, 0x5A	; 90
     3ea:	87 bd       	out	0x27, r24	; 39
		printf("F6 ");
     3ec:	8c e2       	ldi	r24, 0x2C	; 44
     3ee:	91 e0       	ldi	r25, 0x01	; 1
     3f0:	9f 93       	push	r25
     3f2:	8f 93       	push	r24
     3f4:	0e 94 43 08 	call	0x1086	; 0x1086 <printf>
     3f8:	0f 90       	pop	r0
     3fa:	0f 90       	pop	r0
     3fc:	2e c0       	rjmp	.+92     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
	}
	else if(pulse_width > -4622){
     3fe:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <__data_end>
     402:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <__data_end+0x1>
     406:	83 3f       	cpi	r24, 0xF3	; 243
     408:	9d 4e       	sbci	r25, 0xED	; 237
     40a:	58 f0       	brcs	.+22     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
		OCR0A = E6;
     40c:	8f e5       	ldi	r24, 0x5F	; 95
     40e:	87 bd       	out	0x27, r24	; 39
		printf("E6 ");
     410:	80 e3       	ldi	r24, 0x30	; 48
     412:	91 e0       	ldi	r25, 0x01	; 1
     414:	9f 93       	push	r25
     416:	8f 93       	push	r24
     418:	0e 94 43 08 	call	0x1086	; 0x1086 <printf>
     41c:	0f 90       	pop	r0
     41e:	0f 90       	pop	r0
     420:	1c c0       	rjmp	.+56     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
	}
	else if(pulse_width > -5309){
     422:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <__data_end>
     426:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <__data_end+0x1>
     42a:	84 34       	cpi	r24, 0x44	; 68
     42c:	9b 4e       	sbci	r25, 0xEB	; 235
     42e:	58 f0       	brcs	.+22     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
		OCR0A = D6;
     430:	8b e6       	ldi	r24, 0x6B	; 107
     432:	87 bd       	out	0x27, r24	; 39
		printf("D6 ");
     434:	84 e3       	ldi	r24, 0x34	; 52
     436:	91 e0       	ldi	r25, 0x01	; 1
     438:	9f 93       	push	r25
     43a:	8f 93       	push	r24
     43c:	0e 94 43 08 	call	0x1086	; 0x1086 <printf>
     440:	0f 90       	pop	r0
     442:	0f 90       	pop	r0
     444:	0a c0       	rjmp	.+20     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
	}
	else{
		OCR0A = C6;
     446:	88 e7       	ldi	r24, 0x78	; 120
     448:	87 bd       	out	0x27, r24	; 39
		printf("C6 ");
     44a:	88 e3       	ldi	r24, 0x38	; 56
     44c:	91 e0       	ldi	r25, 0x01	; 1
     44e:	9f 93       	push	r25
     450:	8f 93       	push	r24
     452:	0e 94 43 08 	call	0x1086	; 0x1086 <printf>
     456:	0f 90       	pop	r0
     458:	0f 90       	pop	r0
	}
	
	TIMSK0 &= ~(1 << OCIE0A);
     45a:	ee e6       	ldi	r30, 0x6E	; 110
     45c:	f0 e0       	ldi	r31, 0x00	; 0
     45e:	80 81       	ld	r24, Z
     460:	8d 7f       	andi	r24, 0xFD	; 253
     462:	80 83       	st	Z, r24
	
	printf("pulse_width: %d, OCR0A: %d\n",-pulse_width,OCR0A); // print to serial
     464:	27 b5       	in	r18, 0x27	; 39
     466:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <__data_end>
     46a:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <__data_end+0x1>
     46e:	1f 92       	push	r1
     470:	2f 93       	push	r18
     472:	91 95       	neg	r25
     474:	81 95       	neg	r24
     476:	91 09       	sbc	r25, r1
     478:	9f 93       	push	r25
     47a:	8f 93       	push	r24
     47c:	8c e3       	ldi	r24, 0x3C	; 60
     47e:	91 e0       	ldi	r25, 0x01	; 1
     480:	9f 93       	push	r25
     482:	8f 93       	push	r24
     484:	0e 94 43 08 	call	0x1086	; 0x1086 <printf>
}
     488:	0f 90       	pop	r0
     48a:	0f 90       	pop	r0
     48c:	0f 90       	pop	r0
     48e:	0f 90       	pop	r0
     490:	0f 90       	pop	r0
     492:	0f 90       	pop	r0
     494:	ff 91       	pop	r31
     496:	ef 91       	pop	r30
     498:	bf 91       	pop	r27
     49a:	af 91       	pop	r26
     49c:	9f 91       	pop	r25
     49e:	8f 91       	pop	r24
     4a0:	7f 91       	pop	r23
     4a2:	6f 91       	pop	r22
     4a4:	5f 91       	pop	r21
     4a6:	4f 91       	pop	r20
     4a8:	3f 91       	pop	r19
     4aa:	2f 91       	pop	r18
     4ac:	0f 90       	pop	r0
     4ae:	0f be       	out	0x3f, r0	; 63
     4b0:	0f 90       	pop	r0
     4b2:	1f 90       	pop	r1
     4b4:	18 95       	reti

000004b6 <ADC_DAC>:

// control the volume by light resistor
void ADC_DAC(void){
     4b6:	cf 93       	push	r28
     4b8:	df 93       	push	r29
	printf("ADC: %d\n",ADC);
     4ba:	c8 e7       	ldi	r28, 0x78	; 120
     4bc:	d0 e0       	ldi	r29, 0x00	; 0
     4be:	88 81       	ld	r24, Y
     4c0:	99 81       	ldd	r25, Y+1	; 0x01
     4c2:	9f 93       	push	r25
     4c4:	8f 93       	push	r24
     4c6:	88 e5       	ldi	r24, 0x58	; 88
     4c8:	91 e0       	ldi	r25, 0x01	; 1
     4ca:	9f 93       	push	r25
     4cc:	8f 93       	push	r24
     4ce:	0e 94 43 08 	call	0x1086	; 0x1086 <printf>

	//000
	if((ADC > 350) && (ADC < 380)){
     4d2:	88 81       	ld	r24, Y
     4d4:	99 81       	ldd	r25, Y+1	; 0x01
     4d6:	0f 90       	pop	r0
     4d8:	0f 90       	pop	r0
     4da:	0f 90       	pop	r0
     4dc:	0f 90       	pop	r0
     4de:	8f 35       	cpi	r24, 0x5F	; 95
     4e0:	91 40       	sbci	r25, 0x01	; 1
     4e2:	58 f0       	brcs	.+22     	; 0x4fa <ADC_DAC+0x44>
     4e4:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     4e8:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     4ec:	8c 37       	cpi	r24, 0x7C	; 124
     4ee:	91 40       	sbci	r25, 0x01	; 1
     4f0:	20 f4       	brcc	.+8      	; 0x4fa <ADC_DAC+0x44>
		PORTB &= ~(1 << PORTB2);
     4f2:	2a 98       	cbi	0x05, 2	; 5
		PORTB &= ~(1 << PORTB3);
     4f4:	2b 98       	cbi	0x05, 3	; 5
		PORTB &= ~(1 << PORTB4);
     4f6:	2c 98       	cbi	0x05, 4	; 5
     4f8:	81 c0       	rjmp	.+258    	; 0x5fc <ADC_DAC+0x146>

	}
	//001
	else if((ADC > 380) && (ADC < 420)){
     4fa:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     4fe:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     502:	8d 37       	cpi	r24, 0x7D	; 125
     504:	91 40       	sbci	r25, 0x01	; 1
     506:	58 f0       	brcs	.+22     	; 0x51e <ADC_DAC+0x68>
     508:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     50c:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     510:	84 3a       	cpi	r24, 0xA4	; 164
     512:	91 40       	sbci	r25, 0x01	; 1
     514:	20 f4       	brcc	.+8      	; 0x51e <ADC_DAC+0x68>
		PORTB |= (1 << PORTB2);
     516:	2a 9a       	sbi	0x05, 2	; 5
		PORTB &= ~(1 << PORTB3);
     518:	2b 98       	cbi	0x05, 3	; 5
		PORTB &= ~(1 << PORTB4);
     51a:	2c 98       	cbi	0x05, 4	; 5
     51c:	6f c0       	rjmp	.+222    	; 0x5fc <ADC_DAC+0x146>
	}
	//010
	else if((ADC >= 420) && (ADC < 450)){
     51e:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     522:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     526:	84 3a       	cpi	r24, 0xA4	; 164
     528:	91 40       	sbci	r25, 0x01	; 1
     52a:	58 f0       	brcs	.+22     	; 0x542 <ADC_DAC+0x8c>
     52c:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     530:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     534:	82 3c       	cpi	r24, 0xC2	; 194
     536:	91 40       	sbci	r25, 0x01	; 1
     538:	20 f4       	brcc	.+8      	; 0x542 <ADC_DAC+0x8c>
		PORTB &= ~(1 << PORTB2);
     53a:	2a 98       	cbi	0x05, 2	; 5
		PORTB |= (1 << PORTB3);
     53c:	2b 9a       	sbi	0x05, 3	; 5
		PORTB &= ~(1 << PORTB4);
     53e:	2c 98       	cbi	0x05, 4	; 5
     540:	5d c0       	rjmp	.+186    	; 0x5fc <ADC_DAC+0x146>
	}
	//011
	else if((ADC >= 450) && (ADC < 480)){
     542:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     546:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     54a:	82 3c       	cpi	r24, 0xC2	; 194
     54c:	91 40       	sbci	r25, 0x01	; 1
     54e:	58 f0       	brcs	.+22     	; 0x566 <ADC_DAC+0xb0>
     550:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     554:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     558:	80 3e       	cpi	r24, 0xE0	; 224
     55a:	91 40       	sbci	r25, 0x01	; 1
     55c:	20 f4       	brcc	.+8      	; 0x566 <ADC_DAC+0xb0>
		PORTB |= (1 << PORTB2);
     55e:	2a 9a       	sbi	0x05, 2	; 5
		PORTB |= (1 << PORTB3);
     560:	2b 9a       	sbi	0x05, 3	; 5
		PORTB &= ~(1 << PORTB4);
     562:	2c 98       	cbi	0x05, 4	; 5
     564:	4b c0       	rjmp	.+150    	; 0x5fc <ADC_DAC+0x146>
	}
	//100
	else if((ADC >= 480) && (ADC < 510)){
     566:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     56a:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     56e:	80 3e       	cpi	r24, 0xE0	; 224
     570:	91 40       	sbci	r25, 0x01	; 1
     572:	58 f0       	brcs	.+22     	; 0x58a <ADC_DAC+0xd4>
     574:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     578:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     57c:	8e 3f       	cpi	r24, 0xFE	; 254
     57e:	91 40       	sbci	r25, 0x01	; 1
     580:	20 f4       	brcc	.+8      	; 0x58a <ADC_DAC+0xd4>
		PORTB &= ~(1 << PORTB2);
     582:	2a 98       	cbi	0x05, 2	; 5
		PORTB &= ~(1 << PORTB3);
     584:	2b 98       	cbi	0x05, 3	; 5
		PORTB |= (1 << PORTB4);
     586:	2c 9a       	sbi	0x05, 4	; 5
     588:	39 c0       	rjmp	.+114    	; 0x5fc <ADC_DAC+0x146>
	}
	//101
	else if((ADC >= 510) && (ADC < 540)){
     58a:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     58e:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     592:	8e 3f       	cpi	r24, 0xFE	; 254
     594:	91 40       	sbci	r25, 0x01	; 1
     596:	58 f0       	brcs	.+22     	; 0x5ae <ADC_DAC+0xf8>
     598:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     59c:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     5a0:	8c 31       	cpi	r24, 0x1C	; 28
     5a2:	92 40       	sbci	r25, 0x02	; 2
     5a4:	20 f4       	brcc	.+8      	; 0x5ae <ADC_DAC+0xf8>
		PORTB |= (1 << PORTB2);
     5a6:	2a 9a       	sbi	0x05, 2	; 5
		PORTB &= ~(1 << PORTB3);
     5a8:	2b 98       	cbi	0x05, 3	; 5
		PORTB |= (1 << PORTB4);
     5aa:	2c 9a       	sbi	0x05, 4	; 5
     5ac:	27 c0       	rjmp	.+78     	; 0x5fc <ADC_DAC+0x146>
	}
	//110
	else if((ADC >= 540) && (ADC < 570)){
     5ae:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     5b2:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     5b6:	8c 31       	cpi	r24, 0x1C	; 28
     5b8:	92 40       	sbci	r25, 0x02	; 2
     5ba:	58 f0       	brcs	.+22     	; 0x5d2 <ADC_DAC+0x11c>
     5bc:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     5c0:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     5c4:	8a 33       	cpi	r24, 0x3A	; 58
     5c6:	92 40       	sbci	r25, 0x02	; 2
     5c8:	20 f4       	brcc	.+8      	; 0x5d2 <ADC_DAC+0x11c>
		PORTB &= ~(1 << PORTB2);
     5ca:	2a 98       	cbi	0x05, 2	; 5
		PORTB |= (1 << PORTB3);
     5cc:	2b 9a       	sbi	0x05, 3	; 5
		PORTB |= (1 << PORTB4);
     5ce:	2c 9a       	sbi	0x05, 4	; 5
     5d0:	15 c0       	rjmp	.+42     	; 0x5fc <ADC_DAC+0x146>
	}
	//111
	else if((ADC >= 570) && (ADC < 600)){
     5d2:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     5d6:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     5da:	8a 33       	cpi	r24, 0x3A	; 58
     5dc:	92 40       	sbci	r25, 0x02	; 2
     5de:	58 f0       	brcs	.+22     	; 0x5f6 <ADC_DAC+0x140>
     5e0:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     5e4:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     5e8:	88 35       	cpi	r24, 0x58	; 88
     5ea:	92 40       	sbci	r25, 0x02	; 2
     5ec:	20 f4       	brcc	.+8      	; 0x5f6 <ADC_DAC+0x140>
		PORTB |= (1 << PORTB2);
     5ee:	2a 9a       	sbi	0x05, 2	; 5
		PORTB |= (1 << PORTB3);
     5f0:	2b 9a       	sbi	0x05, 3	; 5
		PORTB |= (1 << PORTB4);
     5f2:	2c 9a       	sbi	0x05, 4	; 5
     5f4:	03 c0       	rjmp	.+6      	; 0x5fc <ADC_DAC+0x146>
	}
	//default:000
	else{
		PORTB &= ~(1 << PORTB2);
     5f6:	2a 98       	cbi	0x05, 2	; 5
		PORTB &= ~(1 << PORTB3);
     5f8:	2b 98       	cbi	0x05, 3	; 5
		PORTB &= ~(1 << PORTB4);			
     5fa:	2c 98       	cbi	0x05, 4	; 5
	}
}
     5fc:	df 91       	pop	r29
     5fe:	cf 91       	pop	r28
     600:	08 95       	ret

00000602 <main>:
#define ADC_min = 300;
float voltage = 0.0f;

int main(void)
{
	uart_init();	// init UART
     602:	0e 94 ef 00 	call	0x1de	; 0x1de <uart_init>
	
	DDRB = 0x00;	// init PORTB to be all inputs
     606:	14 b8       	out	0x04, r1	; 4
	DDRC = 0xFF;	// init PORTC to be all outputs
     608:	8f ef       	ldi	r24, 0xFF	; 255
     60a:	87 b9       	out	0x07, r24	; 7
	DDRD = 0x40;	// enable PD6 to be output
     60c:	80 e4       	ldi	r24, 0x40	; 64
     60e:	8a b9       	out	0x0a, r24	; 10
	
	TCCR1A = 0x00;	// init High byte to zero
     610:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	TCCR1B = 0x00;  // init Mid byte to zero
     614:	e1 e8       	ldi	r30, 0x81	; 129
     616:	f0 e0       	ldi	r31, 0x00	; 0
     618:	10 82       	st	Z, r1
	TCCR1C = 0x00;	// init Low byte to zero
     61a:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
	
	DDRB  |=  (1<<PORTB1) | (1<<PORTB2) | (1<<PORTB3)| (1<<PORTB4);	// enable PB1 to be output channel
     61e:	84 b1       	in	r24, 0x04	; 4
     620:	8e 61       	ori	r24, 0x1E	; 30
     622:	84 b9       	out	0x04, r24	; 4
	PORTD |=  (1 << PORTD6); //enable PD6 to be output channel 
     624:	5e 9a       	sbi	0x0b, 6	; 11
	PORTB |=  (1<<PORTB1) | (1<<PORTB2);// change PB1 PB2 to high
     626:	85 b1       	in	r24, 0x05	; 5
     628:	86 60       	ori	r24, 0x06	; 6
     62a:	85 b9       	out	0x05, r24	; 5

	TIMSK1 |= (1<<ICIE1) | (1<<TOIE1);  // set overflow interrupt 
     62c:	af e6       	ldi	r26, 0x6F	; 111
     62e:	b0 e0       	ldi	r27, 0x00	; 0
     630:	8c 91       	ld	r24, X
     632:	81 62       	ori	r24, 0x21	; 33
     634:	8c 93       	st	X, r24
	TCCR1B |= (1<<CS11 ) | (1<<ICES1);	// set clock prescale to 8 and enable rising edge capture
     636:	80 81       	ld	r24, Z
     638:	82 64       	ori	r24, 0x42	; 66
     63a:	80 83       	st	Z, r24
	
	TCNT1 = 0;	// reset Counter 1
     63c:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     640:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	
	TCCR0A |= (1 << COM0A0) | (1 << WGM01); //Toggle OC1A on compare match;CTC mode
     644:	84 b5       	in	r24, 0x24	; 36
     646:	82 64       	ori	r24, 0x42	; 66
     648:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1 << CS01) | (1 << CS00); // prescaler 64
     64a:	85 b5       	in	r24, 0x25	; 37
     64c:	83 60       	ori	r24, 0x03	; 3
     64e:	85 bd       	out	0x25, r24	; 37

	DDRC = 0x0;	// init PORTC to be all inputs
     650:	17 b8       	out	0x07, r1	; 7
	PORTC &= ~(1 << PORTC0); // set PC0 active high
     652:	40 98       	cbi	0x08, 0	; 8
		
	ADMUX |= (1 << REFS0); //AVcc refer
     654:	ec e7       	ldi	r30, 0x7C	; 124
     656:	f0 e0       	ldi	r31, 0x00	; 0
     658:	80 81       	ld	r24, Z
     65a:	80 64       	ori	r24, 0x40	; 64
     65c:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADEN); //turn on ADC
     65e:	ea e7       	ldi	r30, 0x7A	; 122
     660:	f0 e0       	ldi	r31, 0x00	; 0
     662:	80 81       	ld	r24, Z
     664:	80 68       	ori	r24, 0x80	; 128
     666:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0); //division factor = 128, ADC works in
     668:	80 81       	ld	r24, Z
     66a:	87 60       	ori	r24, 0x07	; 7
     66c:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADATE); //Signal source, in this case is the free-running
     66e:	80 81       	ld	r24, Z
     670:	80 62       	ori	r24, 0x20	; 32
     672:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADSC); //Start conversation
     674:	80 81       	ld	r24, Z
     676:	80 64       	ori	r24, 0x40	; 64
     678:	80 83       	st	Z, r24
	ADCSRB &= ~((1 << ADTS2)|(1 << ADTS1)|(1 << ADTS0));//ADC in free-running mode
     67a:	eb e7       	ldi	r30, 0x7B	; 123
     67c:	f0 e0       	ldi	r31, 0x00	; 0
     67e:	80 81       	ld	r24, Z
     680:	88 7f       	andi	r24, 0xF8	; 248
     682:	80 83       	st	Z, r24

	sei();		// enable interrupt
     684:	78 94       	sei
	
	while (1)
	{
		TIMSK1 |= (1<<ICIE1) | (1<<TOIE1);
     686:	0f e6       	ldi	r16, 0x6F	; 111
     688:	10 e0       	ldi	r17, 0x00	; 0
		if (TCNT1>= 9){		// counts 9 times to obtain 100kHz
     68a:	0f 2e       	mov	r0, r31
     68c:	f4 e8       	ldi	r31, 0x84	; 132
     68e:	ef 2e       	mov	r14, r31
     690:	f1 2c       	mov	r15, r1
     692:	f0 2d       	mov	r31, r0
			PORTB ^= (1<<PORTB1);
     694:	68 94       	set
     696:	dd 24       	eor	r13, r13
     698:	d1 f8       	bld	r13, 1
			TCNT1 = 0;
			}
		output_length();
		TIMSK0 |= (1 << OCIE0A);	
     69a:	ce e6       	ldi	r28, 0x6E	; 110
     69c:	d0 e0       	ldi	r29, 0x00	; 0

	sei();		// enable interrupt
	
	while (1)
	{
		TIMSK1 |= (1<<ICIE1) | (1<<TOIE1);
     69e:	f8 01       	movw	r30, r16
     6a0:	80 81       	ld	r24, Z
     6a2:	81 62       	ori	r24, 0x21	; 33
     6a4:	80 83       	st	Z, r24
		if (TCNT1>= 9){		// counts 9 times to obtain 100kHz
     6a6:	f7 01       	movw	r30, r14
     6a8:	80 81       	ld	r24, Z
     6aa:	91 81       	ldd	r25, Z+1	; 0x01
     6ac:	09 97       	sbiw	r24, 0x09	; 9
     6ae:	28 f0       	brcs	.+10     	; 0x6ba <main+0xb8>
			PORTB ^= (1<<PORTB1);
     6b0:	85 b1       	in	r24, 0x05	; 5
     6b2:	8d 25       	eor	r24, r13
     6b4:	85 b9       	out	0x05, r24	; 5
			TCNT1 = 0;
     6b6:	11 82       	std	Z+1, r1	; 0x01
     6b8:	10 82       	st	Z, r1
			}
		output_length();
     6ba:	0e 94 0a 01 	call	0x214	; 0x214 <output_length>
		TIMSK0 |= (1 << OCIE0A);	
     6be:	88 81       	ld	r24, Y
     6c0:	82 60       	ori	r24, 0x02	; 2
     6c2:	88 83       	st	Y, r24
		
		//volume control
		ADC_DAC();
     6c4:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <ADC_DAC>
	}
     6c8:	ea cf       	rjmp	.-44     	; 0x69e <main+0x9c>

000006ca <vfprintf>:
     6ca:	a0 e1       	ldi	r26, 0x10	; 16
     6cc:	b0 e0       	ldi	r27, 0x00	; 0
     6ce:	eb e6       	ldi	r30, 0x6B	; 107
     6d0:	f3 e0       	ldi	r31, 0x03	; 3
     6d2:	0c 94 e2 06 	jmp	0xdc4	; 0xdc4 <__prologue_saves__>
     6d6:	7c 01       	movw	r14, r24
     6d8:	1b 01       	movw	r2, r22
     6da:	6a 01       	movw	r12, r20
     6dc:	fc 01       	movw	r30, r24
     6de:	17 82       	std	Z+7, r1	; 0x07
     6e0:	16 82       	std	Z+6, r1	; 0x06
     6e2:	83 81       	ldd	r24, Z+3	; 0x03
     6e4:	81 ff       	sbrs	r24, 1
     6e6:	44 c3       	rjmp	.+1672   	; 0xd70 <__stack+0x471>
     6e8:	9e 01       	movw	r18, r28
     6ea:	2f 5f       	subi	r18, 0xFF	; 255
     6ec:	3f 4f       	sbci	r19, 0xFF	; 255
     6ee:	39 01       	movw	r6, r18
     6f0:	f7 01       	movw	r30, r14
     6f2:	93 81       	ldd	r25, Z+3	; 0x03
     6f4:	f1 01       	movw	r30, r2
     6f6:	93 fd       	sbrc	r25, 3
     6f8:	85 91       	lpm	r24, Z+
     6fa:	93 ff       	sbrs	r25, 3
     6fc:	81 91       	ld	r24, Z+
     6fe:	1f 01       	movw	r2, r30
     700:	88 23       	and	r24, r24
     702:	09 f4       	brne	.+2      	; 0x706 <vfprintf+0x3c>
     704:	31 c3       	rjmp	.+1634   	; 0xd68 <__stack+0x469>
     706:	85 32       	cpi	r24, 0x25	; 37
     708:	39 f4       	brne	.+14     	; 0x718 <vfprintf+0x4e>
     70a:	93 fd       	sbrc	r25, 3
     70c:	85 91       	lpm	r24, Z+
     70e:	93 ff       	sbrs	r25, 3
     710:	81 91       	ld	r24, Z+
     712:	1f 01       	movw	r2, r30
     714:	85 32       	cpi	r24, 0x25	; 37
     716:	39 f4       	brne	.+14     	; 0x726 <vfprintf+0x5c>
     718:	b7 01       	movw	r22, r14
     71a:	90 e0       	ldi	r25, 0x00	; 0
     71c:	0e 94 07 08 	call	0x100e	; 0x100e <fputc>
     720:	56 01       	movw	r10, r12
     722:	65 01       	movw	r12, r10
     724:	e5 cf       	rjmp	.-54     	; 0x6f0 <vfprintf+0x26>
     726:	10 e0       	ldi	r17, 0x00	; 0
     728:	51 2c       	mov	r5, r1
     72a:	91 2c       	mov	r9, r1
     72c:	ff e1       	ldi	r31, 0x1F	; 31
     72e:	f9 15       	cp	r31, r9
     730:	d8 f0       	brcs	.+54     	; 0x768 <vfprintf+0x9e>
     732:	8b 32       	cpi	r24, 0x2B	; 43
     734:	79 f0       	breq	.+30     	; 0x754 <vfprintf+0x8a>
     736:	38 f4       	brcc	.+14     	; 0x746 <vfprintf+0x7c>
     738:	80 32       	cpi	r24, 0x20	; 32
     73a:	79 f0       	breq	.+30     	; 0x75a <vfprintf+0x90>
     73c:	83 32       	cpi	r24, 0x23	; 35
     73e:	a1 f4       	brne	.+40     	; 0x768 <vfprintf+0x9e>
     740:	f9 2d       	mov	r31, r9
     742:	f0 61       	ori	r31, 0x10	; 16
     744:	2e c0       	rjmp	.+92     	; 0x7a2 <vfprintf+0xd8>
     746:	8d 32       	cpi	r24, 0x2D	; 45
     748:	61 f0       	breq	.+24     	; 0x762 <vfprintf+0x98>
     74a:	80 33       	cpi	r24, 0x30	; 48
     74c:	69 f4       	brne	.+26     	; 0x768 <vfprintf+0x9e>
     74e:	29 2d       	mov	r18, r9
     750:	21 60       	ori	r18, 0x01	; 1
     752:	2d c0       	rjmp	.+90     	; 0x7ae <vfprintf+0xe4>
     754:	39 2d       	mov	r19, r9
     756:	32 60       	ori	r19, 0x02	; 2
     758:	93 2e       	mov	r9, r19
     75a:	89 2d       	mov	r24, r9
     75c:	84 60       	ori	r24, 0x04	; 4
     75e:	98 2e       	mov	r9, r24
     760:	2a c0       	rjmp	.+84     	; 0x7b6 <vfprintf+0xec>
     762:	e9 2d       	mov	r30, r9
     764:	e8 60       	ori	r30, 0x08	; 8
     766:	15 c0       	rjmp	.+42     	; 0x792 <vfprintf+0xc8>
     768:	97 fc       	sbrc	r9, 7
     76a:	2d c0       	rjmp	.+90     	; 0x7c6 <vfprintf+0xfc>
     76c:	20 ed       	ldi	r18, 0xD0	; 208
     76e:	28 0f       	add	r18, r24
     770:	2a 30       	cpi	r18, 0x0A	; 10
     772:	88 f4       	brcc	.+34     	; 0x796 <vfprintf+0xcc>
     774:	96 fe       	sbrs	r9, 6
     776:	06 c0       	rjmp	.+12     	; 0x784 <vfprintf+0xba>
     778:	3a e0       	ldi	r19, 0x0A	; 10
     77a:	13 9f       	mul	r17, r19
     77c:	20 0d       	add	r18, r0
     77e:	11 24       	eor	r1, r1
     780:	12 2f       	mov	r17, r18
     782:	19 c0       	rjmp	.+50     	; 0x7b6 <vfprintf+0xec>
     784:	8a e0       	ldi	r24, 0x0A	; 10
     786:	58 9e       	mul	r5, r24
     788:	20 0d       	add	r18, r0
     78a:	11 24       	eor	r1, r1
     78c:	52 2e       	mov	r5, r18
     78e:	e9 2d       	mov	r30, r9
     790:	e0 62       	ori	r30, 0x20	; 32
     792:	9e 2e       	mov	r9, r30
     794:	10 c0       	rjmp	.+32     	; 0x7b6 <vfprintf+0xec>
     796:	8e 32       	cpi	r24, 0x2E	; 46
     798:	31 f4       	brne	.+12     	; 0x7a6 <vfprintf+0xdc>
     79a:	96 fc       	sbrc	r9, 6
     79c:	e5 c2       	rjmp	.+1482   	; 0xd68 <__stack+0x469>
     79e:	f9 2d       	mov	r31, r9
     7a0:	f0 64       	ori	r31, 0x40	; 64
     7a2:	9f 2e       	mov	r9, r31
     7a4:	08 c0       	rjmp	.+16     	; 0x7b6 <vfprintf+0xec>
     7a6:	8c 36       	cpi	r24, 0x6C	; 108
     7a8:	21 f4       	brne	.+8      	; 0x7b2 <vfprintf+0xe8>
     7aa:	29 2d       	mov	r18, r9
     7ac:	20 68       	ori	r18, 0x80	; 128
     7ae:	92 2e       	mov	r9, r18
     7b0:	02 c0       	rjmp	.+4      	; 0x7b6 <vfprintf+0xec>
     7b2:	88 36       	cpi	r24, 0x68	; 104
     7b4:	41 f4       	brne	.+16     	; 0x7c6 <vfprintf+0xfc>
     7b6:	f1 01       	movw	r30, r2
     7b8:	93 fd       	sbrc	r25, 3
     7ba:	85 91       	lpm	r24, Z+
     7bc:	93 ff       	sbrs	r25, 3
     7be:	81 91       	ld	r24, Z+
     7c0:	1f 01       	movw	r2, r30
     7c2:	81 11       	cpse	r24, r1
     7c4:	b3 cf       	rjmp	.-154    	; 0x72c <vfprintf+0x62>
     7c6:	9b eb       	ldi	r25, 0xBB	; 187
     7c8:	98 0f       	add	r25, r24
     7ca:	93 30       	cpi	r25, 0x03	; 3
     7cc:	20 f4       	brcc	.+8      	; 0x7d6 <vfprintf+0x10c>
     7ce:	99 2d       	mov	r25, r9
     7d0:	90 61       	ori	r25, 0x10	; 16
     7d2:	80 5e       	subi	r24, 0xE0	; 224
     7d4:	07 c0       	rjmp	.+14     	; 0x7e4 <vfprintf+0x11a>
     7d6:	9b e9       	ldi	r25, 0x9B	; 155
     7d8:	98 0f       	add	r25, r24
     7da:	93 30       	cpi	r25, 0x03	; 3
     7dc:	08 f0       	brcs	.+2      	; 0x7e0 <vfprintf+0x116>
     7de:	66 c1       	rjmp	.+716    	; 0xaac <__stack+0x1ad>
     7e0:	99 2d       	mov	r25, r9
     7e2:	9f 7e       	andi	r25, 0xEF	; 239
     7e4:	96 ff       	sbrs	r25, 6
     7e6:	16 e0       	ldi	r17, 0x06	; 6
     7e8:	9f 73       	andi	r25, 0x3F	; 63
     7ea:	99 2e       	mov	r9, r25
     7ec:	85 36       	cpi	r24, 0x65	; 101
     7ee:	19 f4       	brne	.+6      	; 0x7f6 <vfprintf+0x12c>
     7f0:	90 64       	ori	r25, 0x40	; 64
     7f2:	99 2e       	mov	r9, r25
     7f4:	08 c0       	rjmp	.+16     	; 0x806 <vfprintf+0x13c>
     7f6:	86 36       	cpi	r24, 0x66	; 102
     7f8:	21 f4       	brne	.+8      	; 0x802 <vfprintf+0x138>
     7fa:	39 2f       	mov	r19, r25
     7fc:	30 68       	ori	r19, 0x80	; 128
     7fe:	93 2e       	mov	r9, r19
     800:	02 c0       	rjmp	.+4      	; 0x806 <vfprintf+0x13c>
     802:	11 11       	cpse	r17, r1
     804:	11 50       	subi	r17, 0x01	; 1
     806:	97 fe       	sbrs	r9, 7
     808:	07 c0       	rjmp	.+14     	; 0x818 <vfprintf+0x14e>
     80a:	1c 33       	cpi	r17, 0x3C	; 60
     80c:	50 f4       	brcc	.+20     	; 0x822 <vfprintf+0x158>
     80e:	44 24       	eor	r4, r4
     810:	43 94       	inc	r4
     812:	41 0e       	add	r4, r17
     814:	27 e0       	ldi	r18, 0x07	; 7
     816:	0b c0       	rjmp	.+22     	; 0x82e <vfprintf+0x164>
     818:	18 30       	cpi	r17, 0x08	; 8
     81a:	38 f0       	brcs	.+14     	; 0x82a <vfprintf+0x160>
     81c:	27 e0       	ldi	r18, 0x07	; 7
     81e:	17 e0       	ldi	r17, 0x07	; 7
     820:	05 c0       	rjmp	.+10     	; 0x82c <vfprintf+0x162>
     822:	27 e0       	ldi	r18, 0x07	; 7
     824:	9c e3       	ldi	r25, 0x3C	; 60
     826:	49 2e       	mov	r4, r25
     828:	02 c0       	rjmp	.+4      	; 0x82e <vfprintf+0x164>
     82a:	21 2f       	mov	r18, r17
     82c:	41 2c       	mov	r4, r1
     82e:	56 01       	movw	r10, r12
     830:	84 e0       	ldi	r24, 0x04	; 4
     832:	a8 0e       	add	r10, r24
     834:	b1 1c       	adc	r11, r1
     836:	f6 01       	movw	r30, r12
     838:	60 81       	ld	r22, Z
     83a:	71 81       	ldd	r23, Z+1	; 0x01
     83c:	82 81       	ldd	r24, Z+2	; 0x02
     83e:	93 81       	ldd	r25, Z+3	; 0x03
     840:	04 2d       	mov	r16, r4
     842:	a3 01       	movw	r20, r6
     844:	0e 94 19 07 	call	0xe32	; 0xe32 <__ftoa_engine>
     848:	6c 01       	movw	r12, r24
     84a:	f9 81       	ldd	r31, Y+1	; 0x01
     84c:	fc 87       	std	Y+12, r31	; 0x0c
     84e:	f0 ff       	sbrs	r31, 0
     850:	02 c0       	rjmp	.+4      	; 0x856 <vfprintf+0x18c>
     852:	f3 ff       	sbrs	r31, 3
     854:	06 c0       	rjmp	.+12     	; 0x862 <vfprintf+0x198>
     856:	91 fc       	sbrc	r9, 1
     858:	06 c0       	rjmp	.+12     	; 0x866 <vfprintf+0x19c>
     85a:	92 fe       	sbrs	r9, 2
     85c:	06 c0       	rjmp	.+12     	; 0x86a <vfprintf+0x1a0>
     85e:	00 e2       	ldi	r16, 0x20	; 32
     860:	05 c0       	rjmp	.+10     	; 0x86c <vfprintf+0x1a2>
     862:	0d e2       	ldi	r16, 0x2D	; 45
     864:	03 c0       	rjmp	.+6      	; 0x86c <vfprintf+0x1a2>
     866:	0b e2       	ldi	r16, 0x2B	; 43
     868:	01 c0       	rjmp	.+2      	; 0x86c <vfprintf+0x1a2>
     86a:	00 e0       	ldi	r16, 0x00	; 0
     86c:	8c 85       	ldd	r24, Y+12	; 0x0c
     86e:	8c 70       	andi	r24, 0x0C	; 12
     870:	19 f0       	breq	.+6      	; 0x878 <vfprintf+0x1ae>
     872:	01 11       	cpse	r16, r1
     874:	5a c2       	rjmp	.+1204   	; 0xd2a <__stack+0x42b>
     876:	9b c2       	rjmp	.+1334   	; 0xdae <__stack+0x4af>
     878:	97 fe       	sbrs	r9, 7
     87a:	10 c0       	rjmp	.+32     	; 0x89c <vfprintf+0x1d2>
     87c:	4c 0c       	add	r4, r12
     87e:	fc 85       	ldd	r31, Y+12	; 0x0c
     880:	f4 ff       	sbrs	r31, 4
     882:	04 c0       	rjmp	.+8      	; 0x88c <vfprintf+0x1c2>
     884:	8a 81       	ldd	r24, Y+2	; 0x02
     886:	81 33       	cpi	r24, 0x31	; 49
     888:	09 f4       	brne	.+2      	; 0x88c <vfprintf+0x1c2>
     88a:	4a 94       	dec	r4
     88c:	14 14       	cp	r1, r4
     88e:	74 f5       	brge	.+92     	; 0x8ec <vfprintf+0x222>
     890:	28 e0       	ldi	r18, 0x08	; 8
     892:	24 15       	cp	r18, r4
     894:	78 f5       	brcc	.+94     	; 0x8f4 <vfprintf+0x22a>
     896:	88 e0       	ldi	r24, 0x08	; 8
     898:	48 2e       	mov	r4, r24
     89a:	2c c0       	rjmp	.+88     	; 0x8f4 <vfprintf+0x22a>
     89c:	96 fc       	sbrc	r9, 6
     89e:	2a c0       	rjmp	.+84     	; 0x8f4 <vfprintf+0x22a>
     8a0:	81 2f       	mov	r24, r17
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	8c 15       	cp	r24, r12
     8a6:	9d 05       	cpc	r25, r13
     8a8:	9c f0       	brlt	.+38     	; 0x8d0 <vfprintf+0x206>
     8aa:	3c ef       	ldi	r19, 0xFC	; 252
     8ac:	c3 16       	cp	r12, r19
     8ae:	3f ef       	ldi	r19, 0xFF	; 255
     8b0:	d3 06       	cpc	r13, r19
     8b2:	74 f0       	brlt	.+28     	; 0x8d0 <vfprintf+0x206>
     8b4:	89 2d       	mov	r24, r9
     8b6:	80 68       	ori	r24, 0x80	; 128
     8b8:	98 2e       	mov	r9, r24
     8ba:	0a c0       	rjmp	.+20     	; 0x8d0 <vfprintf+0x206>
     8bc:	e2 e0       	ldi	r30, 0x02	; 2
     8be:	f0 e0       	ldi	r31, 0x00	; 0
     8c0:	ec 0f       	add	r30, r28
     8c2:	fd 1f       	adc	r31, r29
     8c4:	e1 0f       	add	r30, r17
     8c6:	f1 1d       	adc	r31, r1
     8c8:	80 81       	ld	r24, Z
     8ca:	80 33       	cpi	r24, 0x30	; 48
     8cc:	19 f4       	brne	.+6      	; 0x8d4 <vfprintf+0x20a>
     8ce:	11 50       	subi	r17, 0x01	; 1
     8d0:	11 11       	cpse	r17, r1
     8d2:	f4 cf       	rjmp	.-24     	; 0x8bc <vfprintf+0x1f2>
     8d4:	97 fe       	sbrs	r9, 7
     8d6:	0e c0       	rjmp	.+28     	; 0x8f4 <vfprintf+0x22a>
     8d8:	44 24       	eor	r4, r4
     8da:	43 94       	inc	r4
     8dc:	41 0e       	add	r4, r17
     8de:	81 2f       	mov	r24, r17
     8e0:	90 e0       	ldi	r25, 0x00	; 0
     8e2:	c8 16       	cp	r12, r24
     8e4:	d9 06       	cpc	r13, r25
     8e6:	2c f4       	brge	.+10     	; 0x8f2 <vfprintf+0x228>
     8e8:	1c 19       	sub	r17, r12
     8ea:	04 c0       	rjmp	.+8      	; 0x8f4 <vfprintf+0x22a>
     8ec:	44 24       	eor	r4, r4
     8ee:	43 94       	inc	r4
     8f0:	01 c0       	rjmp	.+2      	; 0x8f4 <vfprintf+0x22a>
     8f2:	10 e0       	ldi	r17, 0x00	; 0
     8f4:	97 fe       	sbrs	r9, 7
     8f6:	06 c0       	rjmp	.+12     	; 0x904 <__stack+0x5>
     8f8:	1c 14       	cp	r1, r12
     8fa:	1d 04       	cpc	r1, r13
     8fc:	34 f4       	brge	.+12     	; 0x90a <__stack+0xb>
     8fe:	c6 01       	movw	r24, r12
     900:	01 96       	adiw	r24, 0x01	; 1
     902:	05 c0       	rjmp	.+10     	; 0x90e <__stack+0xf>
     904:	85 e0       	ldi	r24, 0x05	; 5
     906:	90 e0       	ldi	r25, 0x00	; 0
     908:	02 c0       	rjmp	.+4      	; 0x90e <__stack+0xf>
     90a:	81 e0       	ldi	r24, 0x01	; 1
     90c:	90 e0       	ldi	r25, 0x00	; 0
     90e:	01 11       	cpse	r16, r1
     910:	01 96       	adiw	r24, 0x01	; 1
     912:	11 23       	and	r17, r17
     914:	31 f0       	breq	.+12     	; 0x922 <__stack+0x23>
     916:	21 2f       	mov	r18, r17
     918:	30 e0       	ldi	r19, 0x00	; 0
     91a:	2f 5f       	subi	r18, 0xFF	; 255
     91c:	3f 4f       	sbci	r19, 0xFF	; 255
     91e:	82 0f       	add	r24, r18
     920:	93 1f       	adc	r25, r19
     922:	25 2d       	mov	r18, r5
     924:	30 e0       	ldi	r19, 0x00	; 0
     926:	82 17       	cp	r24, r18
     928:	93 07       	cpc	r25, r19
     92a:	14 f4       	brge	.+4      	; 0x930 <__stack+0x31>
     92c:	58 1a       	sub	r5, r24
     92e:	01 c0       	rjmp	.+2      	; 0x932 <__stack+0x33>
     930:	51 2c       	mov	r5, r1
     932:	89 2d       	mov	r24, r9
     934:	89 70       	andi	r24, 0x09	; 9
     936:	49 f4       	brne	.+18     	; 0x94a <__stack+0x4b>
     938:	55 20       	and	r5, r5
     93a:	39 f0       	breq	.+14     	; 0x94a <__stack+0x4b>
     93c:	b7 01       	movw	r22, r14
     93e:	80 e2       	ldi	r24, 0x20	; 32
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	0e 94 07 08 	call	0x100e	; 0x100e <fputc>
     946:	5a 94       	dec	r5
     948:	f7 cf       	rjmp	.-18     	; 0x938 <__stack+0x39>
     94a:	00 23       	and	r16, r16
     94c:	29 f0       	breq	.+10     	; 0x958 <__stack+0x59>
     94e:	b7 01       	movw	r22, r14
     950:	80 2f       	mov	r24, r16
     952:	90 e0       	ldi	r25, 0x00	; 0
     954:	0e 94 07 08 	call	0x100e	; 0x100e <fputc>
     958:	93 fc       	sbrc	r9, 3
     95a:	09 c0       	rjmp	.+18     	; 0x96e <__stack+0x6f>
     95c:	55 20       	and	r5, r5
     95e:	39 f0       	breq	.+14     	; 0x96e <__stack+0x6f>
     960:	b7 01       	movw	r22, r14
     962:	80 e3       	ldi	r24, 0x30	; 48
     964:	90 e0       	ldi	r25, 0x00	; 0
     966:	0e 94 07 08 	call	0x100e	; 0x100e <fputc>
     96a:	5a 94       	dec	r5
     96c:	f7 cf       	rjmp	.-18     	; 0x95c <__stack+0x5d>
     96e:	97 fe       	sbrs	r9, 7
     970:	4c c0       	rjmp	.+152    	; 0xa0a <__stack+0x10b>
     972:	46 01       	movw	r8, r12
     974:	d7 fe       	sbrs	r13, 7
     976:	02 c0       	rjmp	.+4      	; 0x97c <__stack+0x7d>
     978:	81 2c       	mov	r8, r1
     97a:	91 2c       	mov	r9, r1
     97c:	c6 01       	movw	r24, r12
     97e:	88 19       	sub	r24, r8
     980:	99 09       	sbc	r25, r9
     982:	f3 01       	movw	r30, r6
     984:	e8 0f       	add	r30, r24
     986:	f9 1f       	adc	r31, r25
     988:	fe 87       	std	Y+14, r31	; 0x0e
     98a:	ed 87       	std	Y+13, r30	; 0x0d
     98c:	96 01       	movw	r18, r12
     98e:	24 19       	sub	r18, r4
     990:	31 09       	sbc	r19, r1
     992:	38 8b       	std	Y+16, r19	; 0x10
     994:	2f 87       	std	Y+15, r18	; 0x0f
     996:	01 2f       	mov	r16, r17
     998:	10 e0       	ldi	r17, 0x00	; 0
     99a:	11 95       	neg	r17
     99c:	01 95       	neg	r16
     99e:	11 09       	sbc	r17, r1
     9a0:	3f ef       	ldi	r19, 0xFF	; 255
     9a2:	83 16       	cp	r8, r19
     9a4:	93 06       	cpc	r9, r19
     9a6:	29 f4       	brne	.+10     	; 0x9b2 <__stack+0xb3>
     9a8:	b7 01       	movw	r22, r14
     9aa:	8e e2       	ldi	r24, 0x2E	; 46
     9ac:	90 e0       	ldi	r25, 0x00	; 0
     9ae:	0e 94 07 08 	call	0x100e	; 0x100e <fputc>
     9b2:	c8 14       	cp	r12, r8
     9b4:	d9 04       	cpc	r13, r9
     9b6:	4c f0       	brlt	.+18     	; 0x9ca <__stack+0xcb>
     9b8:	8f 85       	ldd	r24, Y+15	; 0x0f
     9ba:	98 89       	ldd	r25, Y+16	; 0x10
     9bc:	88 15       	cp	r24, r8
     9be:	99 05       	cpc	r25, r9
     9c0:	24 f4       	brge	.+8      	; 0x9ca <__stack+0xcb>
     9c2:	ed 85       	ldd	r30, Y+13	; 0x0d
     9c4:	fe 85       	ldd	r31, Y+14	; 0x0e
     9c6:	81 81       	ldd	r24, Z+1	; 0x01
     9c8:	01 c0       	rjmp	.+2      	; 0x9cc <__stack+0xcd>
     9ca:	80 e3       	ldi	r24, 0x30	; 48
     9cc:	f1 e0       	ldi	r31, 0x01	; 1
     9ce:	8f 1a       	sub	r8, r31
     9d0:	91 08       	sbc	r9, r1
     9d2:	2d 85       	ldd	r18, Y+13	; 0x0d
     9d4:	3e 85       	ldd	r19, Y+14	; 0x0e
     9d6:	2f 5f       	subi	r18, 0xFF	; 255
     9d8:	3f 4f       	sbci	r19, 0xFF	; 255
     9da:	3e 87       	std	Y+14, r19	; 0x0e
     9dc:	2d 87       	std	Y+13, r18	; 0x0d
     9de:	80 16       	cp	r8, r16
     9e0:	91 06       	cpc	r9, r17
     9e2:	2c f0       	brlt	.+10     	; 0x9ee <__stack+0xef>
     9e4:	b7 01       	movw	r22, r14
     9e6:	90 e0       	ldi	r25, 0x00	; 0
     9e8:	0e 94 07 08 	call	0x100e	; 0x100e <fputc>
     9ec:	d9 cf       	rjmp	.-78     	; 0x9a0 <__stack+0xa1>
     9ee:	c8 14       	cp	r12, r8
     9f0:	d9 04       	cpc	r13, r9
     9f2:	41 f4       	brne	.+16     	; 0xa04 <__stack+0x105>
     9f4:	9a 81       	ldd	r25, Y+2	; 0x02
     9f6:	96 33       	cpi	r25, 0x36	; 54
     9f8:	20 f4       	brcc	.+8      	; 0xa02 <__stack+0x103>
     9fa:	95 33       	cpi	r25, 0x35	; 53
     9fc:	19 f4       	brne	.+6      	; 0xa04 <__stack+0x105>
     9fe:	3c 85       	ldd	r19, Y+12	; 0x0c
     a00:	34 ff       	sbrs	r19, 4
     a02:	81 e3       	ldi	r24, 0x31	; 49
     a04:	b7 01       	movw	r22, r14
     a06:	90 e0       	ldi	r25, 0x00	; 0
     a08:	4e c0       	rjmp	.+156    	; 0xaa6 <__stack+0x1a7>
     a0a:	8a 81       	ldd	r24, Y+2	; 0x02
     a0c:	81 33       	cpi	r24, 0x31	; 49
     a0e:	19 f0       	breq	.+6      	; 0xa16 <__stack+0x117>
     a10:	9c 85       	ldd	r25, Y+12	; 0x0c
     a12:	9f 7e       	andi	r25, 0xEF	; 239
     a14:	9c 87       	std	Y+12, r25	; 0x0c
     a16:	b7 01       	movw	r22, r14
     a18:	90 e0       	ldi	r25, 0x00	; 0
     a1a:	0e 94 07 08 	call	0x100e	; 0x100e <fputc>
     a1e:	11 11       	cpse	r17, r1
     a20:	05 c0       	rjmp	.+10     	; 0xa2c <__stack+0x12d>
     a22:	94 fc       	sbrc	r9, 4
     a24:	18 c0       	rjmp	.+48     	; 0xa56 <__stack+0x157>
     a26:	85 e6       	ldi	r24, 0x65	; 101
     a28:	90 e0       	ldi	r25, 0x00	; 0
     a2a:	17 c0       	rjmp	.+46     	; 0xa5a <__stack+0x15b>
     a2c:	b7 01       	movw	r22, r14
     a2e:	8e e2       	ldi	r24, 0x2E	; 46
     a30:	90 e0       	ldi	r25, 0x00	; 0
     a32:	0e 94 07 08 	call	0x100e	; 0x100e <fputc>
     a36:	1e 5f       	subi	r17, 0xFE	; 254
     a38:	82 e0       	ldi	r24, 0x02	; 2
     a3a:	01 e0       	ldi	r16, 0x01	; 1
     a3c:	08 0f       	add	r16, r24
     a3e:	f3 01       	movw	r30, r6
     a40:	e8 0f       	add	r30, r24
     a42:	f1 1d       	adc	r31, r1
     a44:	80 81       	ld	r24, Z
     a46:	b7 01       	movw	r22, r14
     a48:	90 e0       	ldi	r25, 0x00	; 0
     a4a:	0e 94 07 08 	call	0x100e	; 0x100e <fputc>
     a4e:	80 2f       	mov	r24, r16
     a50:	01 13       	cpse	r16, r17
     a52:	f3 cf       	rjmp	.-26     	; 0xa3a <__stack+0x13b>
     a54:	e6 cf       	rjmp	.-52     	; 0xa22 <__stack+0x123>
     a56:	85 e4       	ldi	r24, 0x45	; 69
     a58:	90 e0       	ldi	r25, 0x00	; 0
     a5a:	b7 01       	movw	r22, r14
     a5c:	0e 94 07 08 	call	0x100e	; 0x100e <fputc>
     a60:	d7 fc       	sbrc	r13, 7
     a62:	06 c0       	rjmp	.+12     	; 0xa70 <__stack+0x171>
     a64:	c1 14       	cp	r12, r1
     a66:	d1 04       	cpc	r13, r1
     a68:	41 f4       	brne	.+16     	; 0xa7a <__stack+0x17b>
     a6a:	ec 85       	ldd	r30, Y+12	; 0x0c
     a6c:	e4 ff       	sbrs	r30, 4
     a6e:	05 c0       	rjmp	.+10     	; 0xa7a <__stack+0x17b>
     a70:	d1 94       	neg	r13
     a72:	c1 94       	neg	r12
     a74:	d1 08       	sbc	r13, r1
     a76:	8d e2       	ldi	r24, 0x2D	; 45
     a78:	01 c0       	rjmp	.+2      	; 0xa7c <__stack+0x17d>
     a7a:	8b e2       	ldi	r24, 0x2B	; 43
     a7c:	b7 01       	movw	r22, r14
     a7e:	90 e0       	ldi	r25, 0x00	; 0
     a80:	0e 94 07 08 	call	0x100e	; 0x100e <fputc>
     a84:	80 e3       	ldi	r24, 0x30	; 48
     a86:	2a e0       	ldi	r18, 0x0A	; 10
     a88:	c2 16       	cp	r12, r18
     a8a:	d1 04       	cpc	r13, r1
     a8c:	2c f0       	brlt	.+10     	; 0xa98 <__stack+0x199>
     a8e:	8f 5f       	subi	r24, 0xFF	; 255
     a90:	fa e0       	ldi	r31, 0x0A	; 10
     a92:	cf 1a       	sub	r12, r31
     a94:	d1 08       	sbc	r13, r1
     a96:	f7 cf       	rjmp	.-18     	; 0xa86 <__stack+0x187>
     a98:	b7 01       	movw	r22, r14
     a9a:	90 e0       	ldi	r25, 0x00	; 0
     a9c:	0e 94 07 08 	call	0x100e	; 0x100e <fputc>
     aa0:	b7 01       	movw	r22, r14
     aa2:	c6 01       	movw	r24, r12
     aa4:	c0 96       	adiw	r24, 0x30	; 48
     aa6:	0e 94 07 08 	call	0x100e	; 0x100e <fputc>
     aaa:	54 c1       	rjmp	.+680    	; 0xd54 <__stack+0x455>
     aac:	83 36       	cpi	r24, 0x63	; 99
     aae:	31 f0       	breq	.+12     	; 0xabc <__stack+0x1bd>
     ab0:	83 37       	cpi	r24, 0x73	; 115
     ab2:	79 f0       	breq	.+30     	; 0xad2 <__stack+0x1d3>
     ab4:	83 35       	cpi	r24, 0x53	; 83
     ab6:	09 f0       	breq	.+2      	; 0xaba <__stack+0x1bb>
     ab8:	56 c0       	rjmp	.+172    	; 0xb66 <__stack+0x267>
     aba:	20 c0       	rjmp	.+64     	; 0xafc <__stack+0x1fd>
     abc:	56 01       	movw	r10, r12
     abe:	32 e0       	ldi	r19, 0x02	; 2
     ac0:	a3 0e       	add	r10, r19
     ac2:	b1 1c       	adc	r11, r1
     ac4:	f6 01       	movw	r30, r12
     ac6:	80 81       	ld	r24, Z
     ac8:	89 83       	std	Y+1, r24	; 0x01
     aca:	01 e0       	ldi	r16, 0x01	; 1
     acc:	10 e0       	ldi	r17, 0x00	; 0
     ace:	63 01       	movw	r12, r6
     ad0:	12 c0       	rjmp	.+36     	; 0xaf6 <__stack+0x1f7>
     ad2:	56 01       	movw	r10, r12
     ad4:	f2 e0       	ldi	r31, 0x02	; 2
     ad6:	af 0e       	add	r10, r31
     ad8:	b1 1c       	adc	r11, r1
     ada:	f6 01       	movw	r30, r12
     adc:	c0 80       	ld	r12, Z
     ade:	d1 80       	ldd	r13, Z+1	; 0x01
     ae0:	96 fe       	sbrs	r9, 6
     ae2:	03 c0       	rjmp	.+6      	; 0xaea <__stack+0x1eb>
     ae4:	61 2f       	mov	r22, r17
     ae6:	70 e0       	ldi	r23, 0x00	; 0
     ae8:	02 c0       	rjmp	.+4      	; 0xaee <__stack+0x1ef>
     aea:	6f ef       	ldi	r22, 0xFF	; 255
     aec:	7f ef       	ldi	r23, 0xFF	; 255
     aee:	c6 01       	movw	r24, r12
     af0:	0e 94 fc 07 	call	0xff8	; 0xff8 <strnlen>
     af4:	8c 01       	movw	r16, r24
     af6:	f9 2d       	mov	r31, r9
     af8:	ff 77       	andi	r31, 0x7F	; 127
     afa:	14 c0       	rjmp	.+40     	; 0xb24 <__stack+0x225>
     afc:	56 01       	movw	r10, r12
     afe:	22 e0       	ldi	r18, 0x02	; 2
     b00:	a2 0e       	add	r10, r18
     b02:	b1 1c       	adc	r11, r1
     b04:	f6 01       	movw	r30, r12
     b06:	c0 80       	ld	r12, Z
     b08:	d1 80       	ldd	r13, Z+1	; 0x01
     b0a:	96 fe       	sbrs	r9, 6
     b0c:	03 c0       	rjmp	.+6      	; 0xb14 <__stack+0x215>
     b0e:	61 2f       	mov	r22, r17
     b10:	70 e0       	ldi	r23, 0x00	; 0
     b12:	02 c0       	rjmp	.+4      	; 0xb18 <__stack+0x219>
     b14:	6f ef       	ldi	r22, 0xFF	; 255
     b16:	7f ef       	ldi	r23, 0xFF	; 255
     b18:	c6 01       	movw	r24, r12
     b1a:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <strnlen_P>
     b1e:	8c 01       	movw	r16, r24
     b20:	f9 2d       	mov	r31, r9
     b22:	f0 68       	ori	r31, 0x80	; 128
     b24:	9f 2e       	mov	r9, r31
     b26:	f3 fd       	sbrc	r31, 3
     b28:	1a c0       	rjmp	.+52     	; 0xb5e <__stack+0x25f>
     b2a:	85 2d       	mov	r24, r5
     b2c:	90 e0       	ldi	r25, 0x00	; 0
     b2e:	08 17       	cp	r16, r24
     b30:	19 07       	cpc	r17, r25
     b32:	a8 f4       	brcc	.+42     	; 0xb5e <__stack+0x25f>
     b34:	b7 01       	movw	r22, r14
     b36:	80 e2       	ldi	r24, 0x20	; 32
     b38:	90 e0       	ldi	r25, 0x00	; 0
     b3a:	0e 94 07 08 	call	0x100e	; 0x100e <fputc>
     b3e:	5a 94       	dec	r5
     b40:	f4 cf       	rjmp	.-24     	; 0xb2a <__stack+0x22b>
     b42:	f6 01       	movw	r30, r12
     b44:	97 fc       	sbrc	r9, 7
     b46:	85 91       	lpm	r24, Z+
     b48:	97 fe       	sbrs	r9, 7
     b4a:	81 91       	ld	r24, Z+
     b4c:	6f 01       	movw	r12, r30
     b4e:	b7 01       	movw	r22, r14
     b50:	90 e0       	ldi	r25, 0x00	; 0
     b52:	0e 94 07 08 	call	0x100e	; 0x100e <fputc>
     b56:	51 10       	cpse	r5, r1
     b58:	5a 94       	dec	r5
     b5a:	01 50       	subi	r16, 0x01	; 1
     b5c:	11 09       	sbc	r17, r1
     b5e:	01 15       	cp	r16, r1
     b60:	11 05       	cpc	r17, r1
     b62:	79 f7       	brne	.-34     	; 0xb42 <__stack+0x243>
     b64:	f7 c0       	rjmp	.+494    	; 0xd54 <__stack+0x455>
     b66:	84 36       	cpi	r24, 0x64	; 100
     b68:	11 f0       	breq	.+4      	; 0xb6e <__stack+0x26f>
     b6a:	89 36       	cpi	r24, 0x69	; 105
     b6c:	61 f5       	brne	.+88     	; 0xbc6 <__stack+0x2c7>
     b6e:	56 01       	movw	r10, r12
     b70:	97 fe       	sbrs	r9, 7
     b72:	09 c0       	rjmp	.+18     	; 0xb86 <__stack+0x287>
     b74:	24 e0       	ldi	r18, 0x04	; 4
     b76:	a2 0e       	add	r10, r18
     b78:	b1 1c       	adc	r11, r1
     b7a:	f6 01       	movw	r30, r12
     b7c:	60 81       	ld	r22, Z
     b7e:	71 81       	ldd	r23, Z+1	; 0x01
     b80:	82 81       	ldd	r24, Z+2	; 0x02
     b82:	93 81       	ldd	r25, Z+3	; 0x03
     b84:	0a c0       	rjmp	.+20     	; 0xb9a <__stack+0x29b>
     b86:	f2 e0       	ldi	r31, 0x02	; 2
     b88:	af 0e       	add	r10, r31
     b8a:	b1 1c       	adc	r11, r1
     b8c:	f6 01       	movw	r30, r12
     b8e:	60 81       	ld	r22, Z
     b90:	71 81       	ldd	r23, Z+1	; 0x01
     b92:	07 2e       	mov	r0, r23
     b94:	00 0c       	add	r0, r0
     b96:	88 0b       	sbc	r24, r24
     b98:	99 0b       	sbc	r25, r25
     b9a:	f9 2d       	mov	r31, r9
     b9c:	ff 76       	andi	r31, 0x6F	; 111
     b9e:	9f 2e       	mov	r9, r31
     ba0:	97 ff       	sbrs	r25, 7
     ba2:	09 c0       	rjmp	.+18     	; 0xbb6 <__stack+0x2b7>
     ba4:	90 95       	com	r25
     ba6:	80 95       	com	r24
     ba8:	70 95       	com	r23
     baa:	61 95       	neg	r22
     bac:	7f 4f       	sbci	r23, 0xFF	; 255
     bae:	8f 4f       	sbci	r24, 0xFF	; 255
     bb0:	9f 4f       	sbci	r25, 0xFF	; 255
     bb2:	f0 68       	ori	r31, 0x80	; 128
     bb4:	9f 2e       	mov	r9, r31
     bb6:	2a e0       	ldi	r18, 0x0A	; 10
     bb8:	30 e0       	ldi	r19, 0x00	; 0
     bba:	a3 01       	movw	r20, r6
     bbc:	0e 94 59 08 	call	0x10b2	; 0x10b2 <__ultoa_invert>
     bc0:	c8 2e       	mov	r12, r24
     bc2:	c6 18       	sub	r12, r6
     bc4:	3f c0       	rjmp	.+126    	; 0xc44 <__stack+0x345>
     bc6:	09 2d       	mov	r16, r9
     bc8:	85 37       	cpi	r24, 0x75	; 117
     bca:	21 f4       	brne	.+8      	; 0xbd4 <__stack+0x2d5>
     bcc:	0f 7e       	andi	r16, 0xEF	; 239
     bce:	2a e0       	ldi	r18, 0x0A	; 10
     bd0:	30 e0       	ldi	r19, 0x00	; 0
     bd2:	1d c0       	rjmp	.+58     	; 0xc0e <__stack+0x30f>
     bd4:	09 7f       	andi	r16, 0xF9	; 249
     bd6:	8f 36       	cpi	r24, 0x6F	; 111
     bd8:	91 f0       	breq	.+36     	; 0xbfe <__stack+0x2ff>
     bda:	18 f4       	brcc	.+6      	; 0xbe2 <__stack+0x2e3>
     bdc:	88 35       	cpi	r24, 0x58	; 88
     bde:	59 f0       	breq	.+22     	; 0xbf6 <__stack+0x2f7>
     be0:	c3 c0       	rjmp	.+390    	; 0xd68 <__stack+0x469>
     be2:	80 37       	cpi	r24, 0x70	; 112
     be4:	19 f0       	breq	.+6      	; 0xbec <__stack+0x2ed>
     be6:	88 37       	cpi	r24, 0x78	; 120
     be8:	11 f0       	breq	.+4      	; 0xbee <__stack+0x2ef>
     bea:	be c0       	rjmp	.+380    	; 0xd68 <__stack+0x469>
     bec:	00 61       	ori	r16, 0x10	; 16
     bee:	04 ff       	sbrs	r16, 4
     bf0:	09 c0       	rjmp	.+18     	; 0xc04 <__stack+0x305>
     bf2:	04 60       	ori	r16, 0x04	; 4
     bf4:	07 c0       	rjmp	.+14     	; 0xc04 <__stack+0x305>
     bf6:	94 fe       	sbrs	r9, 4
     bf8:	08 c0       	rjmp	.+16     	; 0xc0a <__stack+0x30b>
     bfa:	06 60       	ori	r16, 0x06	; 6
     bfc:	06 c0       	rjmp	.+12     	; 0xc0a <__stack+0x30b>
     bfe:	28 e0       	ldi	r18, 0x08	; 8
     c00:	30 e0       	ldi	r19, 0x00	; 0
     c02:	05 c0       	rjmp	.+10     	; 0xc0e <__stack+0x30f>
     c04:	20 e1       	ldi	r18, 0x10	; 16
     c06:	30 e0       	ldi	r19, 0x00	; 0
     c08:	02 c0       	rjmp	.+4      	; 0xc0e <__stack+0x30f>
     c0a:	20 e1       	ldi	r18, 0x10	; 16
     c0c:	32 e0       	ldi	r19, 0x02	; 2
     c0e:	56 01       	movw	r10, r12
     c10:	07 ff       	sbrs	r16, 7
     c12:	09 c0       	rjmp	.+18     	; 0xc26 <__stack+0x327>
     c14:	84 e0       	ldi	r24, 0x04	; 4
     c16:	a8 0e       	add	r10, r24
     c18:	b1 1c       	adc	r11, r1
     c1a:	f6 01       	movw	r30, r12
     c1c:	60 81       	ld	r22, Z
     c1e:	71 81       	ldd	r23, Z+1	; 0x01
     c20:	82 81       	ldd	r24, Z+2	; 0x02
     c22:	93 81       	ldd	r25, Z+3	; 0x03
     c24:	08 c0       	rjmp	.+16     	; 0xc36 <__stack+0x337>
     c26:	f2 e0       	ldi	r31, 0x02	; 2
     c28:	af 0e       	add	r10, r31
     c2a:	b1 1c       	adc	r11, r1
     c2c:	f6 01       	movw	r30, r12
     c2e:	60 81       	ld	r22, Z
     c30:	71 81       	ldd	r23, Z+1	; 0x01
     c32:	80 e0       	ldi	r24, 0x00	; 0
     c34:	90 e0       	ldi	r25, 0x00	; 0
     c36:	a3 01       	movw	r20, r6
     c38:	0e 94 59 08 	call	0x10b2	; 0x10b2 <__ultoa_invert>
     c3c:	c8 2e       	mov	r12, r24
     c3e:	c6 18       	sub	r12, r6
     c40:	0f 77       	andi	r16, 0x7F	; 127
     c42:	90 2e       	mov	r9, r16
     c44:	96 fe       	sbrs	r9, 6
     c46:	0b c0       	rjmp	.+22     	; 0xc5e <__stack+0x35f>
     c48:	09 2d       	mov	r16, r9
     c4a:	0e 7f       	andi	r16, 0xFE	; 254
     c4c:	c1 16       	cp	r12, r17
     c4e:	50 f4       	brcc	.+20     	; 0xc64 <__stack+0x365>
     c50:	94 fe       	sbrs	r9, 4
     c52:	0a c0       	rjmp	.+20     	; 0xc68 <__stack+0x369>
     c54:	92 fc       	sbrc	r9, 2
     c56:	08 c0       	rjmp	.+16     	; 0xc68 <__stack+0x369>
     c58:	09 2d       	mov	r16, r9
     c5a:	0e 7e       	andi	r16, 0xEE	; 238
     c5c:	05 c0       	rjmp	.+10     	; 0xc68 <__stack+0x369>
     c5e:	dc 2c       	mov	r13, r12
     c60:	09 2d       	mov	r16, r9
     c62:	03 c0       	rjmp	.+6      	; 0xc6a <__stack+0x36b>
     c64:	dc 2c       	mov	r13, r12
     c66:	01 c0       	rjmp	.+2      	; 0xc6a <__stack+0x36b>
     c68:	d1 2e       	mov	r13, r17
     c6a:	04 ff       	sbrs	r16, 4
     c6c:	0d c0       	rjmp	.+26     	; 0xc88 <__stack+0x389>
     c6e:	fe 01       	movw	r30, r28
     c70:	ec 0d       	add	r30, r12
     c72:	f1 1d       	adc	r31, r1
     c74:	80 81       	ld	r24, Z
     c76:	80 33       	cpi	r24, 0x30	; 48
     c78:	11 f4       	brne	.+4      	; 0xc7e <__stack+0x37f>
     c7a:	09 7e       	andi	r16, 0xE9	; 233
     c7c:	09 c0       	rjmp	.+18     	; 0xc90 <__stack+0x391>
     c7e:	02 ff       	sbrs	r16, 2
     c80:	06 c0       	rjmp	.+12     	; 0xc8e <__stack+0x38f>
     c82:	d3 94       	inc	r13
     c84:	d3 94       	inc	r13
     c86:	04 c0       	rjmp	.+8      	; 0xc90 <__stack+0x391>
     c88:	80 2f       	mov	r24, r16
     c8a:	86 78       	andi	r24, 0x86	; 134
     c8c:	09 f0       	breq	.+2      	; 0xc90 <__stack+0x391>
     c8e:	d3 94       	inc	r13
     c90:	03 fd       	sbrc	r16, 3
     c92:	11 c0       	rjmp	.+34     	; 0xcb6 <__stack+0x3b7>
     c94:	00 ff       	sbrs	r16, 0
     c96:	06 c0       	rjmp	.+12     	; 0xca4 <__stack+0x3a5>
     c98:	1c 2d       	mov	r17, r12
     c9a:	d5 14       	cp	r13, r5
     c9c:	80 f4       	brcc	.+32     	; 0xcbe <__stack+0x3bf>
     c9e:	15 0d       	add	r17, r5
     ca0:	1d 19       	sub	r17, r13
     ca2:	0d c0       	rjmp	.+26     	; 0xcbe <__stack+0x3bf>
     ca4:	d5 14       	cp	r13, r5
     ca6:	58 f4       	brcc	.+22     	; 0xcbe <__stack+0x3bf>
     ca8:	b7 01       	movw	r22, r14
     caa:	80 e2       	ldi	r24, 0x20	; 32
     cac:	90 e0       	ldi	r25, 0x00	; 0
     cae:	0e 94 07 08 	call	0x100e	; 0x100e <fputc>
     cb2:	d3 94       	inc	r13
     cb4:	f7 cf       	rjmp	.-18     	; 0xca4 <__stack+0x3a5>
     cb6:	d5 14       	cp	r13, r5
     cb8:	10 f4       	brcc	.+4      	; 0xcbe <__stack+0x3bf>
     cba:	5d 18       	sub	r5, r13
     cbc:	01 c0       	rjmp	.+2      	; 0xcc0 <__stack+0x3c1>
     cbe:	51 2c       	mov	r5, r1
     cc0:	04 ff       	sbrs	r16, 4
     cc2:	10 c0       	rjmp	.+32     	; 0xce4 <__stack+0x3e5>
     cc4:	b7 01       	movw	r22, r14
     cc6:	80 e3       	ldi	r24, 0x30	; 48
     cc8:	90 e0       	ldi	r25, 0x00	; 0
     cca:	0e 94 07 08 	call	0x100e	; 0x100e <fputc>
     cce:	02 ff       	sbrs	r16, 2
     cd0:	17 c0       	rjmp	.+46     	; 0xd00 <__stack+0x401>
     cd2:	01 fd       	sbrc	r16, 1
     cd4:	03 c0       	rjmp	.+6      	; 0xcdc <__stack+0x3dd>
     cd6:	88 e7       	ldi	r24, 0x78	; 120
     cd8:	90 e0       	ldi	r25, 0x00	; 0
     cda:	02 c0       	rjmp	.+4      	; 0xce0 <__stack+0x3e1>
     cdc:	88 e5       	ldi	r24, 0x58	; 88
     cde:	90 e0       	ldi	r25, 0x00	; 0
     ce0:	b7 01       	movw	r22, r14
     ce2:	0c c0       	rjmp	.+24     	; 0xcfc <__stack+0x3fd>
     ce4:	80 2f       	mov	r24, r16
     ce6:	86 78       	andi	r24, 0x86	; 134
     ce8:	59 f0       	breq	.+22     	; 0xd00 <__stack+0x401>
     cea:	01 ff       	sbrs	r16, 1
     cec:	02 c0       	rjmp	.+4      	; 0xcf2 <__stack+0x3f3>
     cee:	8b e2       	ldi	r24, 0x2B	; 43
     cf0:	01 c0       	rjmp	.+2      	; 0xcf4 <__stack+0x3f5>
     cf2:	80 e2       	ldi	r24, 0x20	; 32
     cf4:	07 fd       	sbrc	r16, 7
     cf6:	8d e2       	ldi	r24, 0x2D	; 45
     cf8:	b7 01       	movw	r22, r14
     cfa:	90 e0       	ldi	r25, 0x00	; 0
     cfc:	0e 94 07 08 	call	0x100e	; 0x100e <fputc>
     d00:	c1 16       	cp	r12, r17
     d02:	38 f4       	brcc	.+14     	; 0xd12 <__stack+0x413>
     d04:	b7 01       	movw	r22, r14
     d06:	80 e3       	ldi	r24, 0x30	; 48
     d08:	90 e0       	ldi	r25, 0x00	; 0
     d0a:	0e 94 07 08 	call	0x100e	; 0x100e <fputc>
     d0e:	11 50       	subi	r17, 0x01	; 1
     d10:	f7 cf       	rjmp	.-18     	; 0xd00 <__stack+0x401>
     d12:	ca 94       	dec	r12
     d14:	f3 01       	movw	r30, r6
     d16:	ec 0d       	add	r30, r12
     d18:	f1 1d       	adc	r31, r1
     d1a:	80 81       	ld	r24, Z
     d1c:	b7 01       	movw	r22, r14
     d1e:	90 e0       	ldi	r25, 0x00	; 0
     d20:	0e 94 07 08 	call	0x100e	; 0x100e <fputc>
     d24:	c1 10       	cpse	r12, r1
     d26:	f5 cf       	rjmp	.-22     	; 0xd12 <__stack+0x413>
     d28:	15 c0       	rjmp	.+42     	; 0xd54 <__stack+0x455>
     d2a:	f4 e0       	ldi	r31, 0x04	; 4
     d2c:	f5 15       	cp	r31, r5
     d2e:	60 f5       	brcc	.+88     	; 0xd88 <__stack+0x489>
     d30:	84 e0       	ldi	r24, 0x04	; 4
     d32:	58 1a       	sub	r5, r24
     d34:	93 fe       	sbrs	r9, 3
     d36:	1f c0       	rjmp	.+62     	; 0xd76 <__stack+0x477>
     d38:	01 11       	cpse	r16, r1
     d3a:	27 c0       	rjmp	.+78     	; 0xd8a <__stack+0x48b>
     d3c:	2c 85       	ldd	r18, Y+12	; 0x0c
     d3e:	23 ff       	sbrs	r18, 3
     d40:	2a c0       	rjmp	.+84     	; 0xd96 <__stack+0x497>
     d42:	08 e6       	ldi	r16, 0x68	; 104
     d44:	10 e0       	ldi	r17, 0x00	; 0
     d46:	39 2d       	mov	r19, r9
     d48:	30 71       	andi	r19, 0x10	; 16
     d4a:	93 2e       	mov	r9, r19
     d4c:	f8 01       	movw	r30, r16
     d4e:	84 91       	lpm	r24, Z
     d50:	81 11       	cpse	r24, r1
     d52:	24 c0       	rjmp	.+72     	; 0xd9c <__stack+0x49d>
     d54:	55 20       	and	r5, r5
     d56:	09 f4       	brne	.+2      	; 0xd5a <__stack+0x45b>
     d58:	e4 cc       	rjmp	.-1592   	; 0x722 <vfprintf+0x58>
     d5a:	b7 01       	movw	r22, r14
     d5c:	80 e2       	ldi	r24, 0x20	; 32
     d5e:	90 e0       	ldi	r25, 0x00	; 0
     d60:	0e 94 07 08 	call	0x100e	; 0x100e <fputc>
     d64:	5a 94       	dec	r5
     d66:	f6 cf       	rjmp	.-20     	; 0xd54 <__stack+0x455>
     d68:	f7 01       	movw	r30, r14
     d6a:	86 81       	ldd	r24, Z+6	; 0x06
     d6c:	97 81       	ldd	r25, Z+7	; 0x07
     d6e:	26 c0       	rjmp	.+76     	; 0xdbc <__stack+0x4bd>
     d70:	8f ef       	ldi	r24, 0xFF	; 255
     d72:	9f ef       	ldi	r25, 0xFF	; 255
     d74:	23 c0       	rjmp	.+70     	; 0xdbc <__stack+0x4bd>
     d76:	b7 01       	movw	r22, r14
     d78:	80 e2       	ldi	r24, 0x20	; 32
     d7a:	90 e0       	ldi	r25, 0x00	; 0
     d7c:	0e 94 07 08 	call	0x100e	; 0x100e <fputc>
     d80:	5a 94       	dec	r5
     d82:	51 10       	cpse	r5, r1
     d84:	f8 cf       	rjmp	.-16     	; 0xd76 <__stack+0x477>
     d86:	d8 cf       	rjmp	.-80     	; 0xd38 <__stack+0x439>
     d88:	51 2c       	mov	r5, r1
     d8a:	b7 01       	movw	r22, r14
     d8c:	80 2f       	mov	r24, r16
     d8e:	90 e0       	ldi	r25, 0x00	; 0
     d90:	0e 94 07 08 	call	0x100e	; 0x100e <fputc>
     d94:	d3 cf       	rjmp	.-90     	; 0xd3c <__stack+0x43d>
     d96:	0c e6       	ldi	r16, 0x6C	; 108
     d98:	10 e0       	ldi	r17, 0x00	; 0
     d9a:	d5 cf       	rjmp	.-86     	; 0xd46 <__stack+0x447>
     d9c:	91 10       	cpse	r9, r1
     d9e:	80 52       	subi	r24, 0x20	; 32
     da0:	b7 01       	movw	r22, r14
     da2:	90 e0       	ldi	r25, 0x00	; 0
     da4:	0e 94 07 08 	call	0x100e	; 0x100e <fputc>
     da8:	0f 5f       	subi	r16, 0xFF	; 255
     daa:	1f 4f       	sbci	r17, 0xFF	; 255
     dac:	cf cf       	rjmp	.-98     	; 0xd4c <__stack+0x44d>
     dae:	23 e0       	ldi	r18, 0x03	; 3
     db0:	25 15       	cp	r18, r5
     db2:	10 f4       	brcc	.+4      	; 0xdb8 <__stack+0x4b9>
     db4:	83 e0       	ldi	r24, 0x03	; 3
     db6:	bd cf       	rjmp	.-134    	; 0xd32 <__stack+0x433>
     db8:	51 2c       	mov	r5, r1
     dba:	c0 cf       	rjmp	.-128    	; 0xd3c <__stack+0x43d>
     dbc:	60 96       	adiw	r28, 0x10	; 16
     dbe:	e2 e1       	ldi	r30, 0x12	; 18
     dc0:	0c 94 fe 06 	jmp	0xdfc	; 0xdfc <__epilogue_restores__>

00000dc4 <__prologue_saves__>:
     dc4:	2f 92       	push	r2
     dc6:	3f 92       	push	r3
     dc8:	4f 92       	push	r4
     dca:	5f 92       	push	r5
     dcc:	6f 92       	push	r6
     dce:	7f 92       	push	r7
     dd0:	8f 92       	push	r8
     dd2:	9f 92       	push	r9
     dd4:	af 92       	push	r10
     dd6:	bf 92       	push	r11
     dd8:	cf 92       	push	r12
     dda:	df 92       	push	r13
     ddc:	ef 92       	push	r14
     dde:	ff 92       	push	r15
     de0:	0f 93       	push	r16
     de2:	1f 93       	push	r17
     de4:	cf 93       	push	r28
     de6:	df 93       	push	r29
     de8:	cd b7       	in	r28, 0x3d	; 61
     dea:	de b7       	in	r29, 0x3e	; 62
     dec:	ca 1b       	sub	r28, r26
     dee:	db 0b       	sbc	r29, r27
     df0:	0f b6       	in	r0, 0x3f	; 63
     df2:	f8 94       	cli
     df4:	de bf       	out	0x3e, r29	; 62
     df6:	0f be       	out	0x3f, r0	; 63
     df8:	cd bf       	out	0x3d, r28	; 61
     dfa:	09 94       	ijmp

00000dfc <__epilogue_restores__>:
     dfc:	2a 88       	ldd	r2, Y+18	; 0x12
     dfe:	39 88       	ldd	r3, Y+17	; 0x11
     e00:	48 88       	ldd	r4, Y+16	; 0x10
     e02:	5f 84       	ldd	r5, Y+15	; 0x0f
     e04:	6e 84       	ldd	r6, Y+14	; 0x0e
     e06:	7d 84       	ldd	r7, Y+13	; 0x0d
     e08:	8c 84       	ldd	r8, Y+12	; 0x0c
     e0a:	9b 84       	ldd	r9, Y+11	; 0x0b
     e0c:	aa 84       	ldd	r10, Y+10	; 0x0a
     e0e:	b9 84       	ldd	r11, Y+9	; 0x09
     e10:	c8 84       	ldd	r12, Y+8	; 0x08
     e12:	df 80       	ldd	r13, Y+7	; 0x07
     e14:	ee 80       	ldd	r14, Y+6	; 0x06
     e16:	fd 80       	ldd	r15, Y+5	; 0x05
     e18:	0c 81       	ldd	r16, Y+4	; 0x04
     e1a:	1b 81       	ldd	r17, Y+3	; 0x03
     e1c:	aa 81       	ldd	r26, Y+2	; 0x02
     e1e:	b9 81       	ldd	r27, Y+1	; 0x01
     e20:	ce 0f       	add	r28, r30
     e22:	d1 1d       	adc	r29, r1
     e24:	0f b6       	in	r0, 0x3f	; 63
     e26:	f8 94       	cli
     e28:	de bf       	out	0x3e, r29	; 62
     e2a:	0f be       	out	0x3f, r0	; 63
     e2c:	cd bf       	out	0x3d, r28	; 61
     e2e:	ed 01       	movw	r28, r26
     e30:	08 95       	ret

00000e32 <__ftoa_engine>:
     e32:	28 30       	cpi	r18, 0x08	; 8
     e34:	08 f0       	brcs	.+2      	; 0xe38 <__ftoa_engine+0x6>
     e36:	27 e0       	ldi	r18, 0x07	; 7
     e38:	33 27       	eor	r19, r19
     e3a:	da 01       	movw	r26, r20
     e3c:	99 0f       	add	r25, r25
     e3e:	31 1d       	adc	r19, r1
     e40:	87 fd       	sbrc	r24, 7
     e42:	91 60       	ori	r25, 0x01	; 1
     e44:	00 96       	adiw	r24, 0x00	; 0
     e46:	61 05       	cpc	r22, r1
     e48:	71 05       	cpc	r23, r1
     e4a:	39 f4       	brne	.+14     	; 0xe5a <__ftoa_engine+0x28>
     e4c:	32 60       	ori	r19, 0x02	; 2
     e4e:	2e 5f       	subi	r18, 0xFE	; 254
     e50:	3d 93       	st	X+, r19
     e52:	30 e3       	ldi	r19, 0x30	; 48
     e54:	2a 95       	dec	r18
     e56:	e1 f7       	brne	.-8      	; 0xe50 <__ftoa_engine+0x1e>
     e58:	08 95       	ret
     e5a:	9f 3f       	cpi	r25, 0xFF	; 255
     e5c:	30 f0       	brcs	.+12     	; 0xe6a <__ftoa_engine+0x38>
     e5e:	80 38       	cpi	r24, 0x80	; 128
     e60:	71 05       	cpc	r23, r1
     e62:	61 05       	cpc	r22, r1
     e64:	09 f0       	breq	.+2      	; 0xe68 <__ftoa_engine+0x36>
     e66:	3c 5f       	subi	r19, 0xFC	; 252
     e68:	3c 5f       	subi	r19, 0xFC	; 252
     e6a:	3d 93       	st	X+, r19
     e6c:	91 30       	cpi	r25, 0x01	; 1
     e6e:	08 f0       	brcs	.+2      	; 0xe72 <__ftoa_engine+0x40>
     e70:	80 68       	ori	r24, 0x80	; 128
     e72:	91 1d       	adc	r25, r1
     e74:	df 93       	push	r29
     e76:	cf 93       	push	r28
     e78:	1f 93       	push	r17
     e7a:	0f 93       	push	r16
     e7c:	ff 92       	push	r15
     e7e:	ef 92       	push	r14
     e80:	19 2f       	mov	r17, r25
     e82:	98 7f       	andi	r25, 0xF8	; 248
     e84:	96 95       	lsr	r25
     e86:	e9 2f       	mov	r30, r25
     e88:	96 95       	lsr	r25
     e8a:	96 95       	lsr	r25
     e8c:	e9 0f       	add	r30, r25
     e8e:	ff 27       	eor	r31, r31
     e90:	e6 53       	subi	r30, 0x36	; 54
     e92:	ff 4f       	sbci	r31, 0xFF	; 255
     e94:	99 27       	eor	r25, r25
     e96:	33 27       	eor	r19, r19
     e98:	ee 24       	eor	r14, r14
     e9a:	ff 24       	eor	r15, r15
     e9c:	a7 01       	movw	r20, r14
     e9e:	e7 01       	movw	r28, r14
     ea0:	05 90       	lpm	r0, Z+
     ea2:	08 94       	sec
     ea4:	07 94       	ror	r0
     ea6:	28 f4       	brcc	.+10     	; 0xeb2 <__ftoa_engine+0x80>
     ea8:	36 0f       	add	r19, r22
     eaa:	e7 1e       	adc	r14, r23
     eac:	f8 1e       	adc	r15, r24
     eae:	49 1f       	adc	r20, r25
     eb0:	51 1d       	adc	r21, r1
     eb2:	66 0f       	add	r22, r22
     eb4:	77 1f       	adc	r23, r23
     eb6:	88 1f       	adc	r24, r24
     eb8:	99 1f       	adc	r25, r25
     eba:	06 94       	lsr	r0
     ebc:	a1 f7       	brne	.-24     	; 0xea6 <__ftoa_engine+0x74>
     ebe:	05 90       	lpm	r0, Z+
     ec0:	07 94       	ror	r0
     ec2:	28 f4       	brcc	.+10     	; 0xece <__ftoa_engine+0x9c>
     ec4:	e7 0e       	add	r14, r23
     ec6:	f8 1e       	adc	r15, r24
     ec8:	49 1f       	adc	r20, r25
     eca:	56 1f       	adc	r21, r22
     ecc:	c1 1d       	adc	r28, r1
     ece:	77 0f       	add	r23, r23
     ed0:	88 1f       	adc	r24, r24
     ed2:	99 1f       	adc	r25, r25
     ed4:	66 1f       	adc	r22, r22
     ed6:	06 94       	lsr	r0
     ed8:	a1 f7       	brne	.-24     	; 0xec2 <__ftoa_engine+0x90>
     eda:	05 90       	lpm	r0, Z+
     edc:	07 94       	ror	r0
     ede:	28 f4       	brcc	.+10     	; 0xeea <__ftoa_engine+0xb8>
     ee0:	f8 0e       	add	r15, r24
     ee2:	49 1f       	adc	r20, r25
     ee4:	56 1f       	adc	r21, r22
     ee6:	c7 1f       	adc	r28, r23
     ee8:	d1 1d       	adc	r29, r1
     eea:	88 0f       	add	r24, r24
     eec:	99 1f       	adc	r25, r25
     eee:	66 1f       	adc	r22, r22
     ef0:	77 1f       	adc	r23, r23
     ef2:	06 94       	lsr	r0
     ef4:	a1 f7       	brne	.-24     	; 0xede <__ftoa_engine+0xac>
     ef6:	05 90       	lpm	r0, Z+
     ef8:	07 94       	ror	r0
     efa:	20 f4       	brcc	.+8      	; 0xf04 <__ftoa_engine+0xd2>
     efc:	49 0f       	add	r20, r25
     efe:	56 1f       	adc	r21, r22
     f00:	c7 1f       	adc	r28, r23
     f02:	d8 1f       	adc	r29, r24
     f04:	99 0f       	add	r25, r25
     f06:	66 1f       	adc	r22, r22
     f08:	77 1f       	adc	r23, r23
     f0a:	88 1f       	adc	r24, r24
     f0c:	06 94       	lsr	r0
     f0e:	a9 f7       	brne	.-22     	; 0xefa <__ftoa_engine+0xc8>
     f10:	84 91       	lpm	r24, Z
     f12:	10 95       	com	r17
     f14:	17 70       	andi	r17, 0x07	; 7
     f16:	41 f0       	breq	.+16     	; 0xf28 <__ftoa_engine+0xf6>
     f18:	d6 95       	lsr	r29
     f1a:	c7 95       	ror	r28
     f1c:	57 95       	ror	r21
     f1e:	47 95       	ror	r20
     f20:	f7 94       	ror	r15
     f22:	e7 94       	ror	r14
     f24:	1a 95       	dec	r17
     f26:	c1 f7       	brne	.-16     	; 0xf18 <__ftoa_engine+0xe6>
     f28:	e0 e7       	ldi	r30, 0x70	; 112
     f2a:	f0 e0       	ldi	r31, 0x00	; 0
     f2c:	68 94       	set
     f2e:	15 90       	lpm	r1, Z+
     f30:	15 91       	lpm	r17, Z+
     f32:	35 91       	lpm	r19, Z+
     f34:	65 91       	lpm	r22, Z+
     f36:	95 91       	lpm	r25, Z+
     f38:	05 90       	lpm	r0, Z+
     f3a:	7f e2       	ldi	r23, 0x2F	; 47
     f3c:	73 95       	inc	r23
     f3e:	e1 18       	sub	r14, r1
     f40:	f1 0a       	sbc	r15, r17
     f42:	43 0b       	sbc	r20, r19
     f44:	56 0b       	sbc	r21, r22
     f46:	c9 0b       	sbc	r28, r25
     f48:	d0 09       	sbc	r29, r0
     f4a:	c0 f7       	brcc	.-16     	; 0xf3c <__ftoa_engine+0x10a>
     f4c:	e1 0c       	add	r14, r1
     f4e:	f1 1e       	adc	r15, r17
     f50:	43 1f       	adc	r20, r19
     f52:	56 1f       	adc	r21, r22
     f54:	c9 1f       	adc	r28, r25
     f56:	d0 1d       	adc	r29, r0
     f58:	7e f4       	brtc	.+30     	; 0xf78 <__ftoa_engine+0x146>
     f5a:	70 33       	cpi	r23, 0x30	; 48
     f5c:	11 f4       	brne	.+4      	; 0xf62 <__ftoa_engine+0x130>
     f5e:	8a 95       	dec	r24
     f60:	e6 cf       	rjmp	.-52     	; 0xf2e <__ftoa_engine+0xfc>
     f62:	e8 94       	clt
     f64:	01 50       	subi	r16, 0x01	; 1
     f66:	30 f0       	brcs	.+12     	; 0xf74 <__ftoa_engine+0x142>
     f68:	08 0f       	add	r16, r24
     f6a:	0a f4       	brpl	.+2      	; 0xf6e <__ftoa_engine+0x13c>
     f6c:	00 27       	eor	r16, r16
     f6e:	02 17       	cp	r16, r18
     f70:	08 f4       	brcc	.+2      	; 0xf74 <__ftoa_engine+0x142>
     f72:	20 2f       	mov	r18, r16
     f74:	23 95       	inc	r18
     f76:	02 2f       	mov	r16, r18
     f78:	7a 33       	cpi	r23, 0x3A	; 58
     f7a:	28 f0       	brcs	.+10     	; 0xf86 <__ftoa_engine+0x154>
     f7c:	79 e3       	ldi	r23, 0x39	; 57
     f7e:	7d 93       	st	X+, r23
     f80:	2a 95       	dec	r18
     f82:	e9 f7       	brne	.-6      	; 0xf7e <__ftoa_engine+0x14c>
     f84:	10 c0       	rjmp	.+32     	; 0xfa6 <__ftoa_engine+0x174>
     f86:	7d 93       	st	X+, r23
     f88:	2a 95       	dec	r18
     f8a:	89 f6       	brne	.-94     	; 0xf2e <__ftoa_engine+0xfc>
     f8c:	06 94       	lsr	r0
     f8e:	97 95       	ror	r25
     f90:	67 95       	ror	r22
     f92:	37 95       	ror	r19
     f94:	17 95       	ror	r17
     f96:	17 94       	ror	r1
     f98:	e1 18       	sub	r14, r1
     f9a:	f1 0a       	sbc	r15, r17
     f9c:	43 0b       	sbc	r20, r19
     f9e:	56 0b       	sbc	r21, r22
     fa0:	c9 0b       	sbc	r28, r25
     fa2:	d0 09       	sbc	r29, r0
     fa4:	98 f0       	brcs	.+38     	; 0xfcc <__ftoa_engine+0x19a>
     fa6:	23 95       	inc	r18
     fa8:	7e 91       	ld	r23, -X
     faa:	73 95       	inc	r23
     fac:	7a 33       	cpi	r23, 0x3A	; 58
     fae:	08 f0       	brcs	.+2      	; 0xfb2 <__ftoa_engine+0x180>
     fb0:	70 e3       	ldi	r23, 0x30	; 48
     fb2:	7c 93       	st	X, r23
     fb4:	20 13       	cpse	r18, r16
     fb6:	b8 f7       	brcc	.-18     	; 0xfa6 <__ftoa_engine+0x174>
     fb8:	7e 91       	ld	r23, -X
     fba:	70 61       	ori	r23, 0x10	; 16
     fbc:	7d 93       	st	X+, r23
     fbe:	30 f0       	brcs	.+12     	; 0xfcc <__ftoa_engine+0x19a>
     fc0:	83 95       	inc	r24
     fc2:	71 e3       	ldi	r23, 0x31	; 49
     fc4:	7d 93       	st	X+, r23
     fc6:	70 e3       	ldi	r23, 0x30	; 48
     fc8:	2a 95       	dec	r18
     fca:	e1 f7       	brne	.-8      	; 0xfc4 <__ftoa_engine+0x192>
     fcc:	11 24       	eor	r1, r1
     fce:	ef 90       	pop	r14
     fd0:	ff 90       	pop	r15
     fd2:	0f 91       	pop	r16
     fd4:	1f 91       	pop	r17
     fd6:	cf 91       	pop	r28
     fd8:	df 91       	pop	r29
     fda:	99 27       	eor	r25, r25
     fdc:	87 fd       	sbrc	r24, 7
     fde:	90 95       	com	r25
     fe0:	08 95       	ret

00000fe2 <strnlen_P>:
     fe2:	fc 01       	movw	r30, r24
     fe4:	05 90       	lpm	r0, Z+
     fe6:	61 50       	subi	r22, 0x01	; 1
     fe8:	70 40       	sbci	r23, 0x00	; 0
     fea:	01 10       	cpse	r0, r1
     fec:	d8 f7       	brcc	.-10     	; 0xfe4 <strnlen_P+0x2>
     fee:	80 95       	com	r24
     ff0:	90 95       	com	r25
     ff2:	8e 0f       	add	r24, r30
     ff4:	9f 1f       	adc	r25, r31
     ff6:	08 95       	ret

00000ff8 <strnlen>:
     ff8:	fc 01       	movw	r30, r24
     ffa:	61 50       	subi	r22, 0x01	; 1
     ffc:	70 40       	sbci	r23, 0x00	; 0
     ffe:	01 90       	ld	r0, Z+
    1000:	01 10       	cpse	r0, r1
    1002:	d8 f7       	brcc	.-10     	; 0xffa <strnlen+0x2>
    1004:	80 95       	com	r24
    1006:	90 95       	com	r25
    1008:	8e 0f       	add	r24, r30
    100a:	9f 1f       	adc	r25, r31
    100c:	08 95       	ret

0000100e <fputc>:
    100e:	0f 93       	push	r16
    1010:	1f 93       	push	r17
    1012:	cf 93       	push	r28
    1014:	df 93       	push	r29
    1016:	fb 01       	movw	r30, r22
    1018:	23 81       	ldd	r18, Z+3	; 0x03
    101a:	21 fd       	sbrc	r18, 1
    101c:	03 c0       	rjmp	.+6      	; 0x1024 <fputc+0x16>
    101e:	8f ef       	ldi	r24, 0xFF	; 255
    1020:	9f ef       	ldi	r25, 0xFF	; 255
    1022:	2c c0       	rjmp	.+88     	; 0x107c <fputc+0x6e>
    1024:	22 ff       	sbrs	r18, 2
    1026:	16 c0       	rjmp	.+44     	; 0x1054 <fputc+0x46>
    1028:	46 81       	ldd	r20, Z+6	; 0x06
    102a:	57 81       	ldd	r21, Z+7	; 0x07
    102c:	24 81       	ldd	r18, Z+4	; 0x04
    102e:	35 81       	ldd	r19, Z+5	; 0x05
    1030:	42 17       	cp	r20, r18
    1032:	53 07       	cpc	r21, r19
    1034:	44 f4       	brge	.+16     	; 0x1046 <fputc+0x38>
    1036:	a0 81       	ld	r26, Z
    1038:	b1 81       	ldd	r27, Z+1	; 0x01
    103a:	9d 01       	movw	r18, r26
    103c:	2f 5f       	subi	r18, 0xFF	; 255
    103e:	3f 4f       	sbci	r19, 0xFF	; 255
    1040:	31 83       	std	Z+1, r19	; 0x01
    1042:	20 83       	st	Z, r18
    1044:	8c 93       	st	X, r24
    1046:	26 81       	ldd	r18, Z+6	; 0x06
    1048:	37 81       	ldd	r19, Z+7	; 0x07
    104a:	2f 5f       	subi	r18, 0xFF	; 255
    104c:	3f 4f       	sbci	r19, 0xFF	; 255
    104e:	37 83       	std	Z+7, r19	; 0x07
    1050:	26 83       	std	Z+6, r18	; 0x06
    1052:	14 c0       	rjmp	.+40     	; 0x107c <fputc+0x6e>
    1054:	8b 01       	movw	r16, r22
    1056:	ec 01       	movw	r28, r24
    1058:	fb 01       	movw	r30, r22
    105a:	00 84       	ldd	r0, Z+8	; 0x08
    105c:	f1 85       	ldd	r31, Z+9	; 0x09
    105e:	e0 2d       	mov	r30, r0
    1060:	09 95       	icall
    1062:	89 2b       	or	r24, r25
    1064:	e1 f6       	brne	.-72     	; 0x101e <fputc+0x10>
    1066:	d8 01       	movw	r26, r16
    1068:	16 96       	adiw	r26, 0x06	; 6
    106a:	8d 91       	ld	r24, X+
    106c:	9c 91       	ld	r25, X
    106e:	17 97       	sbiw	r26, 0x07	; 7
    1070:	01 96       	adiw	r24, 0x01	; 1
    1072:	17 96       	adiw	r26, 0x07	; 7
    1074:	9c 93       	st	X, r25
    1076:	8e 93       	st	-X, r24
    1078:	16 97       	sbiw	r26, 0x06	; 6
    107a:	ce 01       	movw	r24, r28
    107c:	df 91       	pop	r29
    107e:	cf 91       	pop	r28
    1080:	1f 91       	pop	r17
    1082:	0f 91       	pop	r16
    1084:	08 95       	ret

00001086 <printf>:
    1086:	a0 e0       	ldi	r26, 0x00	; 0
    1088:	b0 e0       	ldi	r27, 0x00	; 0
    108a:	e9 e4       	ldi	r30, 0x49	; 73
    108c:	f8 e0       	ldi	r31, 0x08	; 8
    108e:	0c 94 f2 06 	jmp	0xde4	; 0xde4 <__prologue_saves__+0x20>
    1092:	ae 01       	movw	r20, r28
    1094:	4b 5f       	subi	r20, 0xFB	; 251
    1096:	5f 4f       	sbci	r21, 0xFF	; 255
    1098:	fa 01       	movw	r30, r20
    109a:	61 91       	ld	r22, Z+
    109c:	71 91       	ld	r23, Z+
    109e:	af 01       	movw	r20, r30
    10a0:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <__iob+0x2>
    10a4:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <__iob+0x3>
    10a8:	0e 94 65 03 	call	0x6ca	; 0x6ca <vfprintf>
    10ac:	e2 e0       	ldi	r30, 0x02	; 2
    10ae:	0c 94 0e 07 	jmp	0xe1c	; 0xe1c <__epilogue_restores__+0x20>

000010b2 <__ultoa_invert>:
    10b2:	fa 01       	movw	r30, r20
    10b4:	aa 27       	eor	r26, r26
    10b6:	28 30       	cpi	r18, 0x08	; 8
    10b8:	51 f1       	breq	.+84     	; 0x110e <__ultoa_invert+0x5c>
    10ba:	20 31       	cpi	r18, 0x10	; 16
    10bc:	81 f1       	breq	.+96     	; 0x111e <__ultoa_invert+0x6c>
    10be:	e8 94       	clt
    10c0:	6f 93       	push	r22
    10c2:	6e 7f       	andi	r22, 0xFE	; 254
    10c4:	6e 5f       	subi	r22, 0xFE	; 254
    10c6:	7f 4f       	sbci	r23, 0xFF	; 255
    10c8:	8f 4f       	sbci	r24, 0xFF	; 255
    10ca:	9f 4f       	sbci	r25, 0xFF	; 255
    10cc:	af 4f       	sbci	r26, 0xFF	; 255
    10ce:	b1 e0       	ldi	r27, 0x01	; 1
    10d0:	3e d0       	rcall	.+124    	; 0x114e <__ultoa_invert+0x9c>
    10d2:	b4 e0       	ldi	r27, 0x04	; 4
    10d4:	3c d0       	rcall	.+120    	; 0x114e <__ultoa_invert+0x9c>
    10d6:	67 0f       	add	r22, r23
    10d8:	78 1f       	adc	r23, r24
    10da:	89 1f       	adc	r24, r25
    10dc:	9a 1f       	adc	r25, r26
    10de:	a1 1d       	adc	r26, r1
    10e0:	68 0f       	add	r22, r24
    10e2:	79 1f       	adc	r23, r25
    10e4:	8a 1f       	adc	r24, r26
    10e6:	91 1d       	adc	r25, r1
    10e8:	a1 1d       	adc	r26, r1
    10ea:	6a 0f       	add	r22, r26
    10ec:	71 1d       	adc	r23, r1
    10ee:	81 1d       	adc	r24, r1
    10f0:	91 1d       	adc	r25, r1
    10f2:	a1 1d       	adc	r26, r1
    10f4:	20 d0       	rcall	.+64     	; 0x1136 <__ultoa_invert+0x84>
    10f6:	09 f4       	brne	.+2      	; 0x10fa <__ultoa_invert+0x48>
    10f8:	68 94       	set
    10fa:	3f 91       	pop	r19
    10fc:	2a e0       	ldi	r18, 0x0A	; 10
    10fe:	26 9f       	mul	r18, r22
    1100:	11 24       	eor	r1, r1
    1102:	30 19       	sub	r19, r0
    1104:	30 5d       	subi	r19, 0xD0	; 208
    1106:	31 93       	st	Z+, r19
    1108:	de f6       	brtc	.-74     	; 0x10c0 <__ultoa_invert+0xe>
    110a:	cf 01       	movw	r24, r30
    110c:	08 95       	ret
    110e:	46 2f       	mov	r20, r22
    1110:	47 70       	andi	r20, 0x07	; 7
    1112:	40 5d       	subi	r20, 0xD0	; 208
    1114:	41 93       	st	Z+, r20
    1116:	b3 e0       	ldi	r27, 0x03	; 3
    1118:	0f d0       	rcall	.+30     	; 0x1138 <__ultoa_invert+0x86>
    111a:	c9 f7       	brne	.-14     	; 0x110e <__ultoa_invert+0x5c>
    111c:	f6 cf       	rjmp	.-20     	; 0x110a <__ultoa_invert+0x58>
    111e:	46 2f       	mov	r20, r22
    1120:	4f 70       	andi	r20, 0x0F	; 15
    1122:	40 5d       	subi	r20, 0xD0	; 208
    1124:	4a 33       	cpi	r20, 0x3A	; 58
    1126:	18 f0       	brcs	.+6      	; 0x112e <__ultoa_invert+0x7c>
    1128:	49 5d       	subi	r20, 0xD9	; 217
    112a:	31 fd       	sbrc	r19, 1
    112c:	40 52       	subi	r20, 0x20	; 32
    112e:	41 93       	st	Z+, r20
    1130:	02 d0       	rcall	.+4      	; 0x1136 <__ultoa_invert+0x84>
    1132:	a9 f7       	brne	.-22     	; 0x111e <__ultoa_invert+0x6c>
    1134:	ea cf       	rjmp	.-44     	; 0x110a <__ultoa_invert+0x58>
    1136:	b4 e0       	ldi	r27, 0x04	; 4
    1138:	a6 95       	lsr	r26
    113a:	97 95       	ror	r25
    113c:	87 95       	ror	r24
    113e:	77 95       	ror	r23
    1140:	67 95       	ror	r22
    1142:	ba 95       	dec	r27
    1144:	c9 f7       	brne	.-14     	; 0x1138 <__ultoa_invert+0x86>
    1146:	00 97       	sbiw	r24, 0x00	; 0
    1148:	61 05       	cpc	r22, r1
    114a:	71 05       	cpc	r23, r1
    114c:	08 95       	ret
    114e:	9b 01       	movw	r18, r22
    1150:	ac 01       	movw	r20, r24
    1152:	0a 2e       	mov	r0, r26
    1154:	06 94       	lsr	r0
    1156:	57 95       	ror	r21
    1158:	47 95       	ror	r20
    115a:	37 95       	ror	r19
    115c:	27 95       	ror	r18
    115e:	ba 95       	dec	r27
    1160:	c9 f7       	brne	.-14     	; 0x1154 <__ultoa_invert+0xa2>
    1162:	62 0f       	add	r22, r18
    1164:	73 1f       	adc	r23, r19
    1166:	84 1f       	adc	r24, r20
    1168:	95 1f       	adc	r25, r21
    116a:	a0 1d       	adc	r26, r0
    116c:	08 95       	ret

0000116e <_exit>:
    116e:	f8 94       	cli

00001170 <__stop_program>:
    1170:	ff cf       	rjmp	.-2      	; 0x1170 <__stop_program>
