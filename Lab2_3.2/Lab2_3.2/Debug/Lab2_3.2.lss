
Lab2_3.2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000022  00800100  000009a0  00000a34  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009a0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  00800122  00800122  00000a56  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a56  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ab4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000af4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000959  00000000  00000000  00000b4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000078a  00000000  00000000  000014a5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004a2  00000000  00000000  00001c2f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000128  00000000  00000000  000020d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000439  00000000  00000000  000021fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000250  00000000  00000000  00002635  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00002885  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 01 01 	jmp	0x202	; 0x202 <__vector_10>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 45 01 	jmp	0x28a	; 0x28a <__vector_13>
  38:	0c 94 5c 01 	jmp	0x2b8	; 0x2b8 <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 ea       	ldi	r30, 0xA0	; 160
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 32       	cpi	r26, 0x22	; 34
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e2       	ldi	r26, 0x22	; 34
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a4 33       	cpi	r26, 0x34	; 52
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 b8 00 	call	0x170	; 0x170 <main>
  9e:	0c 94 ce 04 	jmp	0x99c	; 0x99c <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <uart_putchar>:
void uart_init(void);

static FILE uart_output = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);
static FILE uart_input = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);

int uart_putchar(char c, FILE *stream) {
  a6:	cf 93       	push	r28
  a8:	c8 2f       	mov	r28, r24
	if (c == '\n') {
  aa:	8a 30       	cpi	r24, 0x0A	; 10
  ac:	19 f4       	brne	.+6      	; 0xb4 <uart_putchar+0xe>
		uart_putchar('\r', stream);
  ae:	8d e0       	ldi	r24, 0x0D	; 13
  b0:	0e 94 53 00 	call	0xa6	; 0xa6 <uart_putchar>
	}
	loop_until_bit_is_set(UCSR0A, UDRE0);
  b4:	e0 ec       	ldi	r30, 0xC0	; 192
  b6:	f0 e0       	ldi	r31, 0x00	; 0
  b8:	80 81       	ld	r24, Z
  ba:	85 ff       	sbrs	r24, 5
  bc:	fd cf       	rjmp	.-6      	; 0xb8 <uart_putchar+0x12>
	UDR0 = c;
  be:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
}
  c2:	80 e0       	ldi	r24, 0x00	; 0
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	cf 91       	pop	r28
  c8:	08 95       	ret

000000ca <uart_getchar>:

int uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0); /* Wait until data exists. */
  ca:	e0 ec       	ldi	r30, 0xC0	; 192
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	80 81       	ld	r24, Z
  d0:	88 23       	and	r24, r24
  d2:	ec f7       	brge	.-6      	; 0xce <uart_getchar+0x4>
	return UDR0;
  d4:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	08 95       	ret

000000dc <uart_init>:

void uart_init(void) {
	UBRR0H = UBRRH_VALUE;
  dc:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = UBRRL_VALUE;
  e0:	87 e6       	ldi	r24, 0x67	; 103
  e2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>

	#if USE_2X
	UCSR0A |= _BV(U2X0);
	#else
	UCSR0A &= ~(_BV(U2X0));
  e6:	e0 ec       	ldi	r30, 0xC0	; 192
  e8:	f0 e0       	ldi	r31, 0x00	; 0
  ea:	80 81       	ld	r24, Z
  ec:	8d 7f       	andi	r24, 0xFD	; 253
  ee:	80 83       	st	Z, r24
	#endif

	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); /* 8-bit data */
  f0:	86 e0       	ldi	r24, 0x06	; 6
  f2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);   /* Enable RX and TX */
  f6:	88 e1       	ldi	r24, 0x18	; 24
  f8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>

    // Redirect stdin and stdout so functions like printf and getchar work.
	stdout = &uart_output;
  fc:	ee e2       	ldi	r30, 0x2E	; 46
  fe:	f1 e0       	ldi	r31, 0x01	; 1
 100:	8e e0       	ldi	r24, 0x0E	; 14
 102:	91 e0       	ldi	r25, 0x01	; 1
 104:	93 83       	std	Z+3, r25	; 0x03
 106:	82 83       	std	Z+2, r24	; 0x02
	stdin = &uart_input;
 108:	80 e0       	ldi	r24, 0x00	; 0
 10a:	91 e0       	ldi	r25, 0x01	; 1
 10c:	91 83       	std	Z+1, r25	; 0x01
 10e:	80 83       	st	Z, r24
 110:	08 95       	ret

00000112 <output_length>:
	}
}

void output_length(void){
	
	if (value2 < value1){overflow--;} // get rid of extra flow count if value2 < value1 
 112:	20 91 28 01 	lds	r18, 0x0128	; 0x800128 <value2>
 116:	30 91 29 01 	lds	r19, 0x0129	; 0x800129 <value2+0x1>
 11a:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <value1>
 11e:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <value1+0x1>
 122:	28 17       	cp	r18, r24
 124:	39 07       	cpc	r19, r25
 126:	48 f4       	brcc	.+18     	; 0x13a <output_length+0x28>
 128:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <overflow>
 12c:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <overflow+0x1>
 130:	01 97       	sbiw	r24, 0x01	; 1
 132:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <overflow+0x1>
 136:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <overflow>
	
	diff = value2 - value1;
 13a:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <value2>
 13e:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <value2+0x1>
 142:	20 91 2a 01 	lds	r18, 0x012A	; 0x80012a <value1>
 146:	30 91 2b 01 	lds	r19, 0x012B	; 0x80012b <value1+0x1>
 14a:	82 1b       	sub	r24, r18
 14c:	93 0b       	sbc	r25, r19
 14e:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <diff+0x1>
 152:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <diff>
	
	pulse_width = (int)overflow * 65536u + (int)diff;
 156:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <overflow>
 15a:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <overflow+0x1>
 15e:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <diff>
 162:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <diff+0x1>
 166:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <__data_end+0x1>
 16a:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <__data_end>
 16e:	08 95       	ret

00000170 <main>:
#define D6 26;
#define C6 30;

int main(void)
{
	uart_init();	// init UART
 170:	0e 94 6e 00 	call	0xdc	; 0xdc <uart_init>
	
	DDRB = 0x00;	// init PORTB to be all inputs
 174:	14 b8       	out	0x04, r1	; 4
	DDRC = 0xFF;	// init PORTC to be all outputs
 176:	8f ef       	ldi	r24, 0xFF	; 255
 178:	87 b9       	out	0x07, r24	; 7
	DDRD = 0x40;	// enable PD6 to be output
 17a:	80 e4       	ldi	r24, 0x40	; 64
 17c:	8a b9       	out	0x0a, r24	; 10
	
	TCCR1A = 0x00;	// init High byte to zero
 17e:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
	TCCR1B = 0x00;  // init Mid byte to zero
 182:	e1 e8       	ldi	r30, 0x81	; 129
 184:	f0 e0       	ldi	r31, 0x00	; 0
 186:	10 82       	st	Z, r1
	TCCR1C = 0x00;	// init Low byte to zero
 188:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
	
	DDRB  |=  (1<<PORTB1) |(1<<PORTB2) | (1<<PORTB3) |(1<<PORTB4) |(1<<PORTB5);	// enable PB1 to be output channel
 18c:	84 b1       	in	r24, 0x04	; 4
 18e:	8e 63       	ori	r24, 0x3E	; 62
 190:	84 b9       	out	0x04, r24	; 4
	DDRB  &= ~(1<<PORTB0);	// enable PB0 to be input channel
 192:	20 98       	cbi	0x04, 0	; 4
	PORTD |=  (1 << PORTD6); //enable PD6 to be output channel 
 194:	5e 9a       	sbi	0x0b, 6	; 11
	PORTB |=  (1<<PORTB1) | (1<<PORTB2) | (1<<PORTB3) | (1<<PORTB4);// change PB1 to high
 196:	85 b1       	in	r24, 0x05	; 5
 198:	8e 61       	ori	r24, 0x1E	; 30
 19a:	85 b9       	out	0x05, r24	; 5

	TIMSK1 |= (1<<ICIE1) | (1<<TOIE1);  // set overflow interrupt 
 19c:	af e6       	ldi	r26, 0x6F	; 111
 19e:	b0 e0       	ldi	r27, 0x00	; 0
 1a0:	8c 91       	ld	r24, X
 1a2:	81 62       	ori	r24, 0x21	; 33
 1a4:	8c 93       	st	X, r24
	TCCR1B |= (1<<CS11 ) | (1<<ICES1);	// set clock prescale to 8 and enable rising edge capture
 1a6:	80 81       	ld	r24, Z
 1a8:	82 64       	ori	r24, 0x42	; 66
 1aa:	80 83       	st	Z, r24
	
	TCNT1 = 0;	// reset Counter 1
 1ac:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 1b0:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
	
	TCCR0A |= (1 << COM0A0) | (1 << WGM01); //Toggle OC1A on compare match;CTC mode
 1b4:	84 b5       	in	r24, 0x24	; 36
 1b6:	82 64       	ori	r24, 0x42	; 66
 1b8:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1 << CS01) | (1 << CS00); // prescaler 64
 1ba:	85 b5       	in	r24, 0x25	; 37
 1bc:	83 60       	ori	r24, 0x03	; 3
 1be:	85 bd       	out	0x25, r24	; 37

	sei();		// enable interrupt
 1c0:	78 94       	sei
	
	while (1)
	{
		TIMSK1 |= (1<<ICIE1) | (1<<TOIE1);
 1c2:	0f e6       	ldi	r16, 0x6F	; 111
 1c4:	10 e0       	ldi	r17, 0x00	; 0
		if (TCNT1>= 9){		// counts 9 times to obtain 100kHz
 1c6:	0f 2e       	mov	r0, r31
 1c8:	f4 e8       	ldi	r31, 0x84	; 132
 1ca:	ef 2e       	mov	r14, r31
 1cc:	f1 2c       	mov	r15, r1
 1ce:	f0 2d       	mov	r31, r0
			PORTB ^= (1<<PORTB1);
 1d0:	68 94       	set
 1d2:	dd 24       	eor	r13, r13
 1d4:	d1 f8       	bld	r13, 1
			TCNT1 = 0;
			}
		output_length();
		TIMSK0 |= (1 << OCIE0A);	
 1d6:	ce e6       	ldi	r28, 0x6E	; 110
 1d8:	d0 e0       	ldi	r29, 0x00	; 0

	sei();		// enable interrupt
	
	while (1)
	{
		TIMSK1 |= (1<<ICIE1) | (1<<TOIE1);
 1da:	f8 01       	movw	r30, r16
 1dc:	80 81       	ld	r24, Z
 1de:	81 62       	ori	r24, 0x21	; 33
 1e0:	80 83       	st	Z, r24
		if (TCNT1>= 9){		// counts 9 times to obtain 100kHz
 1e2:	f7 01       	movw	r30, r14
 1e4:	80 81       	ld	r24, Z
 1e6:	91 81       	ldd	r25, Z+1	; 0x01
 1e8:	09 97       	sbiw	r24, 0x09	; 9
 1ea:	28 f0       	brcs	.+10     	; 0x1f6 <main+0x86>
			PORTB ^= (1<<PORTB1);
 1ec:	85 b1       	in	r24, 0x05	; 5
 1ee:	8d 25       	eor	r24, r13
 1f0:	85 b9       	out	0x05, r24	; 5
			TCNT1 = 0;
 1f2:	11 82       	std	Z+1, r1	; 0x01
 1f4:	10 82       	st	Z, r1
			}
		output_length();
 1f6:	0e 94 89 00 	call	0x112	; 0x112 <output_length>
		TIMSK0 |= (1 << OCIE0A);	
 1fa:	88 81       	ld	r24, Y
 1fc:	82 60       	ori	r24, 0x02	; 2
 1fe:	88 83       	st	Y, r24
	}
 200:	ec cf       	rjmp	.-40     	; 0x1da <main+0x6a>

00000202 <__vector_10>:
	}
	*/
	
}

ISR(TIMER1_CAPT_vect){
 202:	1f 92       	push	r1
 204:	0f 92       	push	r0
 206:	0f b6       	in	r0, 0x3f	; 63
 208:	0f 92       	push	r0
 20a:	11 24       	eor	r1, r1
 20c:	8f 93       	push	r24
 20e:	9f 93       	push	r25
 210:	ef 93       	push	r30
 212:	ff 93       	push	r31
	if (flag){
 214:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <flag>
 218:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <flag+0x1>
 21c:	89 2b       	or	r24, r25
 21e:	99 f0       	breq	.+38     	; 0x246 <__vector_10+0x44>
		TCCR1B |= (1<<ICES1);	// detect rising edge
 220:	e1 e8       	ldi	r30, 0x81	; 129
 222:	f0 e0       	ldi	r31, 0x00	; 0
 224:	80 81       	ld	r24, Z
 226:	80 64       	ori	r24, 0x40	; 64
 228:	80 83       	st	Z, r24
		TIFR1 |= 0x20;			// clears flag
 22a:	b5 9a       	sbi	0x16, 5	; 22
		value1 = ICR1;			// stores time 1
 22c:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 230:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 234:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <value1+0x1>
 238:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <value1>
		flag = 0;
 23c:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <flag+0x1>
 240:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <flag>
 244:	14 c0       	rjmp	.+40     	; 0x26e <__vector_10+0x6c>
	}
	else{
		TCCR1B &= ~(1<<ICES1);	// detect falling edge
 246:	e1 e8       	ldi	r30, 0x81	; 129
 248:	f0 e0       	ldi	r31, 0x00	; 0
 24a:	80 81       	ld	r24, Z
 24c:	8f 7b       	andi	r24, 0xBF	; 191
 24e:	80 83       	st	Z, r24
		TIFR1 |= 0x20;			// clears flag
 250:	b5 9a       	sbi	0x16, 5	; 22
		value2 = ICR1;			// stores time 2
 252:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 256:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 25a:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <value2+0x1>
 25e:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <value2>
		flag = 1;
 262:	81 e0       	ldi	r24, 0x01	; 1
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <flag+0x1>
 26a:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <flag>
	}
	TIMSK1 &= ~(1<<ICIE1) | (1<<TOIE1);
 26e:	ef e6       	ldi	r30, 0x6F	; 111
 270:	f0 e0       	ldi	r31, 0x00	; 0
 272:	80 81       	ld	r24, Z
 274:	8f 7d       	andi	r24, 0xDF	; 223
 276:	80 83       	st	Z, r24
}
 278:	ff 91       	pop	r31
 27a:	ef 91       	pop	r30
 27c:	9f 91       	pop	r25
 27e:	8f 91       	pop	r24
 280:	0f 90       	pop	r0
 282:	0f be       	out	0x3f, r0	; 63
 284:	0f 90       	pop	r0
 286:	1f 90       	pop	r1
 288:	18 95       	reti

0000028a <__vector_13>:

ISR(TIMER1_OVF_vect){
 28a:	1f 92       	push	r1
 28c:	0f 92       	push	r0
 28e:	0f b6       	in	r0, 0x3f	; 63
 290:	0f 92       	push	r0
 292:	11 24       	eor	r1, r1
 294:	8f 93       	push	r24
 296:	9f 93       	push	r25
	overflow++;					//count overflow
 298:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <overflow>
 29c:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <overflow+0x1>
 2a0:	01 96       	adiw	r24, 0x01	; 1
 2a2:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <overflow+0x1>
 2a6:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <overflow>
}
 2aa:	9f 91       	pop	r25
 2ac:	8f 91       	pop	r24
 2ae:	0f 90       	pop	r0
 2b0:	0f be       	out	0x3f, r0	; 63
 2b2:	0f 90       	pop	r0
 2b4:	1f 90       	pop	r1
 2b6:	18 95       	reti

000002b8 <__vector_14>:

ISR(TIMER0_COMPA_vect)
{	
 2b8:	1f 92       	push	r1
 2ba:	0f 92       	push	r0
 2bc:	0f b6       	in	r0, 0x3f	; 63
 2be:	0f 92       	push	r0
 2c0:	11 24       	eor	r1, r1
 2c2:	2f 93       	push	r18
 2c4:	3f 93       	push	r19
 2c6:	4f 93       	push	r20
 2c8:	5f 93       	push	r21
 2ca:	6f 93       	push	r22
 2cc:	7f 93       	push	r23
 2ce:	8f 93       	push	r24
 2d0:	9f 93       	push	r25
 2d2:	af 93       	push	r26
 2d4:	bf 93       	push	r27
 2d6:	ef 93       	push	r30
 2d8:	ff 93       	push	r31
	// change the output voltage of DAC according to the pulse width
	if (pulse_width!=0){
 2da:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <__data_end>
 2de:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <__data_end+0x1>
 2e2:	89 2b       	or	r24, r25
 2e4:	b9 f0       	breq	.+46     	; 0x314 <__vector_14+0x5c>
		printf("%d \n",-pulse_width); // print to serial
 2e6:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <__data_end>
 2ea:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <__data_end+0x1>
 2ee:	91 95       	neg	r25
 2f0:	81 95       	neg	r24
 2f2:	91 09       	sbc	r25, r1
 2f4:	9f 93       	push	r25
 2f6:	8f 93       	push	r24
 2f8:	8c e1       	ldi	r24, 0x1C	; 28
 2fa:	91 e0       	ldi	r25, 0x01	; 1
 2fc:	9f 93       	push	r25
 2fe:	8f 93       	push	r24
 300:	0e 94 f0 01 	call	0x3e0	; 0x3e0 <printf>
		PORTB ^= (1 << PORTB5);
 304:	95 b1       	in	r25, 0x05	; 5
 306:	80 e2       	ldi	r24, 0x20	; 32
 308:	89 27       	eor	r24, r25
 30a:	85 b9       	out	0x05, r24	; 5
 30c:	0f 90       	pop	r0
 30e:	0f 90       	pop	r0
 310:	0f 90       	pop	r0
 312:	0f 90       	pop	r0
	}
	//000
	if(pulse_width > -1187){
 314:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <__data_end>
 318:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <__data_end+0x1>
 31c:	8e 35       	cpi	r24, 0x5E	; 94
 31e:	9b 4f       	sbci	r25, 0xFB	; 251
 320:	20 f0       	brcs	.+8      	; 0x32a <__vector_14+0x72>
		PORTB &= ~(1 << PORTB2);
 322:	2a 98       	cbi	0x05, 2	; 5
		PORTB &= ~(1 << PORTB3);
 324:	2b 98       	cbi	0x05, 3	; 5
		PORTB &= ~(1 << PORTB4);
 326:	2c 98       	cbi	0x05, 4	; 5
 328:	45 c0       	rjmp	.+138    	; 0x3b4 <__vector_14+0xfc>

	}
	//001
	else if(pulse_width > -1874){
 32a:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <__data_end>
 32e:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <__data_end+0x1>
 332:	8f 3a       	cpi	r24, 0xAF	; 175
 334:	98 4f       	sbci	r25, 0xF8	; 248
 336:	20 f0       	brcs	.+8      	; 0x340 <__vector_14+0x88>
		PORTB |= (1 << PORTB2);
 338:	2a 9a       	sbi	0x05, 2	; 5
		PORTB &= ~(1 << PORTB3);
 33a:	2b 98       	cbi	0x05, 3	; 5
		PORTB &= ~(1 << PORTB4);
 33c:	2c 98       	cbi	0x05, 4	; 5
 33e:	3a c0       	rjmp	.+116    	; 0x3b4 <__vector_14+0xfc>
	}
	//010
	else if(pulse_width > -2561){
 340:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <__data_end>
 344:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <__data_end+0x1>
 348:	81 15       	cp	r24, r1
 34a:	96 4f       	sbci	r25, 0xF6	; 246
 34c:	20 f0       	brcs	.+8      	; 0x356 <__vector_14+0x9e>
		PORTB &= ~(1 << PORTB2);
 34e:	2a 98       	cbi	0x05, 2	; 5
		PORTB |= (1 << PORTB3);
 350:	2b 9a       	sbi	0x05, 3	; 5
		PORTB &= ~(1 << PORTB4);
 352:	2c 98       	cbi	0x05, 4	; 5
 354:	2f c0       	rjmp	.+94     	; 0x3b4 <__vector_14+0xfc>
	}
	//011
	else if(pulse_width > -3248){
 356:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <__data_end>
 35a:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <__data_end+0x1>
 35e:	81 35       	cpi	r24, 0x51	; 81
 360:	93 4f       	sbci	r25, 0xF3	; 243
 362:	20 f0       	brcs	.+8      	; 0x36c <__vector_14+0xb4>
		PORTB |= (1 << PORTB2);
 364:	2a 9a       	sbi	0x05, 2	; 5
		PORTB |= (1 << PORTB3);
 366:	2b 9a       	sbi	0x05, 3	; 5
		PORTB &= ~(1 << PORTB4);
 368:	2c 98       	cbi	0x05, 4	; 5
 36a:	24 c0       	rjmp	.+72     	; 0x3b4 <__vector_14+0xfc>
	}
	//100
	else if(pulse_width > -3935){
 36c:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <__data_end>
 370:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <__data_end+0x1>
 374:	82 3a       	cpi	r24, 0xA2	; 162
 376:	90 4f       	sbci	r25, 0xF0	; 240
 378:	20 f0       	brcs	.+8      	; 0x382 <__vector_14+0xca>
		PORTB &= ~(1 << PORTB2);
 37a:	2a 98       	cbi	0x05, 2	; 5
		PORTB &= ~(1 << PORTB3);
 37c:	2b 98       	cbi	0x05, 3	; 5
		PORTB |= (1 << PORTB4);
 37e:	2c 9a       	sbi	0x05, 4	; 5
 380:	19 c0       	rjmp	.+50     	; 0x3b4 <__vector_14+0xfc>
	}
	//101
	else if(pulse_width > -4622){
 382:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <__data_end>
 386:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <__data_end+0x1>
 38a:	83 3f       	cpi	r24, 0xF3	; 243
 38c:	9d 4e       	sbci	r25, 0xED	; 237
 38e:	20 f0       	brcs	.+8      	; 0x398 <__vector_14+0xe0>
		PORTB |= (1 << PORTB2);
 390:	2a 9a       	sbi	0x05, 2	; 5
		PORTB &= ~(1 << PORTB3);
 392:	2b 98       	cbi	0x05, 3	; 5
		PORTB |= (1 << PORTB4);
 394:	2c 9a       	sbi	0x05, 4	; 5
 396:	0e c0       	rjmp	.+28     	; 0x3b4 <__vector_14+0xfc>
	}
	//110
	else if(pulse_width > -5309){
 398:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <__data_end>
 39c:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <__data_end+0x1>
 3a0:	84 34       	cpi	r24, 0x44	; 68
 3a2:	9b 4e       	sbci	r25, 0xEB	; 235
 3a4:	20 f0       	brcs	.+8      	; 0x3ae <__vector_14+0xf6>
		PORTB &= ~(1 << PORTB2);
 3a6:	2a 98       	cbi	0x05, 2	; 5
		PORTB |= (1 << PORTB3);
 3a8:	2b 9a       	sbi	0x05, 3	; 5
		PORTB |= (1 << PORTB4);
 3aa:	2c 9a       	sbi	0x05, 4	; 5
 3ac:	03 c0       	rjmp	.+6      	; 0x3b4 <__vector_14+0xfc>
	}
	//111
	else{
		PORTB |= (1 << PORTB2);
 3ae:	2a 9a       	sbi	0x05, 2	; 5
		PORTB |= (1 << PORTB3);
 3b0:	2b 9a       	sbi	0x05, 3	; 5
		PORTB |= (1 << PORTB4);
 3b2:	2c 9a       	sbi	0x05, 4	; 5
	}
	TIMSK0 &= ~(1 << OCIE0A);
 3b4:	ee e6       	ldi	r30, 0x6E	; 110
 3b6:	f0 e0       	ldi	r31, 0x00	; 0
 3b8:	80 81       	ld	r24, Z
 3ba:	8d 7f       	andi	r24, 0xFD	; 253
 3bc:	80 83       	st	Z, r24
	
	
}
 3be:	ff 91       	pop	r31
 3c0:	ef 91       	pop	r30
 3c2:	bf 91       	pop	r27
 3c4:	af 91       	pop	r26
 3c6:	9f 91       	pop	r25
 3c8:	8f 91       	pop	r24
 3ca:	7f 91       	pop	r23
 3cc:	6f 91       	pop	r22
 3ce:	5f 91       	pop	r21
 3d0:	4f 91       	pop	r20
 3d2:	3f 91       	pop	r19
 3d4:	2f 91       	pop	r18
 3d6:	0f 90       	pop	r0
 3d8:	0f be       	out	0x3f, r0	; 63
 3da:	0f 90       	pop	r0
 3dc:	1f 90       	pop	r1
 3de:	18 95       	reti

000003e0 <printf>:
 3e0:	a0 e0       	ldi	r26, 0x00	; 0
 3e2:	b0 e0       	ldi	r27, 0x00	; 0
 3e4:	e6 ef       	ldi	r30, 0xF6	; 246
 3e6:	f1 e0       	ldi	r31, 0x01	; 1
 3e8:	0c 94 a7 04 	jmp	0x94e	; 0x94e <__prologue_saves__+0x20>
 3ec:	ae 01       	movw	r20, r28
 3ee:	4b 5f       	subi	r20, 0xFB	; 251
 3f0:	5f 4f       	sbci	r21, 0xFF	; 255
 3f2:	fa 01       	movw	r30, r20
 3f4:	61 91       	ld	r22, Z+
 3f6:	71 91       	ld	r23, Z+
 3f8:	af 01       	movw	r20, r30
 3fa:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <__iob+0x2>
 3fe:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <__iob+0x3>
 402:	0e 94 06 02 	call	0x40c	; 0x40c <vfprintf>
 406:	e2 e0       	ldi	r30, 0x02	; 2
 408:	0c 94 c3 04 	jmp	0x986	; 0x986 <__epilogue_restores__+0x20>

0000040c <vfprintf>:
 40c:	ab e0       	ldi	r26, 0x0B	; 11
 40e:	b0 e0       	ldi	r27, 0x00	; 0
 410:	ec e0       	ldi	r30, 0x0C	; 12
 412:	f2 e0       	ldi	r31, 0x02	; 2
 414:	0c 94 97 04 	jmp	0x92e	; 0x92e <__prologue_saves__>
 418:	6c 01       	movw	r12, r24
 41a:	7b 01       	movw	r14, r22
 41c:	8a 01       	movw	r16, r20
 41e:	fc 01       	movw	r30, r24
 420:	17 82       	std	Z+7, r1	; 0x07
 422:	16 82       	std	Z+6, r1	; 0x06
 424:	83 81       	ldd	r24, Z+3	; 0x03
 426:	81 ff       	sbrs	r24, 1
 428:	cc c1       	rjmp	.+920    	; 0x7c2 <vfprintf+0x3b6>
 42a:	ce 01       	movw	r24, r28
 42c:	01 96       	adiw	r24, 0x01	; 1
 42e:	3c 01       	movw	r6, r24
 430:	f6 01       	movw	r30, r12
 432:	93 81       	ldd	r25, Z+3	; 0x03
 434:	f7 01       	movw	r30, r14
 436:	93 fd       	sbrc	r25, 3
 438:	85 91       	lpm	r24, Z+
 43a:	93 ff       	sbrs	r25, 3
 43c:	81 91       	ld	r24, Z+
 43e:	7f 01       	movw	r14, r30
 440:	88 23       	and	r24, r24
 442:	09 f4       	brne	.+2      	; 0x446 <vfprintf+0x3a>
 444:	ba c1       	rjmp	.+884    	; 0x7ba <vfprintf+0x3ae>
 446:	85 32       	cpi	r24, 0x25	; 37
 448:	39 f4       	brne	.+14     	; 0x458 <vfprintf+0x4c>
 44a:	93 fd       	sbrc	r25, 3
 44c:	85 91       	lpm	r24, Z+
 44e:	93 ff       	sbrs	r25, 3
 450:	81 91       	ld	r24, Z+
 452:	7f 01       	movw	r14, r30
 454:	85 32       	cpi	r24, 0x25	; 37
 456:	29 f4       	brne	.+10     	; 0x462 <vfprintf+0x56>
 458:	b6 01       	movw	r22, r12
 45a:	90 e0       	ldi	r25, 0x00	; 0
 45c:	0e 94 fd 03 	call	0x7fa	; 0x7fa <fputc>
 460:	e7 cf       	rjmp	.-50     	; 0x430 <vfprintf+0x24>
 462:	91 2c       	mov	r9, r1
 464:	21 2c       	mov	r2, r1
 466:	31 2c       	mov	r3, r1
 468:	ff e1       	ldi	r31, 0x1F	; 31
 46a:	f3 15       	cp	r31, r3
 46c:	d8 f0       	brcs	.+54     	; 0x4a4 <vfprintf+0x98>
 46e:	8b 32       	cpi	r24, 0x2B	; 43
 470:	79 f0       	breq	.+30     	; 0x490 <vfprintf+0x84>
 472:	38 f4       	brcc	.+14     	; 0x482 <vfprintf+0x76>
 474:	80 32       	cpi	r24, 0x20	; 32
 476:	79 f0       	breq	.+30     	; 0x496 <vfprintf+0x8a>
 478:	83 32       	cpi	r24, 0x23	; 35
 47a:	a1 f4       	brne	.+40     	; 0x4a4 <vfprintf+0x98>
 47c:	23 2d       	mov	r18, r3
 47e:	20 61       	ori	r18, 0x10	; 16
 480:	1d c0       	rjmp	.+58     	; 0x4bc <vfprintf+0xb0>
 482:	8d 32       	cpi	r24, 0x2D	; 45
 484:	61 f0       	breq	.+24     	; 0x49e <vfprintf+0x92>
 486:	80 33       	cpi	r24, 0x30	; 48
 488:	69 f4       	brne	.+26     	; 0x4a4 <vfprintf+0x98>
 48a:	23 2d       	mov	r18, r3
 48c:	21 60       	ori	r18, 0x01	; 1
 48e:	16 c0       	rjmp	.+44     	; 0x4bc <vfprintf+0xb0>
 490:	83 2d       	mov	r24, r3
 492:	82 60       	ori	r24, 0x02	; 2
 494:	38 2e       	mov	r3, r24
 496:	e3 2d       	mov	r30, r3
 498:	e4 60       	ori	r30, 0x04	; 4
 49a:	3e 2e       	mov	r3, r30
 49c:	2a c0       	rjmp	.+84     	; 0x4f2 <vfprintf+0xe6>
 49e:	f3 2d       	mov	r31, r3
 4a0:	f8 60       	ori	r31, 0x08	; 8
 4a2:	1d c0       	rjmp	.+58     	; 0x4de <vfprintf+0xd2>
 4a4:	37 fc       	sbrc	r3, 7
 4a6:	2d c0       	rjmp	.+90     	; 0x502 <vfprintf+0xf6>
 4a8:	20 ed       	ldi	r18, 0xD0	; 208
 4aa:	28 0f       	add	r18, r24
 4ac:	2a 30       	cpi	r18, 0x0A	; 10
 4ae:	40 f0       	brcs	.+16     	; 0x4c0 <vfprintf+0xb4>
 4b0:	8e 32       	cpi	r24, 0x2E	; 46
 4b2:	b9 f4       	brne	.+46     	; 0x4e2 <vfprintf+0xd6>
 4b4:	36 fc       	sbrc	r3, 6
 4b6:	81 c1       	rjmp	.+770    	; 0x7ba <vfprintf+0x3ae>
 4b8:	23 2d       	mov	r18, r3
 4ba:	20 64       	ori	r18, 0x40	; 64
 4bc:	32 2e       	mov	r3, r18
 4be:	19 c0       	rjmp	.+50     	; 0x4f2 <vfprintf+0xe6>
 4c0:	36 fe       	sbrs	r3, 6
 4c2:	06 c0       	rjmp	.+12     	; 0x4d0 <vfprintf+0xc4>
 4c4:	8a e0       	ldi	r24, 0x0A	; 10
 4c6:	98 9e       	mul	r9, r24
 4c8:	20 0d       	add	r18, r0
 4ca:	11 24       	eor	r1, r1
 4cc:	92 2e       	mov	r9, r18
 4ce:	11 c0       	rjmp	.+34     	; 0x4f2 <vfprintf+0xe6>
 4d0:	ea e0       	ldi	r30, 0x0A	; 10
 4d2:	2e 9e       	mul	r2, r30
 4d4:	20 0d       	add	r18, r0
 4d6:	11 24       	eor	r1, r1
 4d8:	22 2e       	mov	r2, r18
 4da:	f3 2d       	mov	r31, r3
 4dc:	f0 62       	ori	r31, 0x20	; 32
 4de:	3f 2e       	mov	r3, r31
 4e0:	08 c0       	rjmp	.+16     	; 0x4f2 <vfprintf+0xe6>
 4e2:	8c 36       	cpi	r24, 0x6C	; 108
 4e4:	21 f4       	brne	.+8      	; 0x4ee <vfprintf+0xe2>
 4e6:	83 2d       	mov	r24, r3
 4e8:	80 68       	ori	r24, 0x80	; 128
 4ea:	38 2e       	mov	r3, r24
 4ec:	02 c0       	rjmp	.+4      	; 0x4f2 <vfprintf+0xe6>
 4ee:	88 36       	cpi	r24, 0x68	; 104
 4f0:	41 f4       	brne	.+16     	; 0x502 <vfprintf+0xf6>
 4f2:	f7 01       	movw	r30, r14
 4f4:	93 fd       	sbrc	r25, 3
 4f6:	85 91       	lpm	r24, Z+
 4f8:	93 ff       	sbrs	r25, 3
 4fa:	81 91       	ld	r24, Z+
 4fc:	7f 01       	movw	r14, r30
 4fe:	81 11       	cpse	r24, r1
 500:	b3 cf       	rjmp	.-154    	; 0x468 <vfprintf+0x5c>
 502:	98 2f       	mov	r25, r24
 504:	9f 7d       	andi	r25, 0xDF	; 223
 506:	95 54       	subi	r25, 0x45	; 69
 508:	93 30       	cpi	r25, 0x03	; 3
 50a:	28 f4       	brcc	.+10     	; 0x516 <vfprintf+0x10a>
 50c:	0c 5f       	subi	r16, 0xFC	; 252
 50e:	1f 4f       	sbci	r17, 0xFF	; 255
 510:	9f e3       	ldi	r25, 0x3F	; 63
 512:	99 83       	std	Y+1, r25	; 0x01
 514:	0d c0       	rjmp	.+26     	; 0x530 <vfprintf+0x124>
 516:	83 36       	cpi	r24, 0x63	; 99
 518:	31 f0       	breq	.+12     	; 0x526 <vfprintf+0x11a>
 51a:	83 37       	cpi	r24, 0x73	; 115
 51c:	71 f0       	breq	.+28     	; 0x53a <vfprintf+0x12e>
 51e:	83 35       	cpi	r24, 0x53	; 83
 520:	09 f0       	breq	.+2      	; 0x524 <vfprintf+0x118>
 522:	59 c0       	rjmp	.+178    	; 0x5d6 <vfprintf+0x1ca>
 524:	21 c0       	rjmp	.+66     	; 0x568 <vfprintf+0x15c>
 526:	f8 01       	movw	r30, r16
 528:	80 81       	ld	r24, Z
 52a:	89 83       	std	Y+1, r24	; 0x01
 52c:	0e 5f       	subi	r16, 0xFE	; 254
 52e:	1f 4f       	sbci	r17, 0xFF	; 255
 530:	88 24       	eor	r8, r8
 532:	83 94       	inc	r8
 534:	91 2c       	mov	r9, r1
 536:	53 01       	movw	r10, r6
 538:	13 c0       	rjmp	.+38     	; 0x560 <vfprintf+0x154>
 53a:	28 01       	movw	r4, r16
 53c:	f2 e0       	ldi	r31, 0x02	; 2
 53e:	4f 0e       	add	r4, r31
 540:	51 1c       	adc	r5, r1
 542:	f8 01       	movw	r30, r16
 544:	a0 80       	ld	r10, Z
 546:	b1 80       	ldd	r11, Z+1	; 0x01
 548:	36 fe       	sbrs	r3, 6
 54a:	03 c0       	rjmp	.+6      	; 0x552 <vfprintf+0x146>
 54c:	69 2d       	mov	r22, r9
 54e:	70 e0       	ldi	r23, 0x00	; 0
 550:	02 c0       	rjmp	.+4      	; 0x556 <vfprintf+0x14a>
 552:	6f ef       	ldi	r22, 0xFF	; 255
 554:	7f ef       	ldi	r23, 0xFF	; 255
 556:	c5 01       	movw	r24, r10
 558:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <strnlen>
 55c:	4c 01       	movw	r8, r24
 55e:	82 01       	movw	r16, r4
 560:	f3 2d       	mov	r31, r3
 562:	ff 77       	andi	r31, 0x7F	; 127
 564:	3f 2e       	mov	r3, r31
 566:	16 c0       	rjmp	.+44     	; 0x594 <vfprintf+0x188>
 568:	28 01       	movw	r4, r16
 56a:	22 e0       	ldi	r18, 0x02	; 2
 56c:	42 0e       	add	r4, r18
 56e:	51 1c       	adc	r5, r1
 570:	f8 01       	movw	r30, r16
 572:	a0 80       	ld	r10, Z
 574:	b1 80       	ldd	r11, Z+1	; 0x01
 576:	36 fe       	sbrs	r3, 6
 578:	03 c0       	rjmp	.+6      	; 0x580 <vfprintf+0x174>
 57a:	69 2d       	mov	r22, r9
 57c:	70 e0       	ldi	r23, 0x00	; 0
 57e:	02 c0       	rjmp	.+4      	; 0x584 <vfprintf+0x178>
 580:	6f ef       	ldi	r22, 0xFF	; 255
 582:	7f ef       	ldi	r23, 0xFF	; 255
 584:	c5 01       	movw	r24, r10
 586:	0e 94 e7 03 	call	0x7ce	; 0x7ce <strnlen_P>
 58a:	4c 01       	movw	r8, r24
 58c:	f3 2d       	mov	r31, r3
 58e:	f0 68       	ori	r31, 0x80	; 128
 590:	3f 2e       	mov	r3, r31
 592:	82 01       	movw	r16, r4
 594:	33 fc       	sbrc	r3, 3
 596:	1b c0       	rjmp	.+54     	; 0x5ce <vfprintf+0x1c2>
 598:	82 2d       	mov	r24, r2
 59a:	90 e0       	ldi	r25, 0x00	; 0
 59c:	88 16       	cp	r8, r24
 59e:	99 06       	cpc	r9, r25
 5a0:	b0 f4       	brcc	.+44     	; 0x5ce <vfprintf+0x1c2>
 5a2:	b6 01       	movw	r22, r12
 5a4:	80 e2       	ldi	r24, 0x20	; 32
 5a6:	90 e0       	ldi	r25, 0x00	; 0
 5a8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <fputc>
 5ac:	2a 94       	dec	r2
 5ae:	f4 cf       	rjmp	.-24     	; 0x598 <vfprintf+0x18c>
 5b0:	f5 01       	movw	r30, r10
 5b2:	37 fc       	sbrc	r3, 7
 5b4:	85 91       	lpm	r24, Z+
 5b6:	37 fe       	sbrs	r3, 7
 5b8:	81 91       	ld	r24, Z+
 5ba:	5f 01       	movw	r10, r30
 5bc:	b6 01       	movw	r22, r12
 5be:	90 e0       	ldi	r25, 0x00	; 0
 5c0:	0e 94 fd 03 	call	0x7fa	; 0x7fa <fputc>
 5c4:	21 10       	cpse	r2, r1
 5c6:	2a 94       	dec	r2
 5c8:	21 e0       	ldi	r18, 0x01	; 1
 5ca:	82 1a       	sub	r8, r18
 5cc:	91 08       	sbc	r9, r1
 5ce:	81 14       	cp	r8, r1
 5d0:	91 04       	cpc	r9, r1
 5d2:	71 f7       	brne	.-36     	; 0x5b0 <vfprintf+0x1a4>
 5d4:	e8 c0       	rjmp	.+464    	; 0x7a6 <vfprintf+0x39a>
 5d6:	84 36       	cpi	r24, 0x64	; 100
 5d8:	11 f0       	breq	.+4      	; 0x5de <vfprintf+0x1d2>
 5da:	89 36       	cpi	r24, 0x69	; 105
 5dc:	41 f5       	brne	.+80     	; 0x62e <vfprintf+0x222>
 5de:	f8 01       	movw	r30, r16
 5e0:	37 fe       	sbrs	r3, 7
 5e2:	07 c0       	rjmp	.+14     	; 0x5f2 <vfprintf+0x1e6>
 5e4:	60 81       	ld	r22, Z
 5e6:	71 81       	ldd	r23, Z+1	; 0x01
 5e8:	82 81       	ldd	r24, Z+2	; 0x02
 5ea:	93 81       	ldd	r25, Z+3	; 0x03
 5ec:	0c 5f       	subi	r16, 0xFC	; 252
 5ee:	1f 4f       	sbci	r17, 0xFF	; 255
 5f0:	08 c0       	rjmp	.+16     	; 0x602 <vfprintf+0x1f6>
 5f2:	60 81       	ld	r22, Z
 5f4:	71 81       	ldd	r23, Z+1	; 0x01
 5f6:	07 2e       	mov	r0, r23
 5f8:	00 0c       	add	r0, r0
 5fa:	88 0b       	sbc	r24, r24
 5fc:	99 0b       	sbc	r25, r25
 5fe:	0e 5f       	subi	r16, 0xFE	; 254
 600:	1f 4f       	sbci	r17, 0xFF	; 255
 602:	f3 2d       	mov	r31, r3
 604:	ff 76       	andi	r31, 0x6F	; 111
 606:	3f 2e       	mov	r3, r31
 608:	97 ff       	sbrs	r25, 7
 60a:	09 c0       	rjmp	.+18     	; 0x61e <vfprintf+0x212>
 60c:	90 95       	com	r25
 60e:	80 95       	com	r24
 610:	70 95       	com	r23
 612:	61 95       	neg	r22
 614:	7f 4f       	sbci	r23, 0xFF	; 255
 616:	8f 4f       	sbci	r24, 0xFF	; 255
 618:	9f 4f       	sbci	r25, 0xFF	; 255
 61a:	f0 68       	ori	r31, 0x80	; 128
 61c:	3f 2e       	mov	r3, r31
 61e:	2a e0       	ldi	r18, 0x0A	; 10
 620:	30 e0       	ldi	r19, 0x00	; 0
 622:	a3 01       	movw	r20, r6
 624:	0e 94 39 04 	call	0x872	; 0x872 <__ultoa_invert>
 628:	88 2e       	mov	r8, r24
 62a:	86 18       	sub	r8, r6
 62c:	45 c0       	rjmp	.+138    	; 0x6b8 <vfprintf+0x2ac>
 62e:	85 37       	cpi	r24, 0x75	; 117
 630:	31 f4       	brne	.+12     	; 0x63e <vfprintf+0x232>
 632:	23 2d       	mov	r18, r3
 634:	2f 7e       	andi	r18, 0xEF	; 239
 636:	b2 2e       	mov	r11, r18
 638:	2a e0       	ldi	r18, 0x0A	; 10
 63a:	30 e0       	ldi	r19, 0x00	; 0
 63c:	25 c0       	rjmp	.+74     	; 0x688 <vfprintf+0x27c>
 63e:	93 2d       	mov	r25, r3
 640:	99 7f       	andi	r25, 0xF9	; 249
 642:	b9 2e       	mov	r11, r25
 644:	8f 36       	cpi	r24, 0x6F	; 111
 646:	c1 f0       	breq	.+48     	; 0x678 <vfprintf+0x26c>
 648:	18 f4       	brcc	.+6      	; 0x650 <vfprintf+0x244>
 64a:	88 35       	cpi	r24, 0x58	; 88
 64c:	79 f0       	breq	.+30     	; 0x66c <vfprintf+0x260>
 64e:	b5 c0       	rjmp	.+362    	; 0x7ba <vfprintf+0x3ae>
 650:	80 37       	cpi	r24, 0x70	; 112
 652:	19 f0       	breq	.+6      	; 0x65a <vfprintf+0x24e>
 654:	88 37       	cpi	r24, 0x78	; 120
 656:	21 f0       	breq	.+8      	; 0x660 <vfprintf+0x254>
 658:	b0 c0       	rjmp	.+352    	; 0x7ba <vfprintf+0x3ae>
 65a:	e9 2f       	mov	r30, r25
 65c:	e0 61       	ori	r30, 0x10	; 16
 65e:	be 2e       	mov	r11, r30
 660:	b4 fe       	sbrs	r11, 4
 662:	0d c0       	rjmp	.+26     	; 0x67e <vfprintf+0x272>
 664:	fb 2d       	mov	r31, r11
 666:	f4 60       	ori	r31, 0x04	; 4
 668:	bf 2e       	mov	r11, r31
 66a:	09 c0       	rjmp	.+18     	; 0x67e <vfprintf+0x272>
 66c:	34 fe       	sbrs	r3, 4
 66e:	0a c0       	rjmp	.+20     	; 0x684 <vfprintf+0x278>
 670:	29 2f       	mov	r18, r25
 672:	26 60       	ori	r18, 0x06	; 6
 674:	b2 2e       	mov	r11, r18
 676:	06 c0       	rjmp	.+12     	; 0x684 <vfprintf+0x278>
 678:	28 e0       	ldi	r18, 0x08	; 8
 67a:	30 e0       	ldi	r19, 0x00	; 0
 67c:	05 c0       	rjmp	.+10     	; 0x688 <vfprintf+0x27c>
 67e:	20 e1       	ldi	r18, 0x10	; 16
 680:	30 e0       	ldi	r19, 0x00	; 0
 682:	02 c0       	rjmp	.+4      	; 0x688 <vfprintf+0x27c>
 684:	20 e1       	ldi	r18, 0x10	; 16
 686:	32 e0       	ldi	r19, 0x02	; 2
 688:	f8 01       	movw	r30, r16
 68a:	b7 fe       	sbrs	r11, 7
 68c:	07 c0       	rjmp	.+14     	; 0x69c <vfprintf+0x290>
 68e:	60 81       	ld	r22, Z
 690:	71 81       	ldd	r23, Z+1	; 0x01
 692:	82 81       	ldd	r24, Z+2	; 0x02
 694:	93 81       	ldd	r25, Z+3	; 0x03
 696:	0c 5f       	subi	r16, 0xFC	; 252
 698:	1f 4f       	sbci	r17, 0xFF	; 255
 69a:	06 c0       	rjmp	.+12     	; 0x6a8 <vfprintf+0x29c>
 69c:	60 81       	ld	r22, Z
 69e:	71 81       	ldd	r23, Z+1	; 0x01
 6a0:	80 e0       	ldi	r24, 0x00	; 0
 6a2:	90 e0       	ldi	r25, 0x00	; 0
 6a4:	0e 5f       	subi	r16, 0xFE	; 254
 6a6:	1f 4f       	sbci	r17, 0xFF	; 255
 6a8:	a3 01       	movw	r20, r6
 6aa:	0e 94 39 04 	call	0x872	; 0x872 <__ultoa_invert>
 6ae:	88 2e       	mov	r8, r24
 6b0:	86 18       	sub	r8, r6
 6b2:	fb 2d       	mov	r31, r11
 6b4:	ff 77       	andi	r31, 0x7F	; 127
 6b6:	3f 2e       	mov	r3, r31
 6b8:	36 fe       	sbrs	r3, 6
 6ba:	0d c0       	rjmp	.+26     	; 0x6d6 <vfprintf+0x2ca>
 6bc:	23 2d       	mov	r18, r3
 6be:	2e 7f       	andi	r18, 0xFE	; 254
 6c0:	a2 2e       	mov	r10, r18
 6c2:	89 14       	cp	r8, r9
 6c4:	58 f4       	brcc	.+22     	; 0x6dc <vfprintf+0x2d0>
 6c6:	34 fe       	sbrs	r3, 4
 6c8:	0b c0       	rjmp	.+22     	; 0x6e0 <vfprintf+0x2d4>
 6ca:	32 fc       	sbrc	r3, 2
 6cc:	09 c0       	rjmp	.+18     	; 0x6e0 <vfprintf+0x2d4>
 6ce:	83 2d       	mov	r24, r3
 6d0:	8e 7e       	andi	r24, 0xEE	; 238
 6d2:	a8 2e       	mov	r10, r24
 6d4:	05 c0       	rjmp	.+10     	; 0x6e0 <vfprintf+0x2d4>
 6d6:	b8 2c       	mov	r11, r8
 6d8:	a3 2c       	mov	r10, r3
 6da:	03 c0       	rjmp	.+6      	; 0x6e2 <vfprintf+0x2d6>
 6dc:	b8 2c       	mov	r11, r8
 6de:	01 c0       	rjmp	.+2      	; 0x6e2 <vfprintf+0x2d6>
 6e0:	b9 2c       	mov	r11, r9
 6e2:	a4 fe       	sbrs	r10, 4
 6e4:	0f c0       	rjmp	.+30     	; 0x704 <vfprintf+0x2f8>
 6e6:	fe 01       	movw	r30, r28
 6e8:	e8 0d       	add	r30, r8
 6ea:	f1 1d       	adc	r31, r1
 6ec:	80 81       	ld	r24, Z
 6ee:	80 33       	cpi	r24, 0x30	; 48
 6f0:	21 f4       	brne	.+8      	; 0x6fa <vfprintf+0x2ee>
 6f2:	9a 2d       	mov	r25, r10
 6f4:	99 7e       	andi	r25, 0xE9	; 233
 6f6:	a9 2e       	mov	r10, r25
 6f8:	09 c0       	rjmp	.+18     	; 0x70c <vfprintf+0x300>
 6fa:	a2 fe       	sbrs	r10, 2
 6fc:	06 c0       	rjmp	.+12     	; 0x70a <vfprintf+0x2fe>
 6fe:	b3 94       	inc	r11
 700:	b3 94       	inc	r11
 702:	04 c0       	rjmp	.+8      	; 0x70c <vfprintf+0x300>
 704:	8a 2d       	mov	r24, r10
 706:	86 78       	andi	r24, 0x86	; 134
 708:	09 f0       	breq	.+2      	; 0x70c <vfprintf+0x300>
 70a:	b3 94       	inc	r11
 70c:	a3 fc       	sbrc	r10, 3
 70e:	11 c0       	rjmp	.+34     	; 0x732 <vfprintf+0x326>
 710:	a0 fe       	sbrs	r10, 0
 712:	06 c0       	rjmp	.+12     	; 0x720 <vfprintf+0x314>
 714:	b2 14       	cp	r11, r2
 716:	88 f4       	brcc	.+34     	; 0x73a <vfprintf+0x32e>
 718:	28 0c       	add	r2, r8
 71a:	92 2c       	mov	r9, r2
 71c:	9b 18       	sub	r9, r11
 71e:	0e c0       	rjmp	.+28     	; 0x73c <vfprintf+0x330>
 720:	b2 14       	cp	r11, r2
 722:	60 f4       	brcc	.+24     	; 0x73c <vfprintf+0x330>
 724:	b6 01       	movw	r22, r12
 726:	80 e2       	ldi	r24, 0x20	; 32
 728:	90 e0       	ldi	r25, 0x00	; 0
 72a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <fputc>
 72e:	b3 94       	inc	r11
 730:	f7 cf       	rjmp	.-18     	; 0x720 <vfprintf+0x314>
 732:	b2 14       	cp	r11, r2
 734:	18 f4       	brcc	.+6      	; 0x73c <vfprintf+0x330>
 736:	2b 18       	sub	r2, r11
 738:	02 c0       	rjmp	.+4      	; 0x73e <vfprintf+0x332>
 73a:	98 2c       	mov	r9, r8
 73c:	21 2c       	mov	r2, r1
 73e:	a4 fe       	sbrs	r10, 4
 740:	10 c0       	rjmp	.+32     	; 0x762 <vfprintf+0x356>
 742:	b6 01       	movw	r22, r12
 744:	80 e3       	ldi	r24, 0x30	; 48
 746:	90 e0       	ldi	r25, 0x00	; 0
 748:	0e 94 fd 03 	call	0x7fa	; 0x7fa <fputc>
 74c:	a2 fe       	sbrs	r10, 2
 74e:	17 c0       	rjmp	.+46     	; 0x77e <vfprintf+0x372>
 750:	a1 fc       	sbrc	r10, 1
 752:	03 c0       	rjmp	.+6      	; 0x75a <vfprintf+0x34e>
 754:	88 e7       	ldi	r24, 0x78	; 120
 756:	90 e0       	ldi	r25, 0x00	; 0
 758:	02 c0       	rjmp	.+4      	; 0x75e <vfprintf+0x352>
 75a:	88 e5       	ldi	r24, 0x58	; 88
 75c:	90 e0       	ldi	r25, 0x00	; 0
 75e:	b6 01       	movw	r22, r12
 760:	0c c0       	rjmp	.+24     	; 0x77a <vfprintf+0x36e>
 762:	8a 2d       	mov	r24, r10
 764:	86 78       	andi	r24, 0x86	; 134
 766:	59 f0       	breq	.+22     	; 0x77e <vfprintf+0x372>
 768:	a1 fe       	sbrs	r10, 1
 76a:	02 c0       	rjmp	.+4      	; 0x770 <vfprintf+0x364>
 76c:	8b e2       	ldi	r24, 0x2B	; 43
 76e:	01 c0       	rjmp	.+2      	; 0x772 <vfprintf+0x366>
 770:	80 e2       	ldi	r24, 0x20	; 32
 772:	a7 fc       	sbrc	r10, 7
 774:	8d e2       	ldi	r24, 0x2D	; 45
 776:	b6 01       	movw	r22, r12
 778:	90 e0       	ldi	r25, 0x00	; 0
 77a:	0e 94 fd 03 	call	0x7fa	; 0x7fa <fputc>
 77e:	89 14       	cp	r8, r9
 780:	38 f4       	brcc	.+14     	; 0x790 <vfprintf+0x384>
 782:	b6 01       	movw	r22, r12
 784:	80 e3       	ldi	r24, 0x30	; 48
 786:	90 e0       	ldi	r25, 0x00	; 0
 788:	0e 94 fd 03 	call	0x7fa	; 0x7fa <fputc>
 78c:	9a 94       	dec	r9
 78e:	f7 cf       	rjmp	.-18     	; 0x77e <vfprintf+0x372>
 790:	8a 94       	dec	r8
 792:	f3 01       	movw	r30, r6
 794:	e8 0d       	add	r30, r8
 796:	f1 1d       	adc	r31, r1
 798:	80 81       	ld	r24, Z
 79a:	b6 01       	movw	r22, r12
 79c:	90 e0       	ldi	r25, 0x00	; 0
 79e:	0e 94 fd 03 	call	0x7fa	; 0x7fa <fputc>
 7a2:	81 10       	cpse	r8, r1
 7a4:	f5 cf       	rjmp	.-22     	; 0x790 <vfprintf+0x384>
 7a6:	22 20       	and	r2, r2
 7a8:	09 f4       	brne	.+2      	; 0x7ac <vfprintf+0x3a0>
 7aa:	42 ce       	rjmp	.-892    	; 0x430 <vfprintf+0x24>
 7ac:	b6 01       	movw	r22, r12
 7ae:	80 e2       	ldi	r24, 0x20	; 32
 7b0:	90 e0       	ldi	r25, 0x00	; 0
 7b2:	0e 94 fd 03 	call	0x7fa	; 0x7fa <fputc>
 7b6:	2a 94       	dec	r2
 7b8:	f6 cf       	rjmp	.-20     	; 0x7a6 <vfprintf+0x39a>
 7ba:	f6 01       	movw	r30, r12
 7bc:	86 81       	ldd	r24, Z+6	; 0x06
 7be:	97 81       	ldd	r25, Z+7	; 0x07
 7c0:	02 c0       	rjmp	.+4      	; 0x7c6 <vfprintf+0x3ba>
 7c2:	8f ef       	ldi	r24, 0xFF	; 255
 7c4:	9f ef       	ldi	r25, 0xFF	; 255
 7c6:	2b 96       	adiw	r28, 0x0b	; 11
 7c8:	e2 e1       	ldi	r30, 0x12	; 18
 7ca:	0c 94 b3 04 	jmp	0x966	; 0x966 <__epilogue_restores__>

000007ce <strnlen_P>:
 7ce:	fc 01       	movw	r30, r24
 7d0:	05 90       	lpm	r0, Z+
 7d2:	61 50       	subi	r22, 0x01	; 1
 7d4:	70 40       	sbci	r23, 0x00	; 0
 7d6:	01 10       	cpse	r0, r1
 7d8:	d8 f7       	brcc	.-10     	; 0x7d0 <strnlen_P+0x2>
 7da:	80 95       	com	r24
 7dc:	90 95       	com	r25
 7de:	8e 0f       	add	r24, r30
 7e0:	9f 1f       	adc	r25, r31
 7e2:	08 95       	ret

000007e4 <strnlen>:
 7e4:	fc 01       	movw	r30, r24
 7e6:	61 50       	subi	r22, 0x01	; 1
 7e8:	70 40       	sbci	r23, 0x00	; 0
 7ea:	01 90       	ld	r0, Z+
 7ec:	01 10       	cpse	r0, r1
 7ee:	d8 f7       	brcc	.-10     	; 0x7e6 <strnlen+0x2>
 7f0:	80 95       	com	r24
 7f2:	90 95       	com	r25
 7f4:	8e 0f       	add	r24, r30
 7f6:	9f 1f       	adc	r25, r31
 7f8:	08 95       	ret

000007fa <fputc>:
 7fa:	0f 93       	push	r16
 7fc:	1f 93       	push	r17
 7fe:	cf 93       	push	r28
 800:	df 93       	push	r29
 802:	fb 01       	movw	r30, r22
 804:	23 81       	ldd	r18, Z+3	; 0x03
 806:	21 fd       	sbrc	r18, 1
 808:	03 c0       	rjmp	.+6      	; 0x810 <fputc+0x16>
 80a:	8f ef       	ldi	r24, 0xFF	; 255
 80c:	9f ef       	ldi	r25, 0xFF	; 255
 80e:	2c c0       	rjmp	.+88     	; 0x868 <fputc+0x6e>
 810:	22 ff       	sbrs	r18, 2
 812:	16 c0       	rjmp	.+44     	; 0x840 <fputc+0x46>
 814:	46 81       	ldd	r20, Z+6	; 0x06
 816:	57 81       	ldd	r21, Z+7	; 0x07
 818:	24 81       	ldd	r18, Z+4	; 0x04
 81a:	35 81       	ldd	r19, Z+5	; 0x05
 81c:	42 17       	cp	r20, r18
 81e:	53 07       	cpc	r21, r19
 820:	44 f4       	brge	.+16     	; 0x832 <fputc+0x38>
 822:	a0 81       	ld	r26, Z
 824:	b1 81       	ldd	r27, Z+1	; 0x01
 826:	9d 01       	movw	r18, r26
 828:	2f 5f       	subi	r18, 0xFF	; 255
 82a:	3f 4f       	sbci	r19, 0xFF	; 255
 82c:	31 83       	std	Z+1, r19	; 0x01
 82e:	20 83       	st	Z, r18
 830:	8c 93       	st	X, r24
 832:	26 81       	ldd	r18, Z+6	; 0x06
 834:	37 81       	ldd	r19, Z+7	; 0x07
 836:	2f 5f       	subi	r18, 0xFF	; 255
 838:	3f 4f       	sbci	r19, 0xFF	; 255
 83a:	37 83       	std	Z+7, r19	; 0x07
 83c:	26 83       	std	Z+6, r18	; 0x06
 83e:	14 c0       	rjmp	.+40     	; 0x868 <fputc+0x6e>
 840:	8b 01       	movw	r16, r22
 842:	ec 01       	movw	r28, r24
 844:	fb 01       	movw	r30, r22
 846:	00 84       	ldd	r0, Z+8	; 0x08
 848:	f1 85       	ldd	r31, Z+9	; 0x09
 84a:	e0 2d       	mov	r30, r0
 84c:	09 95       	icall
 84e:	89 2b       	or	r24, r25
 850:	e1 f6       	brne	.-72     	; 0x80a <fputc+0x10>
 852:	d8 01       	movw	r26, r16
 854:	16 96       	adiw	r26, 0x06	; 6
 856:	8d 91       	ld	r24, X+
 858:	9c 91       	ld	r25, X
 85a:	17 97       	sbiw	r26, 0x07	; 7
 85c:	01 96       	adiw	r24, 0x01	; 1
 85e:	17 96       	adiw	r26, 0x07	; 7
 860:	9c 93       	st	X, r25
 862:	8e 93       	st	-X, r24
 864:	16 97       	sbiw	r26, 0x06	; 6
 866:	ce 01       	movw	r24, r28
 868:	df 91       	pop	r29
 86a:	cf 91       	pop	r28
 86c:	1f 91       	pop	r17
 86e:	0f 91       	pop	r16
 870:	08 95       	ret

00000872 <__ultoa_invert>:
 872:	fa 01       	movw	r30, r20
 874:	aa 27       	eor	r26, r26
 876:	28 30       	cpi	r18, 0x08	; 8
 878:	51 f1       	breq	.+84     	; 0x8ce <__ultoa_invert+0x5c>
 87a:	20 31       	cpi	r18, 0x10	; 16
 87c:	81 f1       	breq	.+96     	; 0x8de <__ultoa_invert+0x6c>
 87e:	e8 94       	clt
 880:	6f 93       	push	r22
 882:	6e 7f       	andi	r22, 0xFE	; 254
 884:	6e 5f       	subi	r22, 0xFE	; 254
 886:	7f 4f       	sbci	r23, 0xFF	; 255
 888:	8f 4f       	sbci	r24, 0xFF	; 255
 88a:	9f 4f       	sbci	r25, 0xFF	; 255
 88c:	af 4f       	sbci	r26, 0xFF	; 255
 88e:	b1 e0       	ldi	r27, 0x01	; 1
 890:	3e d0       	rcall	.+124    	; 0x90e <__stack+0xf>
 892:	b4 e0       	ldi	r27, 0x04	; 4
 894:	3c d0       	rcall	.+120    	; 0x90e <__stack+0xf>
 896:	67 0f       	add	r22, r23
 898:	78 1f       	adc	r23, r24
 89a:	89 1f       	adc	r24, r25
 89c:	9a 1f       	adc	r25, r26
 89e:	a1 1d       	adc	r26, r1
 8a0:	68 0f       	add	r22, r24
 8a2:	79 1f       	adc	r23, r25
 8a4:	8a 1f       	adc	r24, r26
 8a6:	91 1d       	adc	r25, r1
 8a8:	a1 1d       	adc	r26, r1
 8aa:	6a 0f       	add	r22, r26
 8ac:	71 1d       	adc	r23, r1
 8ae:	81 1d       	adc	r24, r1
 8b0:	91 1d       	adc	r25, r1
 8b2:	a1 1d       	adc	r26, r1
 8b4:	20 d0       	rcall	.+64     	; 0x8f6 <__ultoa_invert+0x84>
 8b6:	09 f4       	brne	.+2      	; 0x8ba <__ultoa_invert+0x48>
 8b8:	68 94       	set
 8ba:	3f 91       	pop	r19
 8bc:	2a e0       	ldi	r18, 0x0A	; 10
 8be:	26 9f       	mul	r18, r22
 8c0:	11 24       	eor	r1, r1
 8c2:	30 19       	sub	r19, r0
 8c4:	30 5d       	subi	r19, 0xD0	; 208
 8c6:	31 93       	st	Z+, r19
 8c8:	de f6       	brtc	.-74     	; 0x880 <__ultoa_invert+0xe>
 8ca:	cf 01       	movw	r24, r30
 8cc:	08 95       	ret
 8ce:	46 2f       	mov	r20, r22
 8d0:	47 70       	andi	r20, 0x07	; 7
 8d2:	40 5d       	subi	r20, 0xD0	; 208
 8d4:	41 93       	st	Z+, r20
 8d6:	b3 e0       	ldi	r27, 0x03	; 3
 8d8:	0f d0       	rcall	.+30     	; 0x8f8 <__ultoa_invert+0x86>
 8da:	c9 f7       	brne	.-14     	; 0x8ce <__ultoa_invert+0x5c>
 8dc:	f6 cf       	rjmp	.-20     	; 0x8ca <__ultoa_invert+0x58>
 8de:	46 2f       	mov	r20, r22
 8e0:	4f 70       	andi	r20, 0x0F	; 15
 8e2:	40 5d       	subi	r20, 0xD0	; 208
 8e4:	4a 33       	cpi	r20, 0x3A	; 58
 8e6:	18 f0       	brcs	.+6      	; 0x8ee <__ultoa_invert+0x7c>
 8e8:	49 5d       	subi	r20, 0xD9	; 217
 8ea:	31 fd       	sbrc	r19, 1
 8ec:	40 52       	subi	r20, 0x20	; 32
 8ee:	41 93       	st	Z+, r20
 8f0:	02 d0       	rcall	.+4      	; 0x8f6 <__ultoa_invert+0x84>
 8f2:	a9 f7       	brne	.-22     	; 0x8de <__ultoa_invert+0x6c>
 8f4:	ea cf       	rjmp	.-44     	; 0x8ca <__ultoa_invert+0x58>
 8f6:	b4 e0       	ldi	r27, 0x04	; 4
 8f8:	a6 95       	lsr	r26
 8fa:	97 95       	ror	r25
 8fc:	87 95       	ror	r24
 8fe:	77 95       	ror	r23
 900:	67 95       	ror	r22
 902:	ba 95       	dec	r27
 904:	c9 f7       	brne	.-14     	; 0x8f8 <__ultoa_invert+0x86>
 906:	00 97       	sbiw	r24, 0x00	; 0
 908:	61 05       	cpc	r22, r1
 90a:	71 05       	cpc	r23, r1
 90c:	08 95       	ret
 90e:	9b 01       	movw	r18, r22
 910:	ac 01       	movw	r20, r24
 912:	0a 2e       	mov	r0, r26
 914:	06 94       	lsr	r0
 916:	57 95       	ror	r21
 918:	47 95       	ror	r20
 91a:	37 95       	ror	r19
 91c:	27 95       	ror	r18
 91e:	ba 95       	dec	r27
 920:	c9 f7       	brne	.-14     	; 0x914 <__stack+0x15>
 922:	62 0f       	add	r22, r18
 924:	73 1f       	adc	r23, r19
 926:	84 1f       	adc	r24, r20
 928:	95 1f       	adc	r25, r21
 92a:	a0 1d       	adc	r26, r0
 92c:	08 95       	ret

0000092e <__prologue_saves__>:
 92e:	2f 92       	push	r2
 930:	3f 92       	push	r3
 932:	4f 92       	push	r4
 934:	5f 92       	push	r5
 936:	6f 92       	push	r6
 938:	7f 92       	push	r7
 93a:	8f 92       	push	r8
 93c:	9f 92       	push	r9
 93e:	af 92       	push	r10
 940:	bf 92       	push	r11
 942:	cf 92       	push	r12
 944:	df 92       	push	r13
 946:	ef 92       	push	r14
 948:	ff 92       	push	r15
 94a:	0f 93       	push	r16
 94c:	1f 93       	push	r17
 94e:	cf 93       	push	r28
 950:	df 93       	push	r29
 952:	cd b7       	in	r28, 0x3d	; 61
 954:	de b7       	in	r29, 0x3e	; 62
 956:	ca 1b       	sub	r28, r26
 958:	db 0b       	sbc	r29, r27
 95a:	0f b6       	in	r0, 0x3f	; 63
 95c:	f8 94       	cli
 95e:	de bf       	out	0x3e, r29	; 62
 960:	0f be       	out	0x3f, r0	; 63
 962:	cd bf       	out	0x3d, r28	; 61
 964:	09 94       	ijmp

00000966 <__epilogue_restores__>:
 966:	2a 88       	ldd	r2, Y+18	; 0x12
 968:	39 88       	ldd	r3, Y+17	; 0x11
 96a:	48 88       	ldd	r4, Y+16	; 0x10
 96c:	5f 84       	ldd	r5, Y+15	; 0x0f
 96e:	6e 84       	ldd	r6, Y+14	; 0x0e
 970:	7d 84       	ldd	r7, Y+13	; 0x0d
 972:	8c 84       	ldd	r8, Y+12	; 0x0c
 974:	9b 84       	ldd	r9, Y+11	; 0x0b
 976:	aa 84       	ldd	r10, Y+10	; 0x0a
 978:	b9 84       	ldd	r11, Y+9	; 0x09
 97a:	c8 84       	ldd	r12, Y+8	; 0x08
 97c:	df 80       	ldd	r13, Y+7	; 0x07
 97e:	ee 80       	ldd	r14, Y+6	; 0x06
 980:	fd 80       	ldd	r15, Y+5	; 0x05
 982:	0c 81       	ldd	r16, Y+4	; 0x04
 984:	1b 81       	ldd	r17, Y+3	; 0x03
 986:	aa 81       	ldd	r26, Y+2	; 0x02
 988:	b9 81       	ldd	r27, Y+1	; 0x01
 98a:	ce 0f       	add	r28, r30
 98c:	d1 1d       	adc	r29, r1
 98e:	0f b6       	in	r0, 0x3f	; 63
 990:	f8 94       	cli
 992:	de bf       	out	0x3e, r29	; 62
 994:	0f be       	out	0x3f, r0	; 63
 996:	cd bf       	out	0x3d, r28	; 61
 998:	ed 01       	movw	r28, r26
 99a:	08 95       	ret

0000099c <_exit>:
 99c:	f8 94       	cli

0000099e <__stop_program>:
 99e:	ff cf       	rjmp	.-2      	; 0x99e <__stop_program>
